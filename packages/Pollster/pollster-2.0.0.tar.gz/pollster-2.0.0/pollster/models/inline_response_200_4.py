# coding: utf-8

from pprint import pformat
from six import iteritems
import re


class InlineResponse2004(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, cursor=None, next_cursor=None, count=None, items=None):
        """
        InlineResponse2004 - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'cursor': 'str',
            'next_cursor': 'str',
            'count': 'int',
            'items': 'list[Question]'
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'next_cursor': 'next_cursor',
            'count': 'count',
            'items': 'items'
        }

        self._cursor = cursor
        self._next_cursor = next_cursor
        self._count = count
        self._items = items


    @property
    def cursor(self):
        """
        Gets the cursor of this InlineResponse2004.
        Special string to return the same items in this Array in a future request

        :return: The cursor of this InlineResponse2004.
        :rtype: str
        """
        return self._cursor

    @property
    def next_cursor(self):
        """
        Gets the next_cursor of this InlineResponse2004.
        Special string to return the following items in this Array in a future request

        :return: The next_cursor of this InlineResponse2004.
        :rtype: str
        """
        return self._next_cursor

    @property
    def count(self):
        """
        Gets the count of this InlineResponse2004.
        Total number of Question objects matching this search

        :return: The count of this InlineResponse2004.
        :rtype: int
        """
        return self._count

    @property
    def items(self):
        """
        Gets the items of this InlineResponse2004.


        :return: The items of this InlineResponse2004.
        :rtype: list[Question]
        """
        return self._items

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
