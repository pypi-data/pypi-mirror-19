# coding: utf-8

from pprint import pformat
from six import iteritems
import re


class PollQuestionResponses(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, text=None, pollster_label=None, value=None):
        """
        PollQuestionResponses - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'text': 'str',
            'pollster_label': 'str',
            'value': 'float'
        }

        self.attribute_map = {
            'text': 'text',
            'pollster_label': 'pollster_label',
            'value': 'value'
        }

        self._text = text
        self._pollster_label = pollster_label
        self._value = value


    @property
    def text(self):
        """
        Gets the text of this PollQuestionResponses.
        Prompt the survey house presented to the respondent. For instance: `Hillary Clinton, the Democrat`

        :return: The text of this PollQuestionResponses.
        :rtype: str
        """
        return self._text

    @property
    def pollster_label(self):
        """
        Gets the pollster_label of this PollQuestionResponses.
        One of `poll_question.question.responses[*].label`: a label chosen by Pollster editors. Often, two `text` entries will have the same `pollster_label`. Rarely, the `pollster_label` may be `null`.

        :return: The pollster_label of this PollQuestionResponses.
        :rtype: str
        """
        return self._pollster_label

    @property
    def value(self):
        """
        Gets the value of this PollQuestionResponses.
        Value reported by the survey house, out of 100. Survey houses typically weight respondents, meaning this you cannot guess the number of respondents from this value.

        :return: The value of this PollQuestionResponses.
        :rtype: float
        """
        return self._value

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
