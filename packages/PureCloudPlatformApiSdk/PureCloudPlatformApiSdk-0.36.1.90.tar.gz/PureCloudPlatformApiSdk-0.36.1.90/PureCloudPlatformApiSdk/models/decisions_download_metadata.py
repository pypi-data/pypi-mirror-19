# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems
import re


class DecisionsDownloadMetadata(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        DecisionsDownloadMetadata - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'name': 'str',
            'start_date': 'datetime',
            'end_date': 'datetime',
            'description': 'str',
            'size_bytes': 'int',
            'last_modified_date': 'datetime',
            'self_uri': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'start_date': 'startDate',
            'end_date': 'endDate',
            'description': 'description',
            'size_bytes': 'sizeBytes',
            'last_modified_date': 'lastModifiedDate',
            'self_uri': 'selfUri'
        }

        self._id = None
        self._name = None
        self._start_date = None
        self._end_date = None
        self._description = None
        self._size_bytes = None
        self._last_modified_date = None
        self._self_uri = None

    @property
    def id(self):
        """
        Gets the id of this DecisionsDownloadMetadata.
        The globally unique identifier for the object.

        :return: The id of this DecisionsDownloadMetadata.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this DecisionsDownloadMetadata.
        The globally unique identifier for the object.

        :param id: The id of this DecisionsDownloadMetadata.
        :type: str
        """
        
        self._id = id

    @property
    def name(self):
        """
        Gets the name of this DecisionsDownloadMetadata.


        :return: The name of this DecisionsDownloadMetadata.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this DecisionsDownloadMetadata.


        :param name: The name of this DecisionsDownloadMetadata.
        :type: str
        """
        
        self._name = name

    @property
    def start_date(self):
        """
        Gets the start_date of this DecisionsDownloadMetadata.
        The start date on the data file. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :return: The start_date of this DecisionsDownloadMetadata.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """
        Sets the start_date of this DecisionsDownloadMetadata.
        The start date on the data file. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :param start_date: The start_date of this DecisionsDownloadMetadata.
        :type: datetime
        """
        
        self._start_date = start_date

    @property
    def end_date(self):
        """
        Gets the end_date of this DecisionsDownloadMetadata.
        The end date on the data file. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :return: The end_date of this DecisionsDownloadMetadata.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """
        Sets the end_date of this DecisionsDownloadMetadata.
        The end date on the data file. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :param end_date: The end_date of this DecisionsDownloadMetadata.
        :type: datetime
        """
        
        self._end_date = end_date

    @property
    def description(self):
        """
        Gets the description of this DecisionsDownloadMetadata.
        The description of the file

        :return: The description of this DecisionsDownloadMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this DecisionsDownloadMetadata.
        The description of the file

        :param description: The description of this DecisionsDownloadMetadata.
        :type: str
        """
        
        self._description = description

    @property
    def size_bytes(self):
        """
        Gets the size_bytes of this DecisionsDownloadMetadata.
        The size of the file

        :return: The size_bytes of this DecisionsDownloadMetadata.
        :rtype: int
        """
        return self._size_bytes

    @size_bytes.setter
    def size_bytes(self, size_bytes):
        """
        Sets the size_bytes of this DecisionsDownloadMetadata.
        The size of the file

        :param size_bytes: The size_bytes of this DecisionsDownloadMetadata.
        :type: int
        """
        
        self._size_bytes = size_bytes

    @property
    def last_modified_date(self):
        """
        Gets the last_modified_date of this DecisionsDownloadMetadata.
        The last modified date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :return: The last_modified_date of this DecisionsDownloadMetadata.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """
        Sets the last_modified_date of this DecisionsDownloadMetadata.
        The last modified date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :param last_modified_date: The last_modified_date of this DecisionsDownloadMetadata.
        :type: datetime
        """
        
        self._last_modified_date = last_modified_date

    @property
    def self_uri(self):
        """
        Gets the self_uri of this DecisionsDownloadMetadata.
        The URI for this object

        :return: The self_uri of this DecisionsDownloadMetadata.
        :rtype: str
        """
        return self._self_uri

    @self_uri.setter
    def self_uri(self, self_uri):
        """
        Sets the self_uri of this DecisionsDownloadMetadata.
        The URI for this object

        :param self_uri: The self_uri of this DecisionsDownloadMetadata.
        :type: str
        """
        
        self._self_uri = self_uri

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

