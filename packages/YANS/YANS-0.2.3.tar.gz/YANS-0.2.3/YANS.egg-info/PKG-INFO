Metadata-Version: 1.1
Name: YANS
Version: 0.2.3
Summary: Yet Another Network Simulator
Home-page: https://github.com/kennethjiang/YANS
Author: Kenneth Jiang
Author-email: kenneth.jiang@gmail.com
License: Copyright 2017 Kenneth Jiang

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
Description: ===============================
        YANS
        ===============================
        
        .. image:: https://badge.fury.io/py/YANS.png
            :target: http://badge.fury.io/py/YANS
        
        .. image:: https://travis-ci.org/kennethjiang/YANS.png?branch=master
                :target: https://travis-ci.org/kennethjiang/YANS
        
        
        **Yet Another Network Simulator**
        
        YANS is a `Docker <https://www.docker.com/>`_-based network simulator. It is lightening-fast. The screenplay below demonstrates that YANS can launch a simulated network in **under 3 seconds**.
        
        .. image:: https://github.com/kennethjiang/YANS/raw/master/screenplay.gif
           :height: 512 px
           :width: 499 px
           :scale: 50 %
        
        0. Install prerequisites:
        ==========================
        
        Mac OS X
        
        * `Docker <https://docs.docker.com/engine/installation/mac/>`__
        * `Docker Machine <https://docs.docker.com/machine/install-machine/>`__
        
        Ubuntu
        
        * `Docker <https://docs.docker.com/engine/installation/linux/ubuntulinux/>`__
        * ``sudo apt install bridge-utils``
        
        
        1. Install YANS
        =====================
        
        .. code:: bash
        
            pip install YANS
        
        
        2. Create a file named ``topo.yaml``
        =======================================
        
        .. code::
        
            links:
                - name: link1
                  nodes:
                     - node1
                     - node2
                - name: link2
                  nodes:
                     - node1
                - name: link3
        
        
        3. Go!
        ============
        
        Linux
        
            sudo yans -t <path_to_topo.yaml> up
        
        
        Mac OS X
        
            yans -t <path_to_topo.yaml> up
        
        
        Requirements
        ===============
        
        - Python >= 2.6 or >= 3.3
        
        License
        ================
        
        MIT licensed. See the bundled `LICENSE <https://github.com/kennethjiang/yans/blob/master/LICENSE>`_ file for more details.
        
Keywords: network simulator
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
