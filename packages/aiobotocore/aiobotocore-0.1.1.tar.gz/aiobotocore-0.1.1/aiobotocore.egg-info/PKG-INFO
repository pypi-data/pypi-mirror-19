Metadata-Version: 1.1
Name: aiobotocore
Version: 0.1.1
Summary: UNKNOWN
Home-page: https://github.com/aio-libs/aiobotocore
Author: Nikolay Novik
Author-email: nickolainovik@gmail.com
License: Apache 2
Download-URL: https://pypi.python.org/pypi/aiobotocore
Description: aiobotocore
        ===========
        .. image:: https://travis-ci.org/aio-libs/aiobotocore.svg?branch=master
            :target: https://travis-ci.org/aio-libs/aiobotocore
        
        Async client for amazon services using botocore_ and aiohttp_/asyncio_.
        
        Main purpose of this library to support amazon s3 api, but other services
        should work (may be with minor fixes). For now we have tested
        only upload/download api for s3, other users report that SQS and Dynamo
        services work also. More tests coming soon.
        
        
        Install
        -------
        ::
        
            $ pip install aiobotocore
        
        
        Basic Example
        -------------
        
        .. code:: python
        
            import asyncio
            import aiobotocore
        
            AWS_ACCESS_KEY_ID = "xxx"
            AWS_SECRET_ACCESS_KEY = "xxx"
        
        
            @asyncio.coroutine
            def go(loop):
        
                bucket = 'dataintake'
                filename = 'dummy.bin'
                folder = 'aiobotocore'
                key = '{}/{}'.format(folder, filename)
        
                session = aiobotocore.get_session(loop=loop)
                client = session.create_client('s3', region_name='us-west-2',
                                               aws_secret_access_key=AWS_SECRET_ACCESS_KEY,
                                               aws_access_key_id=AWS_ACCESS_KEY_ID)
                # upload object to amazon s3
                data = b'\x01'*1024
                resp = yield from client.put_object(Bucket=bucket,
                                                    Key=key,
                                                    Body=data)
                print(resp)
        
                # getting s3 object properties of file we just uploaded
                resp = yield from client.get_object_acl(Bucket=bucket, Key=key)
                print(resp)
        
                # delete object from s3
                resp = yield from client.delete_object(Bucket=bucket, Key=key)
                print(resp)
        
            loop = asyncio.get_event_loop()
            loop.run_until_complete(go(loop))
        
        
        Run Tests
        ---------
        
        Make sure you have development requirements installed and your amazon key and
        secret accessible via environment variables:
        
        ::
        
            $ cd aiobotocore
            $ export AWS_ACCESS_KEY_ID=xxx
            $ export AWS_SECRET_ACCESS_KEY=xxx
            $ pip install -Ur requirements-dev.txt
        
        Execute tests suite:
        
        ::
        
            $ py.test -v tests
        
        
        Mailing List
        ------------
        
        https://groups.google.com/forum/#!forum/aio-libs
        
        
        Requirements
        ------------
        * Python_ 3.4+
        * aiohttp_
        * botocore_
        
        .. _Python: https://www.python.org
        .. _asyncio: http://docs.python.org/3.4/library/asyncio.html
        .. _botocore: https://github.com/boto/botocore
        .. _aiohttp: https://github.com/KeepSafe/aiohttp
        
        Changes
        -------
        
        0.1.1 (2017-01-16)
        ^^^^^^^^^^^^^^^^^^
        * botocore updated to version 1.5.0
        
        0.1.0 (2017-01-12)
        ^^^^^^^^^^^^^^^^^^
        * Pass timeout to aiohttp.request to enforce read_timeout #86 (thanks @vharitonsky)
          (bumped up to next semantic version due to read_timeout enabling change)
        
        0.0.6 (2016-11-19)
        ^^^^^^^^^^^^^^^^^^
        
        * Added enforcement of plain response #57 (thanks @rymir)
        * botocore updated to version 1.4.73 #74 (thanks @vas3k)
        
        
        0.0.5 (2016-06-01)
        ^^^^^^^^^^^^^^^^^^
        
        * Initial alpha release
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Environment :: Web Environment
Classifier: Development Status :: 3 - Alpha
