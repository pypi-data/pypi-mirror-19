Metadata-Version: 2.0
Name: boatswain
Version: 0.4.0
Summary: Yaml based way to build Docker images.
Home-page: https://github.com/nlesc-sherlock/boatswain
Author: Berend Weel
Author-email: b.weel@esiencecenter.nl
License: Apache Software License
Platform: any
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Development Status :: 3 - Alpha
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: PyYAML (>=3.12,<4.0)
Requires-Dist: docker (<3.0.0,>=2.0.0)
Requires-Dist: progressbar2 (>=3.12.0,<4.0.0)
Provides-Extra: registry
Requires-Dist: docker-registry-client (>=0.5.1); extra == 'registry'
Provides-Extra: test
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: pytest-flake8; extra == 'test'

.. image:: https://travis-ci.org/nlesc-sherlock/boatswain.svg?branch=master
    :target: https://travis-ci.org/nlesc-sherlock/boatswain


Boatswain
=========
Boatswain is a simple build system for docker images.

It is especially usefull when you have multiple docker images that
depend on each other.


Installation
============

Boatswain is a simple python script you can install with pip

::

    $ pip install boatswain


Usage
=====
Create a file called boatswain.yml for your project with the following
syntax, which is heavily based on docker-compose.

.. code-block:: yaml

    version: 1.0                    # The version of the boatswain yaml
    organisation: boatswain         # Your dockerhub organisation
    images:
        image1:pytest:              # the key will be used to tag the image
            context: docker/image1  # The path of the dockerfile
        image2:pytest:
            context: docker/image2
            from: image1:pytest     # This image depends on the other image
        image3:pytest:
            context: docker/image3
            from: image2:pytest
        image4:pytest:
            context: docker/image4
            tag: image12:pytest     # This image will be tagged with this




2017-02-09:
    Progress timer now increases every second
    Improved error reporting (No longer uses an exception)

2017-02-08:
   Added a whole bunch of tests
   Added the clean command
   Changed file layout from recursive to using from

