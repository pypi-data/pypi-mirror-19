Metadata-Version: 1.1
Name: cornice-swagger
Version: 0.3.0
Summary: Generate swagger from a Cornice application
Home-page: https://github.com/Cornices/cornice.ext.swagger
Author: Josip Delic
Author-email: delijati@gmx.net
License: Apache License (2.0)
Description: Cornice Swagger
        ===============
        
        |pypi| |travis| |master-coverage| |slack|
        
        .. |travis| image::  https://travis-ci.org/Cornices/cornice.ext.swagger.png
            :target: https://travis-ci.org/Cornices/cornice.ext.swagger
        
        .. |master-coverage| image:: https://coveralls.io/repos/github/Cornices/cornice.ext.swagger/badge.svg?branch=master
            :target: https://coveralls.io/github/Cornices/cornice.ext.swagger?branch=master
        
        .. |pypi| image:: https://img.shields.io/pypi/v/cornice_swagger.svg
            :target: https://pypi.python.org/pypi/cornice_swagger
        
        .. |slack| image:: https://img.shields.io/badge/slack-chat-blue.svg
            :target: https://corniceswagger.herokuapp.com/
        
        
        *Cornice extension to generate OpenAPI/Swagger Specification*
        
        * Git Repository and issue tracker: https://github.com/Cornices/cornice.ext.swagger
        * Full Documentation: https://cornices.github.io/cornice.ext.swagger
        
        
        This module create a full 
        `OpenAPI/Swagger 2.0 compliant spec <https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md>`_ 
        maximizing the extracted documentation data from functional code,
        while allowing users to directly specify parts of the spec.
        
        
        Scaffold
        --------
        
        To get easier started there is a scaffold with can be used.::
        
           $ cookiecutter https://github.com/delijati/cookiecutter-cornice_swagger.git
           $ cd demo
           $ pip install -e .
           $ cd demo/static
           $ bower install
        
        
        CHANGES
        =======
        
        0.3.0 (2017-01-17)
        ------------------
        
        **Api**
        
        - Use `cornice_swagger.swagger.CorniceSwagger` class to generate
          the swagger document rather then `generate_swagger_spec`.
        - Allow overriding extractors in the application.
        - Schemas are now broken into JSON pointers only if specified.
        - Allow documenting responses via `response_schemas` view attribute.
        - Allow documenting tags via `tags` view attribute or using a
          `default_tags` parameter when calling the generator.
        
        **Internals**
        
        - Decouples converters from path generators.
        - Make considerable changes in the package organisation.
        - Reach 100% coverage on tests.
        
        **Documentation**
        
        - Create a Sphinx documentation hosted on
          https://cornices.github.io/cornice.ext.swagger.
        
        
        0.2.1 (2016-12-10)
        ------------------
        
        - Check if schema is not instantiated.
        - Add support for query parameter description. [ridha]
        
        
        0.2 (2016-11-08)
        ----------------
        
        - Pypi release.
        - Point scaffold doc to right url.
        
        
        0.1 (2016-11-05)
        ----------------
        
        - First release for new cornice 2.0
        
Keywords: web services
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: License :: OSI Approved :: Apache Software License
