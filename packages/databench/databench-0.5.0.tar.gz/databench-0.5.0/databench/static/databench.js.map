{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/src/connection.js","js/src/main.js","js/src/ui.js","node_modules/websocket/lib/browser.js","node_modules/websocket/lib/version.js","node_modules/websocket/package.json"],"names":[],"mappings":"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":"databench.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","let WebSocket;\nif (typeof WebSocket === 'undefined') {\n  WebSocket = require('websocket').w3cwebsocket;  // eslint-disable-line\n}\n\n/**\n * Connection to the backend.\n *\n * The standard template is to create a connection first, then use it to\n * wire all UI elements, to add custom callback functions and at last to run\n * {@link Connection#connect|connect()} to create a WebSocket connection to the backend\n * server (see example below).\n *\n * The other two essential functions to know about are\n * {@link Connection#on|on()} and {@link Connection#emit|emit()}.\n *\n * @example\n * var d = new Databench.Connection();\n * Databench.ui.wire(d);\n * // put custom d.on() methods here\n * d.connect();\n */\nclass Connection {\n  /**\n   * @param  {String} [analysisId=null]  Specify an analysis id or null to have one generated.\n   *                                     The connection will try to connect to a previously created\n   *                                     analysis with that id.\n   * @param  {String} [wsUrl=null]       URL of WebSocket endpoint or null to guess it.\n   * @param  {String} [requestArgs=null] `search` part of request url or null to take from\n   *                                     `window.location.search`.\n   */\n  constructor(analysisId = null, wsUrl = null, requestArgs = null) {\n    this.analysisId = analysisId;\n    this.wsUrl = wsUrl || Connection.guessWSUrl();\n    this.requestArgs = (requestArgs == null && (typeof window !== 'undefined')) ?\n                        window.location.search : requestArgs;\n\n    if (!this.wsUrl) {\n      throw Error('Need a wsUrl.');\n    }\n\n    this.errorCB = msg => (msg != null ? console.log(`connection error: ${msg}`) : null);\n    this.onCallbacks = [];\n    this._onCallbacksOptimized = null;\n    this.onProcessCallbacks = {};\n\n    this.wsReconnectAttempt = 0;\n    this.wsReconnectDelay = 100.0;\n\n    this.socket = null;\n    this.socketCheckOpen = null;\n  }\n\n  static guessWSUrl() {\n    if (typeof location === 'undefined') return null;\n    const WSProtocol = location.origin.startsWith('https://') ? 'wss' : 'ws';\n    const path = location.pathname.substring(0, location.pathname.lastIndexOf('/'));\n    return `${WSProtocol}://${document.domain}:${location.port}${path}/ws`;\n  }\n\n  /** initialize connection */\n  connect() {\n    this.socket = new WebSocket(this.wsUrl);\n\n    this.socketCheckOpen = setInterval(this.wsCheckOpen.bind(this), 2000);\n    this.socket.onopen = this.wsOnOpen.bind(this);\n    this.socket.onclose = this.wsOnClose.bind(this);\n    this.socket.onmessage = this.wsOnMessage.bind(this);\n    return this;\n  }\n\n  /** close connection */\n  disconnect() {\n    this.socket.onclose = null;\n    this.socket.close();\n    this.socket = null;\n  }\n\n  wsCheckOpen() {\n    if (this.socket.readyState === this.socket.CONNECTING) {\n      return;\n    }\n    if (this.socket.readyState !== this.socket.OPEN) {\n      this.errorCB(\n        'Connection could not be opened. ' +\n        'Please <a href=\"javascript:location.reload(true);\" ' +\n        'class=\"alert-link\">reload</a> this page to try again.'\n      );\n    }\n    clearInterval(this.socketCheckOpen);\n  }\n\n  wsOnOpen() {\n    this.wsReconnectAttempt = 0;\n    this.wsReconnectDelay = 100.0;\n    this.errorCB();  // clear errors\n    this.socket.send(JSON.stringify({\n      __connect: this.analysisId,\n      __request_args: this.requestArgs,  // eslint-disable-line camelcase\n    }));\n  }\n\n  wsOnClose() {\n    clearInterval(this.socketCheckOpen);\n\n    this.wsReconnectAttempt += 1;\n    this.wsReconnectDelay *= 2;\n\n    if (this.wsReconnectAttempt > 3) {\n      this.errorCB(\n        'Connection closed. ' +\n        'Please <a href=\"javascript:location.reload(true);\" ' +\n        'class=\"alert-link\">reload</a> this page to reconnect.'\n      );\n      return;\n    }\n\n    const actualDelay = 0.7 * this.wsReconnectDelay + 0.3 * Math.random() *\n                        this.wsReconnectDelay;\n    console.log(`WebSocket reconnect attempt ${this.wsReconnectAttempt} ` +\n                `in ${actualDelay.toFixed(0)}ms.`);\n    setTimeout(this.connect.bind(this), actualDelay);\n  }\n\n  wsOnMessage(event) {\n    const message = JSON.parse(event.data);\n\n    // connect response\n    if (message.signal === '__connect') {\n      this.analysisId = message.load.analysis_id;\n    }\n\n    // processes\n    if (message.signal === '__process') {\n      const id = message.load.id;\n      const status = message.load.status;\n      this.onProcessCallbacks[id].map(cb => cb(status));\n    }\n\n    // normal message\n    if (this._onCallbacksOptimized === null) this.optimizeOnCallbacks();\n    if (message.signal in this._onCallbacksOptimized) {\n      this._onCallbacksOptimized[message.signal].map(cb => cb(message.load));\n    }\n  }\n\n  optimizeOnCallbacks() {\n    this._onCallbacksOptimized = {};\n    this.onCallbacks.forEach(({ signal, callback }) => {\n      if (typeof signal === 'string') {\n        if (!(signal in this._onCallbacksOptimized)) {\n          this._onCallbacksOptimized[signal] = [];\n        }\n        this._onCallbacksOptimized[signal].push(callback);\n      } else if (typeof signal === 'object') {\n        Object.keys(signal).forEach(signalName => {\n          const entryName = signal[signalName];\n          const filteredCallback = data => {\n            if (data.hasOwnProperty(entryName)) {\n              callback(data[entryName]);\n            }\n          };\n\n          if (!(signalName in this._onCallbacksOptimized)) {\n            this._onCallbacksOptimized[signalName] = [];\n          }\n\n          // only use the filtered callback if the entry was not empty\n          if (entryName) {\n            this._onCallbacksOptimized[signalName].push(filteredCallback);\n          } else {\n            this._onCallbacksOptimized[signalName].push(callback);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Register a callback that listens for a signal.\n   *\n   * The signal can be a simple string (the name for a signal/action), but it\n   * can also be an Object of the form `{data: 'current_value'}` which would\n   * trigger on `data` actions that are sending a JSON dictionary that contains\n   * the key `current_value`. In this case, the value that is\n   * given to the callback function is the value assigned to `current_value`.\n   *\n   * @example\n   * d.on('data', value => { console.log(value); });\n   * // If the backend sends an action called 'data' with a message\n   * // {current_value: 3.0}, this function would log `{current_value: 3.0}`.\n   *\n   * @example\n   * d.on({data: 'current_value'}, value => { console.log(value); });\n   * // If the backend sends an action called 'data' with a\n   * // message {current_value: 3.0}, this function would log `3.0`.\n   * // This callback is not triggered when the message does not contain a\n   * // `current_value` key.\n   *\n   * @param  {string|Object}   signal   Signal name to listen for.\n   * @param  {Function}        callback A callback function that takes the attached data.\n   * @return {Connection}      this\n   */\n  on(signal, callback) {\n    this.onCallbacks.push({ signal, callback });\n    this._onCallbacksOptimized = null;\n    return this;\n  }\n\n  /**\n   * Emit a signal/action to the backend.\n   * @param  {string}                   signalName A signal name. Usually an action name.\n   * @param  {string|Object|Array|null} message    Payload attached to the action.\n   * @return {Connection}                          this\n   */\n  emit(signalName, message) {\n    if (this.socket == null || this.socket.readyState !== this.socket.OPEN) {\n      setTimeout(() => this.emit(signalName, message), 5);\n      return this;\n    }\n    this.socket.send(JSON.stringify({ signal: signalName, load: message }));\n    return this;\n  }\n\n  onProcess(processID, callback) {\n    if (!(processID in this.onProcessCallbacks)) {\n      this.onProcessCallbacks[processID] = [];\n    }\n    this.onProcessCallbacks[processID].push(callback);\n    return this;\n  }\n}\n\nexport { Connection };\n","/**\n * Databench\n */\n\nimport * as ui from './ui';\nimport { Connection } from './connection';\n\n// create a public interface\nif (typeof window !== 'undefined') {\n  window.Databench = { ui, Connection };\n}\nexport { ui, Connection };\n","/**\n * This is a basic set of UI elements to create analyses without having to add\n * frontend frameworks like Angular or React.\n *\n * @module ui\n */\n\n\n/**\n * Abstract class for user interface elements which provides general helpers\n * to determine the action name from an HTML tag and a way to modify the message\n * that is sent with actions of wired elements.\n *\n * The constructor adds the variables `actionName` and `wireSignal` using\n * {@link module:ui~UIElement.determineActionName|determineActionName()} and\n * {@link module:ui~UIElement.determineWireSignal|determineWireSignal()}\n * respectively.\n * It also adds `this` UI element to the DOM node at `databenchUI`.\n */\nclass UIElement {\n  /**\n   * @param  {HTMLElement} node An HTML element.\n   */\n  constructor(node) {\n    this.node = node;\n    this.node.databenchUI = this;\n\n    this.actionName = UIElement.determineActionName(node);\n    this.wireSignal = UIElement.determineWireSignal(node);\n  }\n\n  /**\n   * Formats the payload of an action.\n   * @param  {any} value Original payload.\n   * @return {any}       Modified payload.\n   */\n  actionFormat(value) {\n    return value;\n  }\n\n  /**\n   * Determine the name of the action that should be associated with the node.\n   *\n   * This can be forced to be `null` by adding a `data-skipwire=true` attribute\n   * to the HTML tag. If that is not found, the action name is determined from\n   * the tag's `data-action`, `name` or `id` attribute (in that order).\n   *\n   * @param  {HTMLElement} node A HTML element.\n   * @return {string}      Name of action or null.\n   */\n  static determineActionName(node) {\n    // determine action name from HTML DOM\n    let action = null;\n\n    if (node.dataset.skipwire === 'true' ||\n      node.dataset.skipwire === 'TRUE' ||\n      node.dataset.skipwire === '1') {\n      return null;\n    }\n\n    if (node.dataset.action) {\n      action = node.dataset.action;\n    } else if (node.getAttribute('name')) {\n      action = node.getAttribute('name');\n    } else if (node.getAttribute('id')) {\n      action = node.getAttribute('id');\n    }\n\n    return action;\n  }\n\n  /**\n   * Determine the name of the signal that should be listened to from the backend.\n   *\n   * If the HTML tag as a `data-skipwire=true` attribute, this is forced to be\n   * null. Otherwise the signal name is determined from the `data-signal`,\n   * `data-action`, `name` or `id` attribute (in that order.)\n   * For all attributes apart from `data-signal`, the value is wrapped in an\n   * object like `{ data: value-of-attribute }`. The `data-signal` value\n   * can contain a `:` which will be used to create an object as well. That means\n   * that `data-signal=\"data:myvalue\"` gives the same result as `data-action=\"myvalue\"`.\n   *\n   * @param  {HTMLElement} node A HTML element.\n   * @return {string}           Name of a signal or null.\n   */\n  static determineWireSignal(node) {\n    // determine signal name from HTML DOM\n    let signal = null;\n\n    if (node.dataset.skipwire === 'true' ||\n      node.dataset.skipwire === 'TRUE' ||\n      node.dataset.skipwire === '1') {\n      return null;\n    }\n\n    if (node.dataset.signal) {\n      signal = node.dataset.signal;\n      if (signal.indexOf(':') >= 1) {\n        const [key, value] = signal.split(':', 2);\n        signal = { [key]: value };\n      }\n    } else if (node.dataset.action) {\n      signal = { data: node.dataset.action };\n    } else if (node.getAttribute('name')) {\n      signal = { data: node.getAttribute('name') };\n    } else if (node.getAttribute('id')) {\n      signal = { data: node.getAttribute('id') };\n    }\n\n    return signal;\n  }\n}\n\n/**\n * Shows all `console.log()` messages and `log` actions from backend.\n *\n * Usually wired to a `<pre id=\"log\">` element.\n */\nclass Log extends UIElement {\n  /**\n   * @param  {HTMLElement} node     Primary node.\n   * @param  {String} [consoleFnName='log'] Name of console method to replace.\n   * @param  {Number} [limitNumber=20]      Maximum number of messages to show.\n   * @param  {Number} [limitLength=250]     Maximum length of a message.\n   */\n  constructor(node, consoleFnName = 'log', limitNumber = 20, limitLength = 250) {\n    super(node);\n\n    this.consoleFnName = consoleFnName;\n    this.limitNumber = limitNumber;\n    this.limitLength = limitLength;\n    this._messages = [];\n\n    // more sensible default for this case\n    this.wireSignal = { log: null };\n\n    // capture events from frontend\n    const _consoleFnOriginal = console[consoleFnName];\n    console[consoleFnName] = message => {\n      this.add(message, 'frontend');\n      _consoleFnOriginal.apply(console, [message]);\n    };\n  }\n\n  render() {\n    while (this._messages.length > this.limitNumber) this._messages.shift();\n\n    this.node.innerText = this._messages\n      .map(m => m.join(''))\n      .map(m => ((m.length > this.limitLength)\n                 ? `${m.substr(0, this.limitLength)} ...`\n                 : m))\n      .join('\\n');\n\n    return this;\n  }\n\n  add(message, source = 'unknown') {\n    const msg = typeof message === 'string' ? message : JSON.stringify(message);\n    const paddedSource = ' '.repeat(Math.max(0, 8 - source.length)) + source;\n    this._messages.push([`${paddedSource}: ${msg}`]);\n    this.render();\n    return this;\n  }\n\n  /** Wire all logs. */\n  static wire(conn, id = 'log', source = 'backend', consoleFnName = 'log',\n              limitNumber = 20, limitLength = 250) {\n    const node = document.getElementById(id);\n    if (node == null) return;\n    if (UIElement.determineActionName(node) == null) return;\n\n    console.log('Wiring log to ', node, `with id=${id}.`);\n    const l = new Log(node, consoleFnName, limitNumber, limitLength);\n    conn.on(l.wireSignal, message => l.add(message, source));\n    return;\n  }\n}\n\n\n/**\n * Visual representation of alerts like connection failures.\n *\n * Usually wired to a `<div id=\"databench-alerts\">` element.\n */\nclass StatusLog extends UIElement {\n  /**\n   * @param  {HTMLElement} node      HTML node.\n   * @param  {function}    formatter Formats a message and a count to a string.\n   */\n  constructor(node, formatter = StatusLog.defaultAlert) {\n    super(node);\n\n    this.formatter = formatter;\n    this._messages = new Map();\n\n    // to avoid confusion, void meaningless parent variable\n    this.wireSignal = null;\n  }\n\n  /**\n   * The default formatter function\n   * @param  {string} msg   A message.\n   * @param  {number} count Count of the message.\n   * @return {string}       HTML formatted version of the inputs.\n   */\n  static defaultAlert(msg, count) {\n    const countFormat = count <= 1 ? '' : `<b>(${count})</b> `;\n    return `<div class=\"alert alert-danger\">${countFormat}${msg}</div>`;\n  }\n\n  render() {\n    const formatted = [...this._messages].map(([m, c]) => this.formatter(m, c));\n    this.node.innerHTML = formatted.join('\\n');\n    return this;\n  }\n\n  add(message) {\n    if (message == null) {\n      this._messages.clear();\n      return this;\n    }\n    const msg = typeof message === 'string' ? message : JSON.stringify(message);\n\n    if (this._messages.has(msg)) {\n      this._messages.set(msg, this._messages.get(msg) + 1);\n    } else {\n      this._messages.set(msg, 1);\n    }\n    this.render();\n    return this;\n  }\n\n  /** Wire all status logs. */\n  static wire(conn, id = 'databench-alerts', formatter = StatusLog.defaultAlert) {\n    const node = document.getElementById(id);\n    if (node == null) return;\n    if (UIElement.determineActionName(node) == null) return;\n\n    console.log('Wiring status log', node, `to element with id=${id}.`);\n    const l = new StatusLog(node, formatter);\n    conn.errorCB = l.add.bind(l);\n  }\n}\n\n\n/**\n * A button, and usually wired to any `<button>` with an action name.\n *\n * This button also binds to process IDs of the backend. That means\n * that the button is disabled (using the CSS class `disabled`) while the\n * backend is processing the action that got started when it was clicked.\n * A simple example is below.\n *\n * @example\n * // in index.html, add:\n * <button data-action=\"run\">Run</button>\n *\n * // in analysis.py, add:\n * def on_run(self):\n *     \"\"\"Run when button is pressed.\"\"\"\n *     pass\n *\n * // In this form, Databench finds the button automatically and connects it\n * // to the backend. No additional JavaScript code is required.\n */\nclass Button extends UIElement {\n  /**\n   * @param  {HTMLElement} node DOM node to connect.\n   */\n  constructor(node) {\n    super(node);\n\n    this.IDLE = 0;\n    this.ACTIVE = 2;\n    this._state = this.IDLE;\n\n    this.node.addEventListener('click', this.click.bind(this), false);\n  }\n\n  /**\n   * Called on click events. When a button is wired, this function is overwritten\n   * with the actual function that is triggered on click events.\n   * @param  {int} processID a random id for the process that could be started\n   */\n  clickCB(processID) {\n    return console.log(`click on ${this.node} with ${processID}`);\n  }\n\n  render() {\n    switch (this._state) {\n      case this.ACTIVE:\n        this.node.classList.add('disabled');\n        break;\n      default:\n        this.node.classList.remove('disabled');\n    }\n    return this;\n  }\n\n  click() {\n    if (this._state !== this.IDLE) return this;\n\n    const processID = Math.floor(Math.random() * 0x100000);\n    this.clickCB(processID);\n    return this;\n  }\n\n  state(s) {\n    if (s !== this.IDLE && s !== this.ACTIVE) return this;\n\n    this._state = s;\n    this.render();\n    return this;\n  }\n\n  /** Wire all buttons. */\n  static wire(conn) {\n    Array.from(document.getElementsByTagName('BUTTON'))\n      .filter(node => node.databenchUI === undefined)\n      .filter(node => UIElement.determineActionName(node) !== null)\n      .forEach(node => {\n        const b = new Button(node);\n        console.log('Wiring button', node, `to action ${b.actionName}.`);\n\n        // set up click callback\n        b.clickCB = (processID) => {\n          // set up process callback\n          conn.onProcess(processID, status => b.state(\n            // map process status to state\n            { start: b.ACTIVE, end: b.IDLE }[status]\n          ));\n\n          conn.emit(b.actionName, b.actionFormat({\n            __process_id: processID,  // eslint-disable-line camelcase\n          }));\n        };\n      });\n  }\n}\n\n\n/**\n * Data bound text elements.\n *\n * Wired to ``<span>``, ``<p>``, ``<div>``, ``<i>`` and ``<b>`` tags with a\n * ``data-action`` attribute specifying the action name.\n */\nclass Text extends UIElement {\n  /**\n   * Format the value.\n   * @param  {any} value Value as represented in the backend.\n   * @return {string}       Formatted representation of the value.\n   */\n  formatFn(value) {\n    return value;\n  }\n\n  /** Reads and sets the value. */\n  value(v) {\n    if (v === undefined) return this.node.innerHTML;\n\n    this.node.innerHTML = this.formatFn(v || '');\n    return this;\n  }\n\n  /**\n   * Wire all text.\n   * @param  {Connection} conn Connection to use.\n   */\n  static wire(conn) {\n    [...Array.from(document.getElementsByTagName('SPAN')),\n     ...Array.from(document.getElementsByTagName('P')),\n     ...Array.from(document.getElementsByTagName('DIV')),\n     ...Array.from(document.getElementsByTagName('I')),\n     ...Array.from(document.getElementsByTagName('B'))]\n      .filter(node => node.databenchUI === undefined)\n      .filter(node => node.dataset.action !== undefined)\n      .filter(node => UIElement.determineActionName(node) !== null)\n      .forEach(node => {\n        const t = new Text(node);\n        console.log('Wiring text', node, `to action ${t.actionName}.`);\n\n        // handle events from backend\n        conn.on(t.wireSignal, message => t.value(message));\n      });\n  }\n}\n\n\n/** Make an `<input[type='text']>` with an action name interactive. */\nclass TextInput extends UIElement {\n  /**\n   * @param {HTMLElement} node The node to connect.\n   */\n  constructor(node) {\n    super(node);\n\n    this._triggerOnKeyUp = false;\n\n    this.node.addEventListener('change', this.change.bind(this), false);\n  }\n\n  /**\n   * Format the value.\n   * @param  {any}    value Value as represented in the backend.\n   * @return {string}       Formatted representation of the value.\n   */\n  formatFn(value) {\n    return value;\n  }\n\n  /**\n   * Callback that is triggered on frontend changes.\n   * @param  {any} value A formatted action.\n   */\n  changeCB(value) {\n    return console.log(`change of ${this.node}: ${value}`);\n  }\n\n  change() {\n    return this.changeCB(this.actionFormat(this.value()));\n  }\n\n  /**\n   * The default is `false`, which means that the callback is only triggered on\n   * `change` events (i.e. pressing enter or unfocusing the element).\n   * Setting this to true will trigger on every `keyup` event of this element.\n   *\n   * @param  {boolean}   v Whether to trigger on `keyup` events. Default is true.\n   * @return {TextInput}   self\n   */\n  triggerOnKeyUp(v) {\n    if (v !== false && !this._triggerOnKeyUp) {\n      this.node.addEventListener('keyup', this.change.bind(this), false);\n      this._triggerOnKeyUp = true;\n    }\n\n    if (v === false && this._triggerOnKeyUp) {\n      this.node.removeEventListener('keyup', this.change.bind(this), false);\n      this._triggerOnKeyUp = false;\n    }\n\n    return this;\n  }\n\n  /** Reads and sets the value. */\n  value(v) {\n    if (v === undefined) return this.node.value;\n\n    this.node.value = this.formatFn(v || '');\n    return this;\n  }\n\n  /** Wire all text inputs. */\n  static wire(conn) {\n    Array.from(document.getElementsByTagName('INPUT'))\n      .filter(node => node.databenchUI === undefined)\n      .filter(node => node.getAttribute('type') === 'text')\n      .filter(node => UIElement.determineActionName(node) !== null)\n      .forEach(node => {\n        const t = new TextInput(node);\n        console.log('Wiring text input', node, `to action ${t.actionName}.`);\n\n        // handle events from frontend\n        t.changeCB = message => conn.emit(t.actionName, message);\n\n        // handle events from backend\n        conn.on(t.wireSignal, message => t.value(message));\n      });\n  }\n}\n\n\n/**\n * Make all `<input[type='range']>` with an action name interactive.\n *\n * @example\n * // in index.html, add:\n * <label for=\"samples\">Samples:</label>\n * <input type=\"range\" id=\"samples\" value=\"1000\" min=\"100\" max=\"10000\" step=\"100\" />\n *\n * // in analysis.py, add:\n * def on_samples(self, value):\n *     \"\"\"Sets the number of samples to generate per run.\"\"\"\n *     self.data['samples'] = value\n *\n * // The Python code is for illustration only and can be left out as this is\n * // the default behavior.\n */\nclass Slider extends UIElement {\n  /**\n   * @param  {HTMLElement}  node      DOM node to bind.\n   * @param  {HTMLElement?} labelNode DOM node label that corresponds to the slider.\n   */\n  constructor(node, labelNode) {\n    super(node);\n\n    this.labelNode = labelNode;\n    this.labelHtml = labelNode ? labelNode.innerHTML : null;\n\n    this.node.addEventListener('input', this.render.bind(this), false);\n    this.node.addEventListener('change', this.change.bind(this), false);\n    this.render();\n  }\n\n  /**\n   * Callback with changes to the slider value.\n   * @param  {Number} value   Value from a sliderToValue() transform.\n   */\n  changeCB(value) {\n    return console.log(`slider value change: ${value}`);\n  }\n\n  /**\n   * Transform a backend value to a slider value.\n   * @param  {number} value Value as stored in backend.\n   * @return {int}          Value for the HTML range element.\n   */\n  valueToSlider(value) {\n    return value;\n  }\n\n  /**\n   * Transform a value from the HTML range element to a value that should be stored.\n   * @param  {int}    s Value from HTML range element.\n   * @return {number}   Value to store.\n   */\n  sliderToValue(s) {\n    return s;\n  }\n\n  /**\n   * How a value should be represented.\n   * For example, this can add units or convert from radians to degrees.\n   * @param  {number}         value Input value as it is stored in the backend.\n   * @return {string|number}        Representation of a value.\n   */\n  formatFn(value) {\n    return value;\n  }\n\n  render() {\n    const v = this.value();\n    if (this.labelNode) {\n      this.labelNode.innerHTML = `${this.labelHtml} ${this.formatFn(v)}`;\n    }\n    return this;\n  }\n\n  /** Reads and sets the value. */\n  value(v) {\n    if (v === undefined) {\n      return this.sliderToValue(parseFloat(this.node.value));\n    }\n\n    const newSliderValue = this.valueToSlider(v);\n    if (this.node.value === newSliderValue) return this;\n\n    this.node.value = newSliderValue;\n    this.render();\n    return this;\n  }\n\n  change() {\n    return this.changeCB(this.actionFormat(this.value()));\n  }\n\n  /** Preprocess labels before wiring. */\n  static preprocessLabels() {\n    Array.from(document.getElementsByTagName('LABEL'))\n      .filter(label => label.htmlFor)\n      .forEach(label => {\n        const node = document.getElementById(label.htmlFor);\n        if (node) node.label = label;\n      });\n  }\n\n  /** Wire all sliders. */\n  static wire(conn) {\n    this.preprocessLabels();\n\n    Array.from(document.getElementsByTagName('INPUT'))\n      .filter(node => node.databenchUI === undefined)\n      .filter(node => node.getAttribute('type') === 'range')\n      .filter(node => UIElement.determineActionName(node) !== null)\n      .forEach(node => {\n        const slider = new Slider(node, node.label);\n        console.log('Wiring slider', node, `to action ${slider.actionName}.`);\n\n        // handle events from frontend\n        slider.changeCB = message => conn.emit(slider.actionName, message);\n\n        // handle events from backend\n        conn.on(slider.wireSignal, message => slider.value(message));\n      });\n  }\n}\n\n\n/**\n * Connect an `<img>` with a signal name to the backend.\n *\n * The signal message is placed directly into the `src` attribute of the image\n * tag. For matplotlib, that formatting can be done with the utility function\n * `fig_to_src()` (see example below).\n *\n * @example\n * // in index.html, add\n * <img alt=\"my plot\" data-signal=\"mpl\" />\n *\n * // in analysis.py, add\n * import matplotlib.pyplot as plt\n * ...\n * fig = plt.figure()\n * ...\n * self.emit('mpl', databench.fig_to_src(fig))\n */\nclass Image extends UIElement {\n  /** Reads and sets the value. */\n  value(v) {\n    if (v === undefined) return this.node.src;\n\n    this.node.src = v || '';\n    return this;\n  }\n\n  /** Wire all text inputs. */\n  static wire(conn) {\n    Array.from(document.getElementsByTagName('IMG'))\n      .filter(node => node.databenchUI === undefined)\n      .filter(node => node.dataset.signal !== undefined)\n      .filter(node => UIElement.determineWireSignal(node) !== null)\n      .forEach(node => {\n        const img = new Image(node);\n        console.log('Wiring image', node, `to signal ${img.wireSignal}.`);\n\n        // handle events from backend\n        conn.on(img.wireSignal, message => img.value(message));\n      });\n  }\n}\n\n\n/**\n * Wire all the UI elements to the backend. The action name is determined by\n * {@link module:ui~UIElement.determineActionName|UIElement.determineActionName()}\n * and the action message can be modified by overwriting\n * {@link module:ui~UIElement#actionFormat|UIElement.actionFormat()}. The signal\n * name is determined by\n * {@link module:ui~UIElement.determineWireSignal|UIElement.determineWireSignal()}.\n *\n * @param  {Connection} connection A Databench.Connection instance.\n * @return {Connection}            The same connection.\n */\nfunction wire(connection) {\n  StatusLog.wire(connection);\n  Button.wire(connection);\n  TextInput.wire(connection);\n  Text.wire(connection);\n  Slider.wire(connection);\n  Image.wire(connection);\n  Log.wire(connection);\n  return connection;\n}\n\nexport { StatusLog, Log, Button, TextInput, Text, Slider, Image, wire };\n","var _global = (function() { return this; })();\nvar nativeWebSocket = _global.WebSocket || _global.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new nativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new nativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\n\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : nativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","module.exports={\n  \"_args\": [\n    [\n      \"websocket@^1.0.22\",\n      \"/Users/svenkreiss/tech/databench\"\n    ]\n  ],\n  \"_from\": \"websocket@>=1.0.22 <2.0.0\",\n  \"_id\": \"websocket@1.0.23\",\n  \"_inCache\": true,\n  \"_installable\": true,\n  \"_location\": \"/websocket\",\n  \"_nodeVersion\": \"0.10.45\",\n  \"_npmOperationalInternal\": {\n    \"host\": \"packages-16-east.internal.npmjs.com\",\n    \"tmp\": \"tmp/websocket-1.0.23.tgz_1463625793005_0.4532310354989022\"\n  },\n  \"_npmUser\": {\n    \"email\": \"brian@worlize.com\",\n    \"name\": \"theturtle32\"\n  },\n  \"_npmVersion\": \"2.15.1\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"name\": \"websocket\",\n    \"raw\": \"websocket@^1.0.22\",\n    \"rawSpec\": \"^1.0.22\",\n    \"scope\": null,\n    \"spec\": \">=1.0.22 <2.0.0\",\n    \"type\": \"range\"\n  },\n  \"_requiredBy\": [\n    \"/\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/websocket/-/websocket-1.0.23.tgz\",\n  \"_shasum\": \"20de8ec4a7126b09465578cd5dbb29a9c296aac6\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"websocket@^1.0.22\",\n  \"_where\": \"/Users/svenkreiss/tech/databench\",\n  \"author\": {\n    \"email\": \"brian@worlize.com\",\n    \"name\": \"Brian McKelvey\",\n    \"url\": \"https://www.worlize.com/\"\n  },\n  \"browser\": \"lib/browser.js\",\n  \"bugs\": {\n    \"url\": \"https://github.com/theturtle32/WebSocket-Node/issues\"\n  },\n  \"config\": {\n    \"verbose\": false\n  },\n  \"contributors\": [\n    {\n      \"email\": \"ibc@aliax.net\",\n      \"name\": \"Iñaki Baz Castillo\",\n      \"url\": \"http://dev.sipdoc.net\"\n    }\n  ],\n  \"dependencies\": {\n    \"debug\": \"^2.2.0\",\n    \"nan\": \"^2.3.3\",\n    \"typedarray-to-buffer\": \"^3.1.2\",\n    \"yaeti\": \"^0.0.4\"\n  },\n  \"description\": \"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.\",\n  \"devDependencies\": {\n    \"buffer-equal\": \"^0.0.1\",\n    \"faucet\": \"^0.0.1\",\n    \"gulp\": \"git+https://github.com/gulpjs/gulp.git#4.0\",\n    \"gulp-jshint\": \"^1.11.2\",\n    \"jshint-stylish\": \"^1.0.2\",\n    \"tape\": \"^4.0.1\"\n  },\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"dist\": {\n    \"shasum\": \"20de8ec4a7126b09465578cd5dbb29a9c296aac6\",\n    \"tarball\": \"https://registry.npmjs.org/websocket/-/websocket-1.0.23.tgz\"\n  },\n  \"engines\": {\n    \"node\": \">=0.8.0\"\n  },\n  \"gitHead\": \"ba2fa7e9676c456bcfb12ad160655319af66faed\",\n  \"homepage\": \"https://github.com/theturtle32/WebSocket-Node\",\n  \"keywords\": [\n    \"websocket\",\n    \"websockets\",\n    \"socket\",\n    \"networking\",\n    \"comet\",\n    \"push\",\n    \"RFC-6455\",\n    \"realtime\",\n    \"server\",\n    \"client\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"main\": \"index\",\n  \"maintainers\": [\n    {\n      \"email\": \"brian@worlize.com\",\n      \"name\": \"theturtle32\"\n    }\n  ],\n  \"name\": \"websocket\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/theturtle32/WebSocket-Node.git\"\n  },\n  \"scripts\": {\n    \"gulp\": \"gulp\",\n    \"install\": \"(node-gyp rebuild 2> builderror.log) || (exit 0)\",\n    \"test\": \"faucet test/unit\"\n  },\n  \"version\": \"1.0.23\"\n}\n"]}