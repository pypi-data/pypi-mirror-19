#!/usr/bin/env python
# -*- coding: UTF-8 -*-
##############################################################################
#
# PDFgui            by DANSE Diffraction group
#                   Simon J. L. Billinge
#                   (c) 2007 trustees of the Michigan State University.
#                   All rights reserved.
#
# File coded by:    Jiwu Liu, Chris Farrow
#
# See AUTHORS.txt for a list of people who contributed.
# See LICENSE.txt for license information.
#
##############################################################################

# generated by wxGlade 0.4.1 on Wed Dec  6 14:16:15 2006

import wx
from diffpy.pdfgui.gui.pdfpanel import PDFPanel

class OutputPanel(wx.Panel,PDFPanel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: OutputPanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.outputTextCtrl = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE|wx.TE_READONLY|wx.HSCROLL)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.__customProperties()

    def __set_properties(self):
        # begin wxGlade: OutputPanel.__set_properties
        # end wxGlade
        return

    def __do_layout(self):
        # begin wxGlade: OutputPanel.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.outputTextCtrl, 1, wx.ALL|wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        # end wxGlade

    def __customProperties(self):
        """Set the custom properties."""
        # Set the font to monospace
        font = self.outputTextCtrl.GetFont()
        font = wx.Font(font.GetPointSize(), wx.FONTFAMILY_TELETYPE,
                font.GetWeight(), font.GetStyle(), font.GetUnderlined())
        self.outputTextCtrl.SetFont(font)
        return

    def clearText(self):
        """Clear the text from the output control."""
        self.outputTextCtrl.Clear()
        return

    def updateText(self, text):
        """Update the text in the window."""
        self.outputTextCtrl.AppendText(text)
        return

    def refresh(self):
        pass

# end of class OutputPanel
