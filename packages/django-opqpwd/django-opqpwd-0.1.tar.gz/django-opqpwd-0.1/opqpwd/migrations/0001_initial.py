# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-02 15:29
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PasswordData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=88, unique=True, validators=[django.core.validators.RegexValidator(message='Expecting Base64 string', regex='^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'), django.core.validators.RegexValidator(message='length has to be 88', regex='^.{88}$')])),
                ('encdata', models.TextField(max_length=1728, validators=[django.core.validators.RegexValidator(message='Expecting Base64 string', regex='^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'), django.core.validators.RegexValidator(message='length has to be 1728', regex='^.{1728}$')])),
            ],
            options={
                'ordering': ('uid', 'encdata'),
            },
        ),
        migrations.CreateModel(
            name='UserCred',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('husername', models.CharField(max_length=44, unique=True, validators=[django.core.validators.RegexValidator(message='Expecting Base64 string', regex='^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'), django.core.validators.RegexValidator(message='length has to be 44', regex='^.{44}$')])),
                ('hpassword', models.CharField(max_length=44, validators=[django.core.validators.RegexValidator(message='Expecting Base64 string', regex='^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'), django.core.validators.RegexValidator(message='length has to be 44', regex='^.{44}$')])),
                ('hpassword_salt', models.CharField(max_length=44, validators=[django.core.validators.RegexValidator(message='Expecting Base64 string', regex='^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'), django.core.validators.RegexValidator(message='length has to be 44', regex='^.{44}$')])),
                ('encuidset', models.TextField(max_length=43948, validators=[django.core.validators.RegexValidator(message='Expecting Base64 string', regex='^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'), django.core.validators.RegexValidator(message='length has to be 43948', regex='^.{43948}$')])),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercred', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('husername', 'hpassword', 'hpassword_salt', 'encuidset'),
            },
        ),
    ]
