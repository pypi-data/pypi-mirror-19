# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/elastic.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from dstore import values_pb2 as dstore_dot_values__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='dstore/elastic/elastic.proto',
  package='dstore.elastic',
  syntax='proto3',
  serialized_pb=_b('\n\x1c\x64store/elastic/elastic.proto\x12\x0e\x64store.elastic\x1a\x13\x64store/values.proto\"O\n\x05\x46ield\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0bmulti_field\x18\x02 \x01(\x08\x12#\n\x05value\x18\x03 \x03(\x0b\x32\x14.dstore.values.Value\"!\n\x05Range\x12\x0c\n\x04\x66rom\x18\x01 \x01(\t\x12\n\n\x02to\x18\x02 \x01(\t\"\xd4\x01\n\tBoolQuery\x12%\n\x06\x66ilter\x18\x01 \x03(\x0b\x32\x15.dstore.elastic.Query\x12#\n\x04must\x18\x02 \x03(\x0b\x32\x15.dstore.elastic.Query\x12%\n\x06should\x18\x03 \x03(\x0b\x32\x15.dstore.elastic.Query\x12\'\n\x08must_not\x18\x04 \x03(\x0b\x32\x15.dstore.elastic.Query\x12\x1c\n\x14minimum_should_match\x18\x05 \x01(\t\x12\r\n\x05\x62oost\x18\x06 \x01(\x01\"\x80\x05\n\x05Query\x12\x32\n\x0bterms_query\x18\x01 \x01(\x0b\x32\x1b.dstore.elastic.Query.TermsH\x00\x12\x30\n\ntype_query\x18\x02 \x01(\x0b\x32\x1a.dstore.elastic.Query.TypeH\x00\x12L\n\x19simple_query_string_query\x18\x03 \x01(\x0b\x32\'.dstore.elastic.Query.SimpleQueryStringH\x00\x12\x32\n\x0brange_query\x18\x04 \x01(\x0b\x32\x1b.dstore.elastic.Query.RangeH\x00\x12/\n\nbool_query\x18\x14 \x01(\x0b\x32\x19.dstore.elastic.BoolQueryH\x00\x1aI\n\x05Terms\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x03(\t\x12\x1d\n\x15\x61llow_partial_matches\x18\x03 \x01(\x08\x1a\x14\n\x04Type\x12\x0c\n\x04type\x18\x01 \x01(\t\x1a~\n\x05Range\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\x1c\n\x14greater_than_or_eqal\x18\x02 \x01(\t\x12\x14\n\x0cgreater_than\x18\x03 \x01(\t\x12\x1a\n\x12less_than_or_equal\x18\x04 \x01(\t\x12\x11\n\tless_than\x18\x05 \x01(\t\x1at\n\x11SimpleQueryString\x12\r\n\x05query\x18\x01 \x01(\t\x12\r\n\x05\x66ield\x18\x02 \x03(\t\x12#\n\x1buse_and_as_default_operator\x18\x03 \x01(\x08\x12\x1c\n\x14minimum_should_match\x18\x04 \x01(\tB\x07\n\x05query\"\x80\x04\n\x04Sort\x12\x34\n\nfield_sort\x18\x01 \x01(\x0b\x32\x1e.dstore.elastic.Sort.FieldSortH\x00\x12\x34\n\nscore_sort\x18\x02 \x01(\x0b\x32\x1e.dstore.elastic.Sort.ScoreSortH\x00\x1a\x0b\n\tScoreSort\x1a\xe4\x01\n\tFieldSort\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12.\n\nsort_order\x18\x02 \x01(\x0e\x32\x1a.dstore.elastic.Sort.Order\x12\x37\n\x11missing_treatment\x18\x03 \x01(\x0e\x32\x1c.dstore.elastic.Sort.Missing\x12,\n\tsort_mode\x18\x04 \x01(\x0e\x32\x19.dstore.elastic.Sort.Mode\x12,\n\rnested_filter\x18\x05 \x03(\x0b\x32\x15.dstore.elastic.Query\"&\n\x05Order\x12\r\n\tASCENDING\x10\x00\x12\x0e\n\nDESCENDING\x10\x01\"\x1e\n\x07Missing\x12\x08\n\x04LAST\x10\x00\x12\t\n\x05\x46IRST\x10\x01\"E\n\x04Mode\x12\r\n\tUNDEFINED\x10\x00\x12\x07\n\x03MIN\x10\x01\x12\x07\n\x03MAX\x10\x02\x12\x07\n\x03SUM\x10\x03\x12\x07\n\x03\x41VG\x10\x04\x12\n\n\x06MEDIAN\x10\x05\x42\t\n\x07sort_byBI\n\x11io.dstore.elasticB\x11\x45lasticOuterClassP\x01Z\x1fgosdk.dstore.de/elastic/elasticb\x06proto3')
  ,
  dependencies=[dstore_dot_values__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_SORT_ORDER = _descriptor.EnumDescriptor(
  name='Order',
  full_name='dstore.elastic.Sort.Order',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ASCENDING', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DESCENDING', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1404,
  serialized_end=1442,
)
_sym_db.RegisterEnumDescriptor(_SORT_ORDER)

_SORT_MISSING = _descriptor.EnumDescriptor(
  name='Missing',
  full_name='dstore.elastic.Sort.Missing',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LAST', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FIRST', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1444,
  serialized_end=1474,
)
_sym_db.RegisterEnumDescriptor(_SORT_MISSING)

_SORT_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='dstore.elastic.Sort.Mode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIN', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAX', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MEDIAN', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1476,
  serialized_end=1545,
)
_sym_db.RegisterEnumDescriptor(_SORT_MODE)


_FIELD = _descriptor.Descriptor(
  name='Field',
  full_name='dstore.elastic.Field',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='dstore.elastic.Field.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='multi_field', full_name='dstore.elastic.Field.multi_field', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='dstore.elastic.Field.value', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=148,
)


_RANGE = _descriptor.Descriptor(
  name='Range',
  full_name='dstore.elastic.Range',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from', full_name='dstore.elastic.Range.from', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='to', full_name='dstore.elastic.Range.to', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=150,
  serialized_end=183,
)


_BOOLQUERY = _descriptor.Descriptor(
  name='BoolQuery',
  full_name='dstore.elastic.BoolQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='dstore.elastic.BoolQuery.filter', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='must', full_name='dstore.elastic.BoolQuery.must', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='should', full_name='dstore.elastic.BoolQuery.should', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='must_not', full_name='dstore.elastic.BoolQuery.must_not', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minimum_should_match', full_name='dstore.elastic.BoolQuery.minimum_should_match', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='boost', full_name='dstore.elastic.BoolQuery.boost', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=186,
  serialized_end=398,
)


_QUERY_TERMS = _descriptor.Descriptor(
  name='Terms',
  full_name='dstore.elastic.Query.Terms',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field_name', full_name='dstore.elastic.Query.Terms.field_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='dstore.elastic.Query.Terms.value', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='allow_partial_matches', full_name='dstore.elastic.Query.Terms.allow_partial_matches', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=691,
  serialized_end=764,
)

_QUERY_TYPE = _descriptor.Descriptor(
  name='Type',
  full_name='dstore.elastic.Query.Type',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='dstore.elastic.Query.Type.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=766,
  serialized_end=786,
)

_QUERY_RANGE = _descriptor.Descriptor(
  name='Range',
  full_name='dstore.elastic.Query.Range',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field_name', full_name='dstore.elastic.Query.Range.field_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='greater_than_or_eqal', full_name='dstore.elastic.Query.Range.greater_than_or_eqal', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='greater_than', full_name='dstore.elastic.Query.Range.greater_than', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='less_than_or_equal', full_name='dstore.elastic.Query.Range.less_than_or_equal', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='less_than', full_name='dstore.elastic.Query.Range.less_than', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=788,
  serialized_end=914,
)

_QUERY_SIMPLEQUERYSTRING = _descriptor.Descriptor(
  name='SimpleQueryString',
  full_name='dstore.elastic.Query.SimpleQueryString',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='query', full_name='dstore.elastic.Query.SimpleQueryString.query', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='field', full_name='dstore.elastic.Query.SimpleQueryString.field', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='use_and_as_default_operator', full_name='dstore.elastic.Query.SimpleQueryString.use_and_as_default_operator', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minimum_should_match', full_name='dstore.elastic.Query.SimpleQueryString.minimum_should_match', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=916,
  serialized_end=1032,
)

_QUERY = _descriptor.Descriptor(
  name='Query',
  full_name='dstore.elastic.Query',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='terms_query', full_name='dstore.elastic.Query.terms_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type_query', full_name='dstore.elastic.Query.type_query', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='simple_query_string_query', full_name='dstore.elastic.Query.simple_query_string_query', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='range_query', full_name='dstore.elastic.Query.range_query', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bool_query', full_name='dstore.elastic.Query.bool_query', index=4,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUERY_TERMS, _QUERY_TYPE, _QUERY_RANGE, _QUERY_SIMPLEQUERYSTRING, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='query', full_name='dstore.elastic.Query.query',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=401,
  serialized_end=1041,
)


_SORT_SCORESORT = _descriptor.Descriptor(
  name='ScoreSort',
  full_name='dstore.elastic.Sort.ScoreSort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1160,
  serialized_end=1171,
)

_SORT_FIELDSORT = _descriptor.Descriptor(
  name='FieldSort',
  full_name='dstore.elastic.Sort.FieldSort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field_name', full_name='dstore.elastic.Sort.FieldSort.field_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sort_order', full_name='dstore.elastic.Sort.FieldSort.sort_order', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='missing_treatment', full_name='dstore.elastic.Sort.FieldSort.missing_treatment', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sort_mode', full_name='dstore.elastic.Sort.FieldSort.sort_mode', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nested_filter', full_name='dstore.elastic.Sort.FieldSort.nested_filter', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1174,
  serialized_end=1402,
)

_SORT = _descriptor.Descriptor(
  name='Sort',
  full_name='dstore.elastic.Sort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field_sort', full_name='dstore.elastic.Sort.field_sort', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='score_sort', full_name='dstore.elastic.Sort.score_sort', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SORT_SCORESORT, _SORT_FIELDSORT, ],
  enum_types=[
    _SORT_ORDER,
    _SORT_MISSING,
    _SORT_MODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='sort_by', full_name='dstore.elastic.Sort.sort_by',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1044,
  serialized_end=1556,
)

_FIELD.fields_by_name['value'].message_type = dstore_dot_values__pb2._VALUE
_BOOLQUERY.fields_by_name['filter'].message_type = _QUERY
_BOOLQUERY.fields_by_name['must'].message_type = _QUERY
_BOOLQUERY.fields_by_name['should'].message_type = _QUERY
_BOOLQUERY.fields_by_name['must_not'].message_type = _QUERY
_QUERY_TERMS.containing_type = _QUERY
_QUERY_TYPE.containing_type = _QUERY
_QUERY_RANGE.containing_type = _QUERY
_QUERY_SIMPLEQUERYSTRING.containing_type = _QUERY
_QUERY.fields_by_name['terms_query'].message_type = _QUERY_TERMS
_QUERY.fields_by_name['type_query'].message_type = _QUERY_TYPE
_QUERY.fields_by_name['simple_query_string_query'].message_type = _QUERY_SIMPLEQUERYSTRING
_QUERY.fields_by_name['range_query'].message_type = _QUERY_RANGE
_QUERY.fields_by_name['bool_query'].message_type = _BOOLQUERY
_QUERY.oneofs_by_name['query'].fields.append(
  _QUERY.fields_by_name['terms_query'])
_QUERY.fields_by_name['terms_query'].containing_oneof = _QUERY.oneofs_by_name['query']
_QUERY.oneofs_by_name['query'].fields.append(
  _QUERY.fields_by_name['type_query'])
_QUERY.fields_by_name['type_query'].containing_oneof = _QUERY.oneofs_by_name['query']
_QUERY.oneofs_by_name['query'].fields.append(
  _QUERY.fields_by_name['simple_query_string_query'])
_QUERY.fields_by_name['simple_query_string_query'].containing_oneof = _QUERY.oneofs_by_name['query']
_QUERY.oneofs_by_name['query'].fields.append(
  _QUERY.fields_by_name['range_query'])
_QUERY.fields_by_name['range_query'].containing_oneof = _QUERY.oneofs_by_name['query']
_QUERY.oneofs_by_name['query'].fields.append(
  _QUERY.fields_by_name['bool_query'])
_QUERY.fields_by_name['bool_query'].containing_oneof = _QUERY.oneofs_by_name['query']
_SORT_SCORESORT.containing_type = _SORT
_SORT_FIELDSORT.fields_by_name['sort_order'].enum_type = _SORT_ORDER
_SORT_FIELDSORT.fields_by_name['missing_treatment'].enum_type = _SORT_MISSING
_SORT_FIELDSORT.fields_by_name['sort_mode'].enum_type = _SORT_MODE
_SORT_FIELDSORT.fields_by_name['nested_filter'].message_type = _QUERY
_SORT_FIELDSORT.containing_type = _SORT
_SORT.fields_by_name['field_sort'].message_type = _SORT_FIELDSORT
_SORT.fields_by_name['score_sort'].message_type = _SORT_SCORESORT
_SORT_ORDER.containing_type = _SORT
_SORT_MISSING.containing_type = _SORT
_SORT_MODE.containing_type = _SORT
_SORT.oneofs_by_name['sort_by'].fields.append(
  _SORT.fields_by_name['field_sort'])
_SORT.fields_by_name['field_sort'].containing_oneof = _SORT.oneofs_by_name['sort_by']
_SORT.oneofs_by_name['sort_by'].fields.append(
  _SORT.fields_by_name['score_sort'])
_SORT.fields_by_name['score_sort'].containing_oneof = _SORT.oneofs_by_name['sort_by']
DESCRIPTOR.message_types_by_name['Field'] = _FIELD
DESCRIPTOR.message_types_by_name['Range'] = _RANGE
DESCRIPTOR.message_types_by_name['BoolQuery'] = _BOOLQUERY
DESCRIPTOR.message_types_by_name['Query'] = _QUERY
DESCRIPTOR.message_types_by_name['Sort'] = _SORT

Field = _reflection.GeneratedProtocolMessageType('Field', (_message.Message,), dict(
  DESCRIPTOR = _FIELD,
  __module__ = 'dstore.elastic.elastic_pb2'
  # @@protoc_insertion_point(class_scope:dstore.elastic.Field)
  ))
_sym_db.RegisterMessage(Field)

Range = _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), dict(
  DESCRIPTOR = _RANGE,
  __module__ = 'dstore.elastic.elastic_pb2'
  # @@protoc_insertion_point(class_scope:dstore.elastic.Range)
  ))
_sym_db.RegisterMessage(Range)

BoolQuery = _reflection.GeneratedProtocolMessageType('BoolQuery', (_message.Message,), dict(
  DESCRIPTOR = _BOOLQUERY,
  __module__ = 'dstore.elastic.elastic_pb2'
  # @@protoc_insertion_point(class_scope:dstore.elastic.BoolQuery)
  ))
_sym_db.RegisterMessage(BoolQuery)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), dict(

  Terms = _reflection.GeneratedProtocolMessageType('Terms', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_TERMS,
    __module__ = 'dstore.elastic.elastic_pb2'
    # @@protoc_insertion_point(class_scope:dstore.elastic.Query.Terms)
    ))
  ,

  Type = _reflection.GeneratedProtocolMessageType('Type', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_TYPE,
    __module__ = 'dstore.elastic.elastic_pb2'
    # @@protoc_insertion_point(class_scope:dstore.elastic.Query.Type)
    ))
  ,

  Range = _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_RANGE,
    __module__ = 'dstore.elastic.elastic_pb2'
    # @@protoc_insertion_point(class_scope:dstore.elastic.Query.Range)
    ))
  ,

  SimpleQueryString = _reflection.GeneratedProtocolMessageType('SimpleQueryString', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_SIMPLEQUERYSTRING,
    __module__ = 'dstore.elastic.elastic_pb2'
    # @@protoc_insertion_point(class_scope:dstore.elastic.Query.SimpleQueryString)
    ))
  ,
  DESCRIPTOR = _QUERY,
  __module__ = 'dstore.elastic.elastic_pb2'
  # @@protoc_insertion_point(class_scope:dstore.elastic.Query)
  ))
_sym_db.RegisterMessage(Query)
_sym_db.RegisterMessage(Query.Terms)
_sym_db.RegisterMessage(Query.Type)
_sym_db.RegisterMessage(Query.Range)
_sym_db.RegisterMessage(Query.SimpleQueryString)

Sort = _reflection.GeneratedProtocolMessageType('Sort', (_message.Message,), dict(

  ScoreSort = _reflection.GeneratedProtocolMessageType('ScoreSort', (_message.Message,), dict(
    DESCRIPTOR = _SORT_SCORESORT,
    __module__ = 'dstore.elastic.elastic_pb2'
    # @@protoc_insertion_point(class_scope:dstore.elastic.Sort.ScoreSort)
    ))
  ,

  FieldSort = _reflection.GeneratedProtocolMessageType('FieldSort', (_message.Message,), dict(
    DESCRIPTOR = _SORT_FIELDSORT,
    __module__ = 'dstore.elastic.elastic_pb2'
    # @@protoc_insertion_point(class_scope:dstore.elastic.Sort.FieldSort)
    ))
  ,
  DESCRIPTOR = _SORT,
  __module__ = 'dstore.elastic.elastic_pb2'
  # @@protoc_insertion_point(class_scope:dstore.elastic.Sort)
  ))
_sym_db.RegisterMessage(Sort)
_sym_db.RegisterMessage(Sort.ScoreSort)
_sym_db.RegisterMessage(Sort.FieldSort)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\021io.dstore.elasticB\021ElasticOuterClassP\001Z\037gosdk.dstore.de/elastic/elastic'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
# @@protoc_insertion_point(module_scope)
