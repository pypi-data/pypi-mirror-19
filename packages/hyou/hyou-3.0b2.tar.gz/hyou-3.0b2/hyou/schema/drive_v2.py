# Copyright 2017 Google Inc. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import unicode_literals

# flake8: noqa
SCHEMA = {'basePath': '/drive/v2/', 'batchPath': 'batch', 'discoveryVersion': 'v1', 'etag': '"tbys6C40o18GZwyMen5GMkdK-3s/DdKJBctDw2G6d0ofrxBvgo_LMTQ"', 'baseUrl': 'https://www.googleapis.com/drive/v2/', 'version': 'v2', 'schemas': {'CommentReplyList': {'type': 'object', 'id': 'CommentReplyList', 'description': 'A list of replies to a comment on a file in Google Drive.', 'properties': {'kind': {'type': 'string', 'default': 'drive#commentReplyList', 'description': 'This is always drive#commentReplyList.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'nextLink': {'type': 'string', 'description': 'A link to the next page of replies.'}, 'nextPageToken': {'type': 'string', 'description': 'The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.'}, 'items': {'type': 'array', 'description': 'The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.', 'items': {'$ref': 'CommentReply'}}}}, 'File': {'type': 'object', 'id': 'File', 'description': 'The metadata for a file.', 'properties': {'webViewLink': {'type': 'string', 'description': "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."}, 'hasThumbnail': {'type': 'boolean', 'description': 'Whether this file has a thumbnail.'}, 'alternateLink': {'type': 'string', 'description': 'A link for opening the file in a relevant Google editor or viewer.'}, 'mimeType': {'type': 'string', 'description': "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."}, 'explicitlyTrashed': {'type': 'boolean', 'description': 'Whether this file has been explicitly trashed, as opposed to recursively trashed.'}, 'folderColorRgb': {'type': 'string', 'description': 'Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette.'}, 'fullFileExtension': {'type': 'string', 'description': 'The full file extension; extracted from the title. May contain multiple concatenated extensions, such as "tar.gz". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files.'}, 'originalFilename': {'type': 'string', 'description': 'The original filename of the uploaded content if available, or else the original value of the title field. This is only available for files with binary content in Drive.'}, 'lastModifyingUser': {'description': 'The last user to modify this file.', '$ref': 'User'}, 'version': {'type': 'string', 'description': 'A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.', 'format': 'int64'}, 'owners': {'type': 'array', 'description': 'The owner(s) of this file.', 'items': {'$ref': 'User'}}, 'fileExtension': {'type': 'string', 'description': 'The final component of fullFileExtension with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files.'}, 'writersCanShare': {'type': 'boolean', 'description': 'Whether writers can share the document with other users.'}, 'appDataContents': {'type': 'boolean', 'description': 'Whether this file is in the Application Data folder.'}, 'createdDate': {'type': 'string', 'description': 'Create time for this file (formatted RFC 3339 timestamp).', 'format': 'date-time'}, 'openWithLinks': {'type': 'object', 'description': "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.", 'additionalProperties': {'type': 'string'}}, 'shareable': {'type': 'boolean', 'description': "Whether the file's sharing settings can be modified by the current user."}, 'lastViewedByMeDate': {'type': 'string', 'description': 'Last time this file was viewed by the user (formatted RFC 3339 timestamp).', 'format': 'date-time'}, 'selfLink': {'type': 'string', 'description': 'A link back to this file.'}, 'webContentLink': {'type': 'string', 'description': 'A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials.'}, 'fileSize': {'type': 'string', 'description': 'The size of the file in bytes. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files.', 'format': 'int64'}, 'downloadUrl': {'type': 'string'}, 'headRevisionId': {'type': 'string', 'description': "The ID of the file's head revision. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."}, 'indexableText': {'type': 'object', 'description': 'Indexable text attributes for the file (can only be written)', 'properties': {'text': {'type': 'string', 'description': 'The text to be indexed for this file.'}}}, 'title': {'type': 'string', 'description': 'The title of this file.'}, 'canComment': {'type': 'boolean', 'description': 'Whether the current user can comment on the file.'}, 'thumbnail': {'type': 'object', 'description': 'A thumbnail for the file. This will only be used if Drive cannot generate a standard thumbnail.', 'properties': {'image': {'type': 'string', 'description': 'The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.', 'format': 'byte'}, 'mimeType': {'type': 'string', 'description': 'The MIME type of the thumbnail.'}}}, 'quotaBytesUsed': {'type': 'string', 'description': 'The number of quota bytes used by this file.', 'format': 'int64'}, 'sharedWithMeDate': {'type': 'string', 'description': 'Time at which this file was shared with the user (formatted RFC 3339 timestamp).', 'format': 'date-time'}, 'sharingUser': {'description': 'User that shared the item with the current user, if available.', '$ref': 'User'}, 'thumbnailVersion': {'type': 'string', 'description': 'The thumbnail version for use in thumbnail cache invalidation.', 'format': 'int64'}, 'isAppAuthorized': {'type': 'boolean', 'description': 'Whether the file was created or opened by the requesting app.'}, 'canReadRevisions': {'type': 'boolean', 'description': 'Whether the current user has read access to the Revisions resource of the file.'}, 'etag': {'type': 'string', 'description': 'ETag of the file.'}, 'description': {'type': 'string', 'description': 'A short description of the file.'}, 'thumbnailLink': {'type': 'string', 'description': "A short-lived link to the file's thumbnail. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content."}, 'embedLink': {'type': 'string', 'description': 'A link for embedding the file.'}, 'ownedByMe': {'type': 'boolean', 'description': 'Whether the file is owned by the current user.'}, 'markedViewedByMeDate': {'type': 'string', 'description': 'Deprecated.', 'format': 'date-time'}, 'imageMediaMetadata': {'type': 'object', 'description': 'Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.', 'properties': {'exposureBias': {'type': 'number', 'description': 'The exposure bias of the photo (APEX value).', 'format': 'float'}, 'date': {'type': 'string', 'description': 'The date and time the photo was taken (EXIF format timestamp).'}, 'lens': {'type': 'string', 'description': 'The lens used to create the photo.'}, 'sensor': {'type': 'string', 'description': 'The type of sensor used to create the photo.'}, 'cameraModel': {'type': 'string', 'description': 'The model of the camera used to create the photo.'}, 'exposureMode': {'type': 'string', 'description': 'The exposure mode used to create the photo.'}, 'aperture': {'type': 'number', 'description': 'The aperture used to create the photo (f-number).', 'format': 'float'}, 'flashUsed': {'type': 'boolean', 'description': 'Whether a flash was used to create the photo.'}, 'exposureTime': {'type': 'number', 'description': 'The length of the exposure, in seconds.', 'format': 'float'}, 'height': {'type': 'integer', 'description': 'The height of the image in pixels.', 'format': 'int32'}, 'focalLength': {'type': 'number', 'description': 'The focal length used to create the photo, in millimeters.', 'format': 'float'}, 'width': {'type': 'integer', 'description': 'The width of the image in pixels.', 'format': 'int32'}, 'maxApertureValue': {'type': 'number', 'description': 'The smallest f-number of the lens at the focal length used to create the photo (APEX value).', 'format': 'float'}, 'meteringMode': {'type': 'string', 'description': 'The metering mode used to create the photo.'}, 'whiteBalance': {'type': 'string', 'description': 'The white balance mode used to create the photo.'}, 'subjectDistance': {'type': 'integer', 'description': 'The distance to the subject of the photo, in meters.', 'format': 'int32'}, 'cameraMake': {'type': 'string', 'description': 'The make of the camera used to create the photo.'}, 'colorSpace': {'type': 'string', 'description': 'The color space of the photo.'}, 'isoSpeed': {'type': 'integer', 'description': 'The ISO speed used to create the photo.', 'format': 'int32'}, 'rotation': {'type': 'integer', 'description': "The rotation in clockwise degrees from the image's original orientation.", 'format': 'int32'}, 'location': {'type': 'object', 'description': 'Geographic location information stored in the image.', 'properties': {'latitude': {'type': 'number', 'description': 'The latitude stored in the image.', 'format': 'double'}, 'longitude': {'type': 'number', 'description': 'The longitude stored in the image.', 'format': 'double'}, 'altitude': {'type': 'number', 'description': 'The altitude stored in the image.', 'format': 'double'}}}}}, 'modifiedDate': {'type': 'string', 'description': 'Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.', 'format': 'date-time'}, 'id': {'type': 'string', 'description': 'The ID of the file.'}, 'userPermission': {'description': 'The permissions for the authenticated user on this file.', '$ref': 'Permission'}, 'defaultOpenWithLink': {'type': 'string', 'description': "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."}, 'lastModifyingUserName': {'type': 'string', 'description': 'Name of the last user to modify this file.'}, 'permissions': {'type': 'array', 'description': 'The list of permissions for users with access to this file.', 'items': {'$ref': 'Permission'}}, 'modifiedByMeDate': {'type': 'string', 'description': 'Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.', 'format': 'date-time'}, 'exportLinks': {'type': 'object', 'description': 'Links for exporting Google Docs to specific formats.', 'additionalProperties': {'type': 'string', 'description': 'A mapping from export format to URL'}}, 'ownerNames': {'type': 'array', 'description': 'Name(s) of the owner(s) of this file.', 'items': {'type': 'string'}}, 'iconLink': {'type': 'string', 'description': "A link to the file's icon."}, 'videoMediaMetadata': {'type': 'object', 'description': 'Metadata about video media. This will only be present for video types.', 'properties': {'width': {'type': 'integer', 'description': 'The width of the video in pixels.', 'format': 'int32'}, 'durationMillis': {'type': 'string', 'description': 'The duration of the video in milliseconds.', 'format': 'int64'}, 'height': {'type': 'integer', 'description': 'The height of the video in pixels.', 'format': 'int32'}}}, 'spaces': {'type': 'array', 'description': "The list of spaces which contain the file. Supported values are 'drive', 'appDataFolder' and 'photos'.", 'items': {'type': 'string'}}, 'kind': {'type': 'string', 'default': 'drive#file', 'description': 'The type of file. This is always drive#file.'}, 'shared': {'type': 'boolean', 'description': 'Whether the file has been shared.'}, 'editable': {'type': 'boolean', 'description': 'Whether the file can be edited by the current user.'}, 'labels': {'type': 'object', 'description': 'A group of labels for the file.', 'properties': {'modified': {'type': 'boolean', 'description': 'Whether the file has been modified by this user.'}, 'trashed': {'type': 'boolean', 'description': 'Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files.'}, 'starred': {'type': 'boolean', 'description': 'Whether this file is starred by the user.'}, 'restricted': {'type': 'boolean', 'description': 'Whether viewers and commenters are prevented from downloading, printing, and copying this file.'}, 'hidden': {'type': 'boolean', 'description': 'Deprecated.'}, 'viewed': {'type': 'boolean', 'description': 'Whether this file has been viewed by this user.'}}}, 'parents': {'type': 'array', 'description': 'Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.', 'items': {'$ref': 'ParentReference'}}, 'copyable': {'type': 'boolean', 'description': 'Whether the file can be copied by the current user.'}, 'properties': {'type': 'array', 'description': 'The list of properties.', 'items': {'$ref': 'Property'}}, 'md5Checksum': {'type': 'string', 'description': 'An MD5 checksum for the content of this file. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files.'}}}, 'PermissionId': {'type': 'object', 'id': 'PermissionId', 'description': 'An ID for a user or group as seen in Permission items.', 'properties': {'id': {'type': 'string', 'description': 'The permission ID.'}, 'kind': {'type': 'string', 'default': 'drive#permissionId', 'description': 'This is always drive#permissionId.'}}}, 'User': {'type': 'object', 'id': 'User', 'description': 'Information about a Drive user.', 'properties': {'displayName': {'type': 'string', 'description': 'A plain text displayable name for this user.'}, 'kind': {'type': 'string', 'default': 'drive#user', 'description': 'This is always drive#user.'}, 'isAuthenticatedUser': {'type': 'boolean', 'description': 'Whether this user is the same as the authenticated user for whom the request was made.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user.'}, 'permissionId': {'type': 'string', 'description': "The user's ID as visible in the permissions collection."}, 'picture': {'type': 'object', 'description': "The user's profile picture.", 'properties': {'url': {'type': 'string', 'description': 'A URL that points to a profile picture of this user.'}}}}}, 'App': {'type': 'object', 'id': 'App', 'description': "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.", 'properties': {'primaryMimeTypes': {'type': 'array', 'description': 'The list of primary mime types.', 'items': {'type': 'string'}}, 'createUrl': {'type': 'string', 'description': 'The url to create a new file with this app.'}, 'supportsMultiOpen': {'type': 'boolean', 'description': 'Whether this app supports opening more than one file.'}, 'useByDefault': {'type': 'boolean', 'description': 'Whether the app is selected as the default handler for the types it supports.'}, 'authorized': {'type': 'boolean', 'description': "Whether the app is authorized to access data on the user's Drive."}, 'longDescription': {'type': 'string', 'description': 'A long description of the app.'}, 'installed': {'type': 'boolean', 'description': 'Whether the app is installed.'}, 'productId': {'type': 'string', 'description': 'The ID of the product listing for this app.'}, 'objectType': {'type': 'string', 'description': 'The type of object this app creates (e.g. Chart). If empty, the app name should be used instead.'}, 'shortDescription': {'type': 'string', 'description': 'A short description of the app.'}, 'id': {'type': 'string', 'description': 'The ID of the app.'}, 'productUrl': {'type': 'string', 'description': 'A link to the product listing for this app.'}, 'openUrlTemplate': {'type': 'string', 'description': 'The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation.'}, 'secondaryMimeTypes': {'type': 'array', 'description': 'The list of secondary mime types.', 'items': {'type': 'string'}}, 'secondaryFileExtensions': {'type': 'array', 'description': 'The list of secondary file extensions.', 'items': {'type': 'string'}}, 'primaryFileExtensions': {'type': 'array', 'description': 'The list of primary file extensions.', 'items': {'type': 'string'}}, 'hasDriveWideScope': {'type': 'boolean', 'description': "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."}, 'supportsImport': {'type': 'boolean', 'description': 'Whether this app supports importing Google Docs.'}, 'supportsOfflineCreate': {'type': 'boolean', 'description': 'Whether this app supports creating new files when offline.'}, 'name': {'type': 'string', 'description': 'The name of the app.'}, 'kind': {'type': 'string', 'default': 'drive#app', 'description': 'This is always drive#app.'}, 'supportsCreate': {'type': 'boolean', 'description': 'Whether this app supports creating new objects.'}, 'createInFolderTemplate': {'type': 'string', 'description': 'The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in.'}, 'icons': {'type': 'array', 'description': 'The various icons for the app.', 'items': {'type': 'object', 'properties': {'category': {'type': 'string', 'description': 'Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app'}, 'iconUrl': {'type': 'string', 'description': 'URL for the icon.'}, 'size': {'type': 'integer', 'description': 'Size of the icon. Represented as the maximum of the width and height.', 'format': 'int32'}}}}}}, 'ChildList': {'type': 'object', 'id': 'ChildList', 'description': 'A list of children of a file.', 'properties': {'nextPageToken': {'type': 'string', 'description': 'The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.'}, 'nextLink': {'type': 'string', 'description': 'A link to the next page of children.'}, 'items': {'type': 'array', 'description': 'The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.', 'items': {'$ref': 'ChildReference'}}, 'etag': {'type': 'string', 'description': 'The ETag of the list.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'kind': {'type': 'string', 'default': 'drive#childList', 'description': 'This is always drive#childList.'}}}, 'RevisionList': {'type': 'object', 'id': 'RevisionList', 'description': 'A list of revisions of a file.', 'properties': {'kind': {'type': 'string', 'default': 'drive#revisionList', 'description': 'This is always drive#revisionList.'}, 'etag': {'type': 'string', 'description': 'The ETag of the list.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'nextPageToken': {'type': 'string', 'description': 'The page token for the next page of revisions. This field will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded and pagination should be restarted from the first page of results.'}, 'items': {'type': 'array', 'description': 'The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.', 'items': {'$ref': 'Revision'}}}}, 'CommentList': {'type': 'object', 'id': 'CommentList', 'description': 'A list of comments on a file in Google Drive.', 'properties': {'kind': {'type': 'string', 'default': 'drive#commentList', 'description': 'This is always drive#commentList.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'nextLink': {'type': 'string', 'description': 'A link to the next page of comments.'}, 'nextPageToken': {'type': 'string', 'description': 'The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.'}, 'items': {'type': 'array', 'description': 'The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.', 'items': {'$ref': 'Comment'}}}}, 'GeneratedIds': {'type': 'object', 'id': 'GeneratedIds', 'description': 'A list of generated IDs which can be provided in insert requests', 'properties': {'ids': {'type': 'array', 'description': 'The IDs generated for the requesting user in the specified space.', 'items': {'type': 'string'}}, 'space': {'type': 'string', 'description': 'The type of file that can be created with these IDs.'}, 'kind': {'type': 'string', 'default': 'drive#generatedIds', 'description': 'This is always drive#generatedIds'}}}, 'Change': {'type': 'object', 'id': 'Change', 'description': 'Representation of a change to a file.', 'properties': {'deleted': {'type': 'boolean', 'description': 'Whether the file has been deleted.'}, 'file': {'description': 'The updated state of the file. Present if the file has not been deleted.', '$ref': 'File'}, 'modificationDate': {'type': 'string', 'description': 'The time of this modification.', 'format': 'date-time'}, 'kind': {'type': 'string', 'default': 'drive#change', 'description': 'This is always drive#change.'}, 'fileId': {'type': 'string', 'description': 'The ID of the file associated with this change.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this change.'}, 'id': {'type': 'string', 'description': 'The ID of the change.', 'format': 'int64'}}}, 'AppList': {'type': 'object', 'id': 'AppList', 'description': 'A list of third-party applications which the user has installed or given access to Google Drive.', 'properties': {'etag': {'type': 'string', 'description': 'The ETag of the list.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'kind': {'type': 'string', 'default': 'drive#appList', 'description': 'This is always drive#appList.'}, 'items': {'type': 'array', 'description': 'The list of apps.', 'items': {'$ref': 'App'}}, 'defaultAppIds': {'type': 'array', 'description': 'List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).', 'items': {'type': 'string'}}}}, 'StartPageToken': {'type': 'object', 'id': 'StartPageToken', 'properties': {'startPageToken': {'type': 'string', 'description': 'The starting page token for listing changes.'}, 'kind': {'type': 'string', 'default': 'drive#startPageToken', 'description': 'Identifies what kind of resource this is. Value: the fixed string "drive#startPageToken".'}}}, 'ParentReference': {'type': 'object', 'id': 'ParentReference', 'description': "A reference to a file's parent.", 'properties': {'isRoot': {'type': 'boolean', 'description': 'Whether or not the parent is the root folder.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this reference.'}, 'id': {'type': 'string', 'annotations': {'required': ['drive.parents.insert']}, 'description': 'The ID of the parent.'}, 'kind': {'type': 'string', 'default': 'drive#parentReference', 'description': 'This is always drive#parentReference.'}, 'parentLink': {'type': 'string', 'description': 'A link to the parent.'}}}, 'ChangeList': {'type': 'object', 'id': 'ChangeList', 'description': 'A list of changes for a user.', 'properties': {'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'nextPageToken': {'type': 'string', 'description': 'The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.'}, 'nextLink': {'type': 'string', 'description': 'A link to the next page of changes.'}, 'items': {'type': 'array', 'description': 'The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.', 'items': {'$ref': 'Change'}}, 'etag': {'type': 'string', 'description': 'The ETag of the list.'}, 'largestChangeId': {'type': 'string', 'description': 'The current largest change ID.', 'format': 'int64'}, 'kind': {'type': 'string', 'default': 'drive#changeList', 'description': 'This is always drive#changeList.'}}}, 'CommentReply': {'type': 'object', 'id': 'CommentReply', 'description': 'A comment on a file in Google Drive.', 'properties': {'deleted': {'type': 'boolean', 'description': 'Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed.'}, 'htmlContent': {'type': 'string', 'description': 'HTML formatted content for this reply.'}, 'createdDate': {'type': 'string', 'description': 'The date when this reply was first created.', 'format': 'date-time'}, 'kind': {'type': 'string', 'default': 'drive#commentReply', 'description': 'This is always drive#commentReply.'}, 'modifiedDate': {'type': 'string', 'description': 'The date when this reply was last modified.', 'format': 'date-time'}, 'author': {'description': 'The user who wrote this reply.', '$ref': 'User'}, 'content': {'type': 'string', 'annotations': {'required': ['drive.replies.update']}, 'description': "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."}, 'replyId': {'type': 'string', 'description': 'The ID of the reply.'}, 'verb': {'type': 'string', 'description': 'The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- "resolve" - To resolve a comment. \n- "reopen" - To reopen (un-resolve) a comment.'}}}, 'FileList': {'type': 'object', 'id': 'FileList', 'description': 'A list of files.', 'properties': {'nextPageToken': {'type': 'string', 'description': 'The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.'}, 'nextLink': {'type': 'string', 'description': 'A link to the next page of files.'}, 'items': {'type': 'array', 'description': 'The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.', 'items': {'$ref': 'File'}}, 'etag': {'type': 'string', 'description': 'The ETag of the list.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'kind': {'type': 'string', 'default': 'drive#fileList', 'description': 'This is always drive#fileList.'}}}, 'ParentList': {'type': 'object', 'id': 'ParentList', 'description': "A list of a file's parents.", 'properties': {'etag': {'type': 'string', 'description': 'The ETag of the list.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'kind': {'type': 'string', 'default': 'drive#parentList', 'description': 'This is always drive#parentList.'}, 'items': {'type': 'array', 'description': 'The list of parents.', 'items': {'$ref': 'ParentReference'}}}}, 'Revision': {'type': 'object', 'id': 'Revision', 'description': 'A revision of a file.', 'properties': {'lastModifyingUserName': {'type': 'string', 'description': 'Name of the last user to modify this revision.'}, 'md5Checksum': {'type': 'string', 'description': 'An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive.'}, 'mimeType': {'type': 'string', 'description': 'The MIME type of the revision.'}, 'exportLinks': {'type': 'object', 'description': 'Links for exporting Google Docs to specific formats.', 'additionalProperties': {'type': 'string', 'description': 'A mapping from export format to URL'}}, 'publishedOutsideDomain': {'type': 'boolean', 'description': 'Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs.'}, 'etag': {'type': 'string', 'description': 'The ETag of the revision.'}, 'published': {'type': 'boolean', 'description': 'Whether this revision is published. This is only populated and can only be modified for Google Docs.'}, 'originalFilename': {'type': 'string', 'description': 'The original filename when this revision was created. This will only be populated on files with content stored in Drive.'}, 'publishedLink': {'type': 'string', 'description': 'A link to the published revision.'}, 'downloadUrl': {'type': 'string', 'description': 'Short term download URL for the file. This will only be populated on files with content stored in Drive.'}, 'lastModifyingUser': {'description': 'The last user to modify this revision.', '$ref': 'User'}, 'fileSize': {'type': 'string', 'description': 'The size of the revision in bytes. This will only be populated on files with content stored in Drive.', 'format': 'int64'}, 'kind': {'type': 'string', 'default': 'drive#revision', 'description': 'This is always drive#revision.'}, 'modifiedDate': {'type': 'string', 'description': 'Last time this revision was modified (formatted RFC 3339 timestamp).', 'format': 'date-time'}, 'selfLink': {'type': 'string', 'description': 'A link back to this revision.'}, 'id': {'type': 'string', 'description': 'The ID of the revision.'}, 'pinned': {'type': 'boolean', 'description': 'Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter.'}, 'publishAuto': {'type': 'boolean', 'description': 'Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs.'}}}, 'Property': {'type': 'object', 'id': 'Property', 'description': 'A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.', 'properties': {'value': {'type': 'string', 'description': 'The value of this property.'}, 'visibility': {'type': 'string', 'description': 'The visibility of this property.'}, 'etag': {'type': 'string', 'description': 'ETag of the property.'}, 'selfLink': {'type': 'string', 'description': 'The link back to this property.'}, 'kind': {'type': 'string', 'default': 'drive#property', 'description': 'This is always drive#property.'}, 'key': {'type': 'string', 'description': 'The key of this property.'}}}, 'About': {'type': 'object', 'id': 'About', 'description': 'An item with user information and settings.', 'properties': {'quotaBytesUsedInTrash': {'type': 'string', 'description': 'The number of quota bytes used by trashed items.', 'format': 'int64'}, 'quotaBytesTotal': {'type': 'string', 'description': 'The total number of quota bytes.', 'format': 'int64'}, 'additionalRoleInfo': {'type': 'array', 'description': 'Information about supported additional roles per file type. The most specific type takes precedence.', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The content type that this additional role info applies to.'}, 'roleSets': {'type': 'array', 'description': 'The supported additional roles per primary role.', 'items': {'type': 'object', 'properties': {'primaryRole': {'type': 'string', 'description': 'A primary permission role.'}, 'additionalRoles': {'type': 'array', 'description': 'The supported additional roles with the primary role.', 'items': {'type': 'string'}}}}}}}}, 'etag': {'type': 'string', 'description': 'The ETag of the item.'}, 'permissionId': {'type': 'string', 'description': "The current user's ID as visible in the permissions collection."}, 'importFormats': {'type': 'array', 'description': 'The allowable import formats.', 'items': {'type': 'object', 'properties': {'targets': {'type': 'array', 'description': 'The possible content types to convert to.', 'items': {'type': 'string'}}, 'source': {'type': 'string', 'description': "The imported file's content type to convert from."}}}}, 'name': {'type': 'string', 'description': 'The name of the current user.'}, 'quotaBytesByService': {'type': 'array', 'description': 'The amount of storage quota used by different Google services.', 'items': {'type': 'object', 'properties': {'serviceName': {'type': 'string', 'description': "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."}, 'bytesUsed': {'type': 'string', 'description': 'The storage quota bytes used by the service.', 'format': 'int64'}}}}, 'quotaBytesUsed': {'type': 'string', 'description': 'The number of quota bytes used by Google Drive.', 'format': 'int64'}, 'isCurrentAppInstalled': {'type': 'boolean', 'description': 'A boolean indicating whether the authenticated app is installed by the authenticated user.'}, 'domainSharingPolicy': {'type': 'string', 'description': 'The domain sharing policy for the current user. Possible values are:  \n- allowed \n- allowedWithWarning \n- incomingOnly \n- disallowed'}, 'folderColorPalette': {'type': 'array', 'description': 'The palette of allowable folder colors as RGB hex strings.', 'items': {'type': 'string'}}, 'exportFormats': {'type': 'array', 'description': 'The allowable export formats.', 'items': {'type': 'object', 'properties': {'targets': {'type': 'array', 'description': 'The possible content types to convert to.', 'items': {'type': 'string'}}, 'source': {'type': 'string', 'description': 'The content type to convert from.'}}}}, 'selfLink': {'type': 'string', 'description': 'A link back to this item.'}, 'rootFolderId': {'type': 'string', 'description': 'The id of the root folder.'}, 'user': {'description': 'The authenticated user.', '$ref': 'User'}, 'remainingChangeIds': {'type': 'string', 'description': 'The number of remaining change ids, limited to no more than 2500.', 'format': 'int64'}, 'kind': {'type': 'string', 'default': 'drive#about', 'description': 'This is always drive#about.'}, 'quotaBytesUsedAggregate': {'type': 'string', 'description': 'The number of quota bytes used by all Google apps (Drive, Picasa, etc.).', 'format': 'int64'}, 'maxUploadSizes': {'type': 'array', 'description': 'List of max upload sizes for each file type. The most specific type takes precedence.', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'description': 'The file type.'}, 'size': {'type': 'string', 'description': 'The max upload size for this type.', 'format': 'int64'}}}}, 'quotaType': {'type': 'string', 'description': "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"}, 'largestChangeId': {'type': 'string', 'description': 'The largest change id.', 'format': 'int64'}, 'features': {'type': 'array', 'description': 'List of additional features enabled on this account.', 'items': {'type': 'object', 'properties': {'featureRate': {'type': 'number', 'description': 'The request limit rate for this feature, in queries per second.', 'format': 'double'}, 'featureName': {'type': 'string', 'description': 'The name of the feature.'}}}}, 'languageCode': {'type': 'string', 'description': "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."}}}, 'PropertyList': {'type': 'object', 'id': 'PropertyList', 'description': 'A collection of properties, key-value pairs that are either public or private to an application.', 'properties': {'etag': {'type': 'string', 'description': 'The ETag of the list.'}, 'selfLink': {'type': 'string', 'description': 'The link back to this list.'}, 'kind': {'type': 'string', 'default': 'drive#propertyList', 'description': 'This is always drive#propertyList.'}, 'items': {'type': 'array', 'description': 'The list of properties.', 'items': {'$ref': 'Property'}}}}, 'Channel': {'type': 'object', 'id': 'Channel', 'description': 'An notification channel used to watch for resource changes.', 'properties': {'type': {'type': 'string', 'description': 'The type of delivery mechanism used for this channel.'}, 'resourceUri': {'type': 'string', 'description': 'A version-specific identifier for the watched resource.'}, 'kind': {'type': 'string', 'default': 'api#channel', 'description': 'Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string "api#channel".'}, 'token': {'type': 'string', 'description': 'An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.'}, 'expiration': {'type': 'string', 'description': 'Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.', 'format': 'int64'}, 'id': {'type': 'string', 'description': 'A UUID or similar unique string that identifies this channel.'}, 'params': {'type': 'object', 'description': 'Additional parameters controlling delivery channel behavior. Optional.', 'additionalProperties': {'type': 'string', 'description': 'Declares a new parameter by name.'}}, 'resourceId': {'type': 'string', 'description': 'An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.'}, 'address': {'type': 'string', 'description': 'The address where notifications are delivered for this channel.'}, 'payload': {'type': 'boolean', 'description': 'A Boolean value to indicate whether payload is wanted. Optional.'}}}, 'Comment': {'type': 'object', 'id': 'Comment', 'description': 'A comment on a file in Google Drive.', 'properties': {'deleted': {'type': 'boolean', 'description': 'Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed.'}, 'fileTitle': {'type': 'string', 'description': 'The title of the file which this comment is addressing.'}, 'anchor': {'type': 'string', 'description': 'A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties.'}, 'createdDate': {'type': 'string', 'description': 'The date when this comment was first created.', 'format': 'date-time'}, 'author': {'description': 'The user who wrote this comment.', '$ref': 'User'}, 'replies': {'type': 'array', 'description': 'Replies to this post.', 'items': {'$ref': 'CommentReply'}}, 'status': {'type': 'string', 'description': 'The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- "open" - The comment is still open. \n- "resolved" - The comment has been resolved by one of its replies.'}, 'htmlContent': {'type': 'string', 'description': 'HTML formatted content for this comment.'}, 'context': {'type': 'object', 'description': 'The context of the file which is being commented on.', 'properties': {'type': {'type': 'string', 'description': 'The MIME type of the context snippet.'}, 'value': {'type': 'string', 'description': 'Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about.'}}}, 'commentId': {'type': 'string', 'description': 'The ID of the comment.'}, 'kind': {'type': 'string', 'default': 'drive#comment', 'description': 'This is always drive#comment.'}, 'modifiedDate': {'type': 'string', 'description': 'The date when this comment or any of its replies were last modified.', 'format': 'date-time'}, 'fileId': {'type': 'string', 'description': 'The file which this comment is addressing.'}, 'content': {'type': 'string', 'annotations': {'required': ['drive.comments.insert', 'drive.comments.update']}, 'description': "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content."}, 'selfLink': {'type': 'string', 'description': 'A link back to this comment.'}}}, 'PermissionList': {'type': 'object', 'id': 'PermissionList', 'description': 'A list of permissions associated with a file.', 'properties': {'etag': {'type': 'string', 'description': 'The ETag of the list.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this list.'}, 'kind': {'type': 'string', 'default': 'drive#permissionList', 'description': 'This is always drive#permissionList.'}, 'items': {'type': 'array', 'description': 'The list of permissions.', 'items': {'$ref': 'Permission'}}}}, 'Permission': {'type': 'object', 'id': 'Permission', 'description': 'A permission for a file.', 'properties': {'domain': {'type': 'string', 'description': 'The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain.'}, 'photoLink': {'type': 'string', 'description': 'A link to the profile photo, if available.'}, 'value': {'type': 'string', 'description': 'The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.'}, 'emailAddress': {'type': 'string', 'description': 'The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group.'}, 'etag': {'type': 'string', 'description': 'The ETag of the permission.'}, 'additionalRoles': {'type': 'array', 'description': 'Additional roles for this user. Only commenter is currently allowed.', 'items': {'type': 'string'}}, 'role': {'type': 'string', 'annotations': {'required': ['drive.permissions.insert']}, 'description': 'The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer'}, 'withLink': {'type': 'boolean', 'description': 'Whether the link is required for this permission.'}, 'type': {'type': 'string', 'annotations': {'required': ['drive.permissions.insert']}, 'description': 'The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone'}, 'authKey': {'type': 'string', 'description': 'The authkey parameter required for this permission.'}, 'expirationDate': {'type': 'string', 'description': 'The time at which this permission will expire (RFC 3339 date-time).', 'format': 'date-time'}, 'name': {'type': 'string', 'description': 'The name for this permission.'}, 'kind': {'type': 'string', 'default': 'drive#permission', 'description': 'This is always drive#permission.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this permission.'}, 'id': {'type': 'string', 'description': 'The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.'}}}, 'ChildReference': {'type': 'object', 'id': 'ChildReference', 'description': "A reference to a folder's child.", 'properties': {'id': {'type': 'string', 'annotations': {'required': ['drive.children.insert']}, 'description': 'The ID of the child.'}, 'selfLink': {'type': 'string', 'description': 'A link back to this reference.'}, 'childLink': {'type': 'string', 'description': 'A link to the child.'}, 'kind': {'type': 'string', 'default': 'drive#childReference', 'description': 'This is always drive#childReference.'}}}}, 'revision': '20170131', 'auth': {'oauth2': {'scopes': {'https://www.googleapis.com/auth/drive.metadata': {'description': 'View and manage metadata of files in your Google Drive'}, 'https://www.googleapis.com/auth/drive.readonly': {'description': 'View the files in your Google Drive'}, 'https://www.googleapis.com/auth/drive.apps.readonly': {'description': 'View your Google Drive apps'}, 'https://www.googleapis.com/auth/drive.scripts': {'description': "Modify your Google Apps Script scripts' behavior"}, 'https://www.googleapis.com/auth/drive': {'description': 'View and manage the files in your Google Drive'}, 'https://www.googleapis.com/auth/drive.metadata.readonly': {'description': 'View metadata for files in your Google Drive'}, 'https://www.googleapis.com/auth/drive.photos.readonly': {'description': 'View the photos, videos and albums in your Google Photos'}, 'https://www.googleapis.com/auth/drive.appdata': {'description': 'View and manage its own configuration data in your Google Drive'}, 'https://www.googleapis.com/auth/drive.file': {'description': 'View and manage Google Drive files and folders that you have opened or created with this app'}}}}, 'ownerName': 'Google', 'id': 'drive:v2', 'documentationLink': 'https://developers.google.com/drive/', 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}}, 'resources': {'permissions': {'methods': {'insert': {'path': 'files/{fileId}/permissions', 'response': {'$ref': 'Permission'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'Permission'}, 'description': 'Inserts a permission for a file.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file.', 'location': 'path'}, 'emailMessage': {'type': 'string', 'description': 'A custom message to include in notification emails.', 'location': 'query'}, 'sendNotificationEmails': {'type': 'boolean', 'default': 'true', 'description': 'Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.', 'location': 'query'}}, 'id': 'drive.permissions.insert', 'parameterOrder': ['fileId'], 'httpMethod': 'POST'}, 'delete': {'path': 'files/{fileId}/permissions/{permissionId}', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'DELETE', 'description': 'Deletes a permission from a file.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file.', 'location': 'path'}, 'permissionId': {'type': 'string', 'required': True, 'description': 'The ID for the permission.', 'location': 'path'}}, 'id': 'drive.permissions.delete', 'parameterOrder': ['fileId', 'permissionId']}, 'list': {'path': 'files/{fileId}/permissions', 'response': {'$ref': 'PermissionList'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': "Lists a file's permissions.", 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file.', 'location': 'path'}}, 'id': 'drive.permissions.list', 'parameterOrder': ['fileId']}, 'update': {'path': 'files/{fileId}/permissions/{permissionId}', 'response': {'$ref': 'Permission'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'Permission'}, 'description': 'Updates a permission.', 'parameters': {'removeExpiration': {'type': 'boolean', 'default': 'false', 'description': 'Whether to remove the expiration date.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file.', 'location': 'path'}, 'permissionId': {'type': 'string', 'required': True, 'description': 'The ID for the permission.', 'location': 'path'}, 'transferOwnership': {'type': 'boolean', 'default': 'false', 'description': "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.", 'location': 'query'}}, 'id': 'drive.permissions.update', 'parameterOrder': ['fileId', 'permissionId'], 'httpMethod': 'PUT'}, 'patch': {'path': 'files/{fileId}/permissions/{permissionId}', 'response': {'$ref': 'Permission'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'Permission'}, 'description': 'Updates a permission using patch semantics.', 'parameters': {'removeExpiration': {'type': 'boolean', 'default': 'false', 'description': 'Whether to remove the expiration date.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file.', 'location': 'path'}, 'permissionId': {'type': 'string', 'required': True, 'description': 'The ID for the permission.', 'location': 'path'}, 'transferOwnership': {'type': 'boolean', 'default': 'false', 'description': "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.", 'location': 'query'}}, 'id': 'drive.permissions.patch', 'parameterOrder': ['fileId', 'permissionId'], 'httpMethod': 'PATCH'}, 'getIdForEmail': {'path': 'permissionIds/{email}', 'response': {'$ref': 'PermissionId'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Returns the permission ID for an email address.', 'parameters': {'email': {'type': 'string', 'required': True, 'description': 'The email address for which to return a permission ID', 'location': 'path'}}, 'id': 'drive.permissions.getIdForEmail', 'parameterOrder': ['email']}, 'get': {'path': 'files/{fileId}/permissions/{permissionId}', 'response': {'$ref': 'Permission'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a permission by ID.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file.', 'location': 'path'}, 'permissionId': {'type': 'string', 'required': True, 'description': 'The ID for the permission.', 'location': 'path'}}, 'id': 'drive.permissions.get', 'parameterOrder': ['fileId', 'permissionId']}}}, 'about': {'methods': {'get': {'response': {'$ref': 'About'}, 'path': 'about', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets the information about the current user along with Drive API settings', 'parameters': {'maxChangeIdCount': {'format': 'int64', 'type': 'string', 'default': '1', 'description': 'Maximum number of remaining change IDs to count', 'location': 'query'}, 'includeSubscribed': {'type': 'boolean', 'default': 'true', 'description': 'When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.', 'location': 'query'}, 'startChangeId': {'type': 'string', 'format': 'int64', 'description': 'Change ID to start counting from when calculating number of remaining change IDs', 'location': 'query'}}, 'id': 'drive.about.get'}}}, 'revisions': {'methods': {'update': {'path': 'files/{fileId}/revisions/{revisionId}', 'response': {'$ref': 'Revision'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'Revision'}, 'description': 'Updates a revision.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file.', 'location': 'path'}, 'revisionId': {'type': 'string', 'required': True, 'description': 'The ID for the revision.', 'location': 'path'}}, 'id': 'drive.revisions.update', 'parameterOrder': ['fileId', 'revisionId'], 'httpMethod': 'PUT'}, 'patch': {'path': 'files/{fileId}/revisions/{revisionId}', 'response': {'$ref': 'Revision'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'Revision'}, 'description': 'Updates a revision. This method supports patch semantics.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file.', 'location': 'path'}, 'revisionId': {'type': 'string', 'required': True, 'description': 'The ID for the revision.', 'location': 'path'}}, 'id': 'drive.revisions.patch', 'parameterOrder': ['fileId', 'revisionId'], 'httpMethod': 'PATCH'}, 'delete': {'path': 'files/{fileId}/revisions/{revisionId}', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'DELETE', 'description': 'Removes a revision.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'revisionId': {'type': 'string', 'required': True, 'description': 'The ID of the revision.', 'location': 'path'}}, 'id': 'drive.revisions.delete', 'parameterOrder': ['fileId', 'revisionId']}, 'get': {'path': 'files/{fileId}/revisions/{revisionId}', 'response': {'$ref': 'Revision'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a specific revision.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'revisionId': {'type': 'string', 'required': True, 'description': 'The ID of the revision.', 'location': 'path'}}, 'id': 'drive.revisions.get', 'parameterOrder': ['fileId', 'revisionId']}, 'list': {'path': 'files/{fileId}/revisions', 'response': {'$ref': 'RevisionList'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': "Lists a file's revisions.", 'parameters': {'maxResults': {'type': 'integer', 'minimum': '1', 'description': 'Maximum number of revisions to return.', 'default': '200', 'format': 'int32', 'location': 'query', 'maximum': '1000'}, 'pageToken': {'type': 'string', 'description': 'Page token for revisions. To get the next page of results, set this parameter to the value of "nextPageToken" from the previous response.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}}, 'id': 'drive.revisions.list', 'parameterOrder': ['fileId']}}}, 'realtime': {'methods': {'update': {'path': 'files/{fileId}/realtime', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'PUT', 'mediaUpload': {'protocols': {'resumable': {'multipart': True, 'path': '/resumable/upload/drive/v2/files/{fileId}/realtime'}, 'simple': {'multipart': True, 'path': '/upload/drive/v2/files/{fileId}/realtime'}}, 'accept': ['*/*'], 'maxSize': '10MB'}, 'parameters': {'baseRevision': {'type': 'string', 'description': 'The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file that the Realtime API data model is associated with.', 'location': 'path'}}, 'id': 'drive.realtime.update', 'description': 'Overwrites the Realtime API data model associated with this file with the provided JSON data model.', 'supportsMediaUpload': True, 'parameterOrder': ['fileId']}, 'get': {'path': 'files/{fileId}/realtime', 'supportsMediaDownload': True, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Exports the contents of the Realtime API data model associated with this file as JSON.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file that the Realtime API data model is associated with.', 'location': 'path'}, 'revision': {'type': 'integer', 'minimum': '1', 'format': 'int32', 'description': 'The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.', 'location': 'query'}}, 'id': 'drive.realtime.get', 'parameterOrder': ['fileId']}}}, 'changes': {'methods': {'get': {'path': 'changes/{changeId}', 'response': {'$ref': 'Change'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a specific change.', 'parameters': {'changeId': {'type': 'string', 'required': True, 'description': 'The ID of the change.', 'location': 'path'}}, 'id': 'drive.changes.get', 'parameterOrder': ['changeId']}, 'getStartPageToken': {'response': {'$ref': 'StartPageToken'}, 'path': 'changes/startPageToken', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets the starting pageToken for listing future changes.', 'id': 'drive.changes.getStartPageToken'}, 'list': {'response': {'$ref': 'ChangeList'}, 'path': 'changes', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'supportsSubscription': True, 'httpMethod': 'GET', 'description': 'Lists the changes for a user.', 'parameters': {'maxResults': {'type': 'integer', 'minimum': '1', 'description': 'Maximum number of changes to return.', 'default': '100', 'format': 'int32', 'location': 'query'}, 'pageToken': {'type': 'string', 'description': "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.", 'location': 'query'}, 'includeSubscribed': {'type': 'boolean', 'default': 'true', 'description': 'Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.', 'location': 'query'}, 'startChangeId': {'type': 'string', 'format': 'int64', 'description': 'Change ID to start listing changes from.', 'location': 'query'}, 'spaces': {'type': 'string', 'description': "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.", 'location': 'query'}, 'includeDeleted': {'type': 'boolean', 'default': 'true', 'description': 'Whether to include deleted items.', 'location': 'query'}}, 'id': 'drive.changes.list'}, 'watch': {'path': 'changes/watch', 'response': {'$ref': 'Channel'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'supportsSubscription': True, 'request': {'$ref': 'Channel', 'parameterName': 'resource'}, 'description': 'Subscribe to changes for a user.', 'parameters': {'maxResults': {'type': 'integer', 'minimum': '1', 'description': 'Maximum number of changes to return.', 'default': '100', 'format': 'int32', 'location': 'query'}, 'pageToken': {'type': 'string', 'description': "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.", 'location': 'query'}, 'includeSubscribed': {'type': 'boolean', 'default': 'true', 'description': 'Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.', 'location': 'query'}, 'startChangeId': {'type': 'string', 'format': 'int64', 'description': 'Change ID to start listing changes from.', 'location': 'query'}, 'spaces': {'type': 'string', 'description': "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.", 'location': 'query'}, 'includeDeleted': {'type': 'boolean', 'default': 'true', 'description': 'Whether to include deleted items.', 'location': 'query'}}, 'id': 'drive.changes.watch', 'httpMethod': 'POST'}}}, 'replies': {'methods': {'insert': {'path': 'files/{fileId}/comments/{commentId}/replies', 'response': {'$ref': 'CommentReply'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'CommentReply'}, 'description': 'Creates a new reply to the given comment.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.replies.insert', 'parameterOrder': ['fileId', 'commentId'], 'httpMethod': 'POST'}, 'delete': {'path': 'files/{fileId}/comments/{commentId}/replies/{replyId}', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'DELETE', 'description': 'Deletes a reply.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'replyId': {'type': 'string', 'required': True, 'description': 'The ID of the reply.', 'location': 'path'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.replies.delete', 'parameterOrder': ['fileId', 'commentId', 'replyId']}, 'list': {'path': 'files/{fileId}/comments/{commentId}/replies', 'response': {'$ref': 'CommentReplyList'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Lists all of the replies to a comment.', 'parameters': {'maxResults': {'type': 'integer', 'minimum': '0', 'description': 'The maximum number of replies to include in the response, used for paging.', 'default': '20', 'format': 'int32', 'location': 'query', 'maximum': '100'}, 'pageToken': {'type': 'string', 'description': 'The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of "nextPageToken" from the previous response.', 'location': 'query'}, 'includeDeleted': {'type': 'boolean', 'default': 'false', 'description': 'If set, all replies, including deleted replies (with content stripped) will be returned.', 'location': 'query'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}}, 'id': 'drive.replies.list', 'parameterOrder': ['fileId', 'commentId']}, 'update': {'path': 'files/{fileId}/comments/{commentId}/replies/{replyId}', 'response': {'$ref': 'CommentReply'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'CommentReply'}, 'description': 'Updates an existing reply.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'replyId': {'type': 'string', 'required': True, 'description': 'The ID of the reply.', 'location': 'path'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.replies.update', 'parameterOrder': ['fileId', 'commentId', 'replyId'], 'httpMethod': 'PUT'}, 'patch': {'path': 'files/{fileId}/comments/{commentId}/replies/{replyId}', 'response': {'$ref': 'CommentReply'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'CommentReply'}, 'description': 'Updates an existing reply. This method supports patch semantics.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'replyId': {'type': 'string', 'required': True, 'description': 'The ID of the reply.', 'location': 'path'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.replies.patch', 'parameterOrder': ['fileId', 'commentId', 'replyId'], 'httpMethod': 'PATCH'}, 'get': {'path': 'files/{fileId}/comments/{commentId}/replies/{replyId}', 'response': {'$ref': 'CommentReply'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a reply.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'replyId': {'type': 'string', 'required': True, 'description': 'The ID of the reply.', 'location': 'path'}, 'includeDeleted': {'type': 'boolean', 'default': 'false', 'description': 'If set, this will succeed when retrieving a deleted reply.', 'location': 'query'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.replies.get', 'parameterOrder': ['fileId', 'commentId', 'replyId']}}}, 'files': {'methods': {'untrash': {'path': 'files/{fileId}/untrash', 'response': {'$ref': 'File'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'POST', 'description': 'Restores a file from the trash.', 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file to untrash.', 'location': 'path'}, 'strict': {'type': 'string', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.untrash', 'parameterOrder': ['fileId']}, 'copy': {'path': 'files/{fileId}/copy', 'response': {'$ref': 'File'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.photos.readonly'], 'request': {'$ref': 'File'}, 'description': 'Creates a copy of the specified file.', 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'visibility': {'type': 'string', 'enum': ['DEFAULT', 'PRIVATE'], 'description': 'The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.', 'default': 'DEFAULT', 'enumDescriptions': ["The visibility of the new file is determined by the user's default visibility/sharing policies.", 'The new file will be visible to only the owner.'], 'location': 'query'}, 'body': {'type': 'object', '$ref': 'File', 'required': True, 'description': 'The request body.'}, 'timedTextTrackName': {'type': 'string', 'description': 'The timed text track name.', 'location': 'query'}, 'ocrLanguage': {'type': 'string', 'description': 'If ocr is true, hints at the language to use. Valid values are BCP 47 codes.', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'timedTextLanguage': {'type': 'string', 'description': 'The language of the timed text.', 'location': 'query'}, 'convert': {'type': 'boolean', 'default': 'false', 'description': 'Whether to convert this file to the corresponding Google Docs format.', 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'strict': {'type': 'string', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file to copy.', 'location': 'path'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}, 'pinned': {'type': 'boolean', 'default': 'false', 'description': 'Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.', 'location': 'query'}, 'ocr': {'type': 'boolean', 'default': 'false', 'description': 'Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.', 'location': 'query'}}, 'id': 'drive.files.copy', 'parameterOrder': ['fileId'], 'httpMethod': 'POST'}, 'generateIds': {'response': {'$ref': 'GeneratedIds'}, 'path': 'files/generateIds', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'GET', 'description': 'Generates a set of file IDs which can be provided in insert requests.', 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'maxResults': {'type': 'integer', 'minimum': '1', 'description': 'Maximum number of IDs to return.', 'default': '10', 'format': 'int32', 'location': 'query', 'maximum': '1000'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'space': {'type': 'string', 'default': 'drive', 'description': "The space in which the IDs can be used to create new files. Supported values are 'drive' and 'appDataFolder'.", 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'strict': {'type': 'string', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.generateIds'}, 'patch': {'path': 'files/{fileId}', 'response': {'$ref': 'File'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.scripts'], 'request': {'$ref': 'File'}, 'description': 'Updates file metadata and/or content. This method supports patch semantics.', 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'body': {'type': 'object', '$ref': 'File', 'required': True, 'description': 'The request body.'}, 'ocrLanguage': {'type': 'string', 'description': 'If ocr is true, hints at the language to use. Valid values are BCP 47 codes.', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'addParents': {'type': 'string', 'description': 'Comma-separated list of parent IDs to add.', 'location': 'query'}, 'modifiedDateBehavior': {'description': 'Determines the behavior in which modifiedDate is updated. This overrides setModifiedDate.', 'type': 'string', 'enum': ['fromBody', 'fromBodyIfNeeded', 'fromBodyOrNow', 'noChange', 'now', 'nowIfNeeded'], 'enumDescriptions': ['Set modifiedDate to the value provided in the body of the request. No change if no value was provided.', 'Set modifiedDate to the value provided in the body of the request depending on other contents of the update.', 'Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.', 'Maintain the previous value of modifiedDate.', 'Set modifiedDate to the current time.', 'Set modifiedDate to the current time depending on contents of the update.'], 'location': 'query'}, 'updateViewedDate': {'type': 'boolean', 'default': 'true', 'description': 'Whether to update the view date after successfully updating the file.', 'location': 'query'}, 'strict': {'type': 'string', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file to update.', 'location': 'path'}, 'userip': {'type': 'string', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}, 'ocr': {'type': 'boolean', 'default': 'false', 'description': 'Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'newRevision': {'type': 'boolean', 'default': 'true', 'description': 'Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the Drive Help Center.', 'location': 'query'}, 'useContentAsIndexableText': {'type': 'boolean', 'default': 'false', 'description': 'Whether to use the content as indexable text.', 'location': 'query'}, 'timedTextLanguage': {'type': 'string', 'description': 'The language of the timed text.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'convert': {'type': 'boolean', 'default': 'false', 'description': 'This parameter is deprecated and has no function.', 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'removeParents': {'type': 'string', 'description': 'Comma-separated list of parent IDs to remove.', 'location': 'query'}, 'timedTextTrackName': {'type': 'string', 'description': 'The timed text track name.', 'location': 'query'}, 'setModifiedDate': {'type': 'boolean', 'default': 'false', 'description': 'Whether to set the modified date with the supplied modified date.', 'location': 'query'}, 'pinned': {'type': 'boolean', 'default': 'false', 'description': 'Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.', 'location': 'query'}}, 'id': 'drive.files.patch', 'parameterOrder': ['fileId'], 'httpMethod': 'PATCH'}, 'delete': {'path': 'files/{fileId}', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'DELETE', 'description': 'Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.', 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file to delete.', 'location': 'path'}, 'strict': {'type': 'string', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.delete', 'parameterOrder': ['fileId']}, 'emptyTrash': {'path': 'files/trash', 'scopes': ['https://www.googleapis.com/auth/drive'], 'httpMethod': 'DELETE', 'description': "Permanently deletes all of the user's trashed files.", 'parameters': {'trace': {'type': 'string', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'strict': {'type': 'string', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}}, 'id': 'drive.files.emptyTrash'}, 'get': {'path': 'files/{fileId}', 'response': {'$ref': 'File'}, 'supportsMediaDownload': True, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'supportsSubscription': True, 'httpMethod': 'GET', 'useMediaDownloadService': True, 'description': "Gets a file's metadata by ID.", 'parameters': {'userip': {'type': 'string', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'acknowledgeAbuse': {'type': 'boolean', 'default': 'false', 'description': 'Whether the user is acknowledging the risk of downloading known malware or other abusive files.', 'location': 'query'}, 'projection': {'description': 'This parameter is deprecated and has no function.', 'type': 'string', 'enum': ['BASIC', 'FULL'], 'enumDescriptions': ['Deprecated', 'Deprecated'], 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'updateViewedDate': {'type': 'boolean', 'default': 'false', 'description': 'Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.', 'location': 'query'}, 'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file in question.', 'location': 'path'}, 'strict': {'type': 'string', 'location': 'query'}, 'revisionId': {'type': 'string', 'description': 'Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.get', 'parameterOrder': ['fileId']}, 'insert': {'path': 'files', 'response': {'$ref': 'File'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file'], 'supportsSubscription': True, 'request': {'$ref': 'File'}, 'mediaUpload': {'protocols': {'resumable': {'multipart': True, 'path': '/resumable/upload/drive/v2/files'}, 'simple': {'multipart': True, 'path': '/upload/drive/v2/files'}}, 'accept': ['*/*'], 'maxSize': '5120GB'}, 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'visibility': {'type': 'string', 'enum': ['DEFAULT', 'PRIVATE'], 'description': 'The visibility of the new file. This parameter is only relevant when convert=false.', 'default': 'DEFAULT', 'enumDescriptions': ["The visibility of the new file is determined by the user's default visibility/sharing policies.", 'The new file will be visible to only the owner.'], 'location': 'query'}, 'body': {'type': 'object', '$ref': 'File', 'required': False, 'description': 'The request body.'}, 'ocrLanguage': {'type': 'string', 'description': 'If ocr is true, hints at the language to use. Valid values are BCP 47 codes.', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'media_body': {'type': 'string', 'required': False, 'description': 'The filename of the media request body, or an instance of a MediaUpload object.'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'media_mime_type': {'type': 'string', 'required': False, 'description': 'The MIME type of the media request body, or an instance of a MediaUpload object.'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}, 'ocr': {'type': 'boolean', 'default': 'false', 'description': 'Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'useContentAsIndexableText': {'type': 'boolean', 'default': 'false', 'description': 'Whether to use the content as indexable text.', 'location': 'query'}, 'timedTextLanguage': {'type': 'string', 'description': 'The language of the timed text.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'convert': {'type': 'boolean', 'default': 'false', 'description': 'Whether to convert this file to the corresponding Google Docs format.', 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'strict': {'type': 'string', 'location': 'query'}, 'timedTextTrackName': {'type': 'string', 'description': 'The timed text track name.', 'location': 'query'}, 'pinned': {'type': 'boolean', 'default': 'false', 'description': 'Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.', 'location': 'query'}}, 'id': 'drive.files.insert', 'description': 'Insert a new file.', 'supportsMediaUpload': True, 'httpMethod': 'POST'}, 'touch': {'path': 'files/{fileId}/touch', 'response': {'$ref': 'File'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata'], 'httpMethod': 'POST', 'description': "Set the file's updated time to the current server time.", 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file to update.', 'location': 'path'}, 'strict': {'type': 'string', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.touch', 'parameterOrder': ['fileId']}, 'trash': {'path': 'files/{fileId}/trash', 'response': {'$ref': 'File'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'POST', 'description': 'Moves a file to the trash. The currently authenticated user must own the file.', 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file to trash.', 'location': 'path'}, 'strict': {'type': 'string', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.trash', 'parameterOrder': ['fileId']}, 'list': {'response': {'$ref': 'FileList'}, 'path': 'files', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': "Lists the user's files.", 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'maxResults': {'type': 'integer', 'minimum': '0', 'description': 'Maximum number of files to return.', 'default': '100', 'format': 'int32', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'pageToken': {'type': 'string', 'description': 'Page token for files.', 'location': 'query'}, 'orderBy': {'type': 'string', 'description': "A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', and 'title'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.", 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'spaces': {'type': 'string', 'description': "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.", 'location': 'query'}, 'q': {'type': 'string', 'description': 'Query string for searching files.', 'location': 'query'}, 'projection': {'description': 'This parameter is deprecated and has no function.', 'type': 'string', 'enum': ['BASIC', 'FULL'], 'enumDescriptions': ['Deprecated', 'Deprecated'], 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'corpus': {'description': 'The body of items (files/documents) to which the query applies.', 'type': 'string', 'enum': ['DEFAULT', 'DOMAIN'], 'enumDescriptions': ['The items that the user has accessed.', "Items shared to the user's domain."], 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'strict': {'type': 'string', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.list'}, 'update': {'path': 'files/{fileId}', 'response': {'$ref': 'File'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.scripts'], 'request': {'$ref': 'File'}, 'id': 'drive.files.update', 'mediaUpload': {'protocols': {'resumable': {'multipart': True, 'path': '/resumable/upload/drive/v2/files/{fileId}'}, 'simple': {'multipart': True, 'path': '/upload/drive/v2/files/{fileId}'}}, 'accept': ['*/*'], 'maxSize': '5120GB'}, 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'body': {'type': 'object', '$ref': 'File', 'required': False, 'description': 'The request body.'}, 'ocrLanguage': {'type': 'string', 'description': 'If ocr is true, hints at the language to use. Valid values are BCP 47 codes.', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'addParents': {'type': 'string', 'description': 'Comma-separated list of parent IDs to add.', 'location': 'query'}, 'modifiedDateBehavior': {'description': 'Determines the behavior in which modifiedDate is updated. This overrides setModifiedDate.', 'type': 'string', 'enum': ['fromBody', 'fromBodyIfNeeded', 'fromBodyOrNow', 'noChange', 'now', 'nowIfNeeded'], 'enumDescriptions': ['Set modifiedDate to the value provided in the body of the request. No change if no value was provided.', 'Set modifiedDate to the value provided in the body of the request depending on other contents of the update.', 'Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.', 'Maintain the previous value of modifiedDate.', 'Set modifiedDate to the current time.', 'Set modifiedDate to the current time depending on contents of the update.'], 'location': 'query'}, 'updateViewedDate': {'type': 'boolean', 'default': 'true', 'description': 'Whether to update the view date after successfully updating the file.', 'location': 'query'}, 'strict': {'type': 'string', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file to update.', 'location': 'path'}, 'userip': {'type': 'string', 'location': 'query'}, 'media_mime_type': {'type': 'string', 'required': False, 'description': 'The MIME type of the media request body, or an instance of a MediaUpload object.'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}, 'ocr': {'type': 'boolean', 'default': 'false', 'description': 'Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'newRevision': {'type': 'boolean', 'default': 'true', 'description': 'Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the Drive Help Center.', 'location': 'query'}, 'media_body': {'type': 'string', 'required': False, 'description': 'The filename of the media request body, or an instance of a MediaUpload object.'}, 'useContentAsIndexableText': {'type': 'boolean', 'default': 'false', 'description': 'Whether to use the content as indexable text.', 'location': 'query'}, 'timedTextLanguage': {'type': 'string', 'description': 'The language of the timed text.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'convert': {'type': 'boolean', 'default': 'false', 'description': 'This parameter is deprecated and has no function.', 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'removeParents': {'type': 'string', 'description': 'Comma-separated list of parent IDs to remove.', 'location': 'query'}, 'timedTextTrackName': {'type': 'string', 'description': 'The timed text track name.', 'location': 'query'}, 'setModifiedDate': {'type': 'boolean', 'default': 'false', 'description': 'Whether to set the modified date with the supplied modified date.', 'location': 'query'}, 'pinned': {'type': 'boolean', 'default': 'false', 'description': 'Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.', 'location': 'query'}}, 'parameterOrder': ['fileId'], 'description': 'Updates file metadata and/or content.', 'supportsMediaUpload': True, 'httpMethod': 'PUT'}, 'export': {'path': 'files/{fileId}/export', 'supportsMediaDownload': True, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Exports a Google Doc to the requested MIME type and returns the exported content.', 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'mimeType': {'type': 'string', 'required': True, 'description': 'The MIME type of the format requested for this export.', 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'strict': {'type': 'string', 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.export', 'parameterOrder': ['fileId', 'mimeType']}, 'watch': {'path': 'files/{fileId}/watch', 'supportsMediaDownload': True, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'useMediaDownloadService': True, 'description': 'Subscribe to changes on a file', 'httpMethod': 'POST', 'parameterOrder': ['fileId'], 'response': {'$ref': 'Channel'}, 'supportsSubscription': True, 'request': {'$ref': 'Channel', 'parameterName': 'resource'}, 'parameters': {'userIp': {'type': 'string', 'description': 'IP address of the site where the request originates. Use this if you want to enforce per-user limits.', 'location': 'query'}, 'oauth_token': {'type': 'string', 'description': 'OAuth 2.0 token for the current user.', 'location': 'query'}, 'pp': {'type': 'string', 'location': 'query'}, 'quotaUser': {'type': 'string', 'description': 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.', 'location': 'query'}, 'body': {'type': 'object', '$ref': 'Channel', 'required': True, 'description': 'The request body.', 'parameterName': 'resource'}, 'acknowledgeAbuse': {'type': 'boolean', 'default': 'false', 'description': 'Whether the user is acknowledging the risk of downloading known malware or other abusive files.', 'location': 'query'}, 'projection': {'description': 'This parameter is deprecated and has no function.', 'type': 'string', 'enum': ['BASIC', 'FULL'], 'enumDescriptions': ['Deprecated', 'Deprecated'], 'location': 'query'}, 'userip': {'type': 'string', 'location': 'query'}, 'trace': {'type': 'string', 'location': 'query'}, 'alt': {'type': 'string', 'enum': ['json'], 'description': 'Data format for the response.', 'default': 'json', 'enumDescriptions': ['Responses with Content-Type of application/json'], 'location': 'query'}, 'key': {'type': 'string', 'description': 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.', 'location': 'query'}, 'updateViewedDate': {'type': 'boolean', 'default': 'false', 'description': 'Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.', 'location': 'query'}, 'fields': {'type': 'string', 'description': 'Selector specifying which fields to include in a partial response.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID for the file in question.', 'location': 'path'}, 'strict': {'type': 'string', 'location': 'query'}, 'revisionId': {'type': 'string', 'description': 'Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.', 'location': 'query'}, 'prettyPrint': {'type': 'boolean', 'default': 'true', 'description': 'Returns response with indentations and line breaks.', 'location': 'query'}}, 'id': 'drive.files.watch'}}}, 'comments': {'methods': {'insert': {'path': 'files/{fileId}/comments', 'response': {'$ref': 'Comment'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'Comment'}, 'description': 'Creates a new comment on the given file.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}}, 'id': 'drive.comments.insert', 'parameterOrder': ['fileId'], 'httpMethod': 'POST'}, 'delete': {'path': 'files/{fileId}/comments/{commentId}', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'DELETE', 'description': 'Deletes a comment.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.comments.delete', 'parameterOrder': ['fileId', 'commentId']}, 'list': {'path': 'files/{fileId}/comments', 'response': {'$ref': 'CommentList'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': "Lists a file's comments.", 'parameters': {'updatedMin': {'type': 'string', 'description': 'Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.', 'location': 'query'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'pageToken': {'type': 'string', 'description': 'The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of "nextPageToken" from the previous response.', 'location': 'query'}, 'includeDeleted': {'type': 'boolean', 'default': 'false', 'description': 'If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.', 'location': 'query'}, 'maxResults': {'type': 'integer', 'minimum': '0', 'description': 'The maximum number of discussions to include in the response, used for paging.', 'default': '20', 'format': 'int32', 'location': 'query', 'maximum': '100'}}, 'id': 'drive.comments.list', 'parameterOrder': ['fileId']}, 'update': {'path': 'files/{fileId}/comments/{commentId}', 'response': {'$ref': 'Comment'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'Comment'}, 'description': 'Updates an existing comment.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.comments.update', 'parameterOrder': ['fileId', 'commentId'], 'httpMethod': 'PUT'}, 'patch': {'path': 'files/{fileId}/comments/{commentId}', 'response': {'$ref': 'Comment'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'Comment'}, 'description': 'Updates an existing comment. This method supports patch semantics.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.comments.patch', 'parameterOrder': ['fileId', 'commentId'], 'httpMethod': 'PATCH'}, 'get': {'path': 'files/{fileId}/comments/{commentId}', 'response': {'$ref': 'Comment'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a comment by ID.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'includeDeleted': {'type': 'boolean', 'default': 'false', 'description': 'If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.', 'location': 'query'}, 'commentId': {'type': 'string', 'required': True, 'description': 'The ID of the comment.', 'location': 'path'}}, 'id': 'drive.comments.get', 'parameterOrder': ['fileId', 'commentId']}}}, 'children': {'methods': {'insert': {'path': 'files/{folderId}/children', 'response': {'$ref': 'ChildReference'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'ChildReference'}, 'description': 'Inserts a file into a folder.', 'parameters': {'folderId': {'type': 'string', 'required': True, 'description': 'The ID of the folder.', 'location': 'path'}}, 'id': 'drive.children.insert', 'parameterOrder': ['folderId'], 'httpMethod': 'POST'}, 'delete': {'path': 'files/{folderId}/children/{childId}', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'DELETE', 'description': 'Removes a child from a folder.', 'parameters': {'childId': {'type': 'string', 'required': True, 'description': 'The ID of the child.', 'location': 'path'}, 'folderId': {'type': 'string', 'required': True, 'description': 'The ID of the folder.', 'location': 'path'}}, 'id': 'drive.children.delete', 'parameterOrder': ['folderId', 'childId']}, 'get': {'path': 'files/{folderId}/children/{childId}', 'response': {'$ref': 'ChildReference'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a specific child reference.', 'parameters': {'childId': {'type': 'string', 'required': True, 'description': 'The ID of the child.', 'location': 'path'}, 'folderId': {'type': 'string', 'required': True, 'description': 'The ID of the folder.', 'location': 'path'}}, 'id': 'drive.children.get', 'parameterOrder': ['folderId', 'childId']}, 'list': {'path': 'files/{folderId}/children', 'response': {'$ref': 'ChildList'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': "Lists a folder's children.", 'parameters': {'q': {'type': 'string', 'description': 'Query string for searching children.', 'location': 'query'}, 'maxResults': {'type': 'integer', 'minimum': '0', 'description': 'Maximum number of children to return.', 'default': '100', 'format': 'int32', 'location': 'query'}, 'pageToken': {'type': 'string', 'description': 'Page token for children.', 'location': 'query'}, 'orderBy': {'type': 'string', 'description': "A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', and 'title'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.", 'location': 'query'}, 'folderId': {'type': 'string', 'required': True, 'description': 'The ID of the folder.', 'location': 'path'}}, 'id': 'drive.children.list', 'parameterOrder': ['folderId']}}}, 'channels': {'methods': {'stop': {'path': 'channels/stop', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'POST', 'description': 'Stop watching resources through this channel', 'request': {'$ref': 'Channel', 'parameterName': 'resource'}, 'id': 'drive.channels.stop'}}}, 'parents': {'methods': {'insert': {'path': 'files/{fileId}/parents', 'response': {'$ref': 'ParentReference'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file'], 'request': {'$ref': 'ParentReference'}, 'description': 'Adds a parent folder for a file.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}}, 'id': 'drive.parents.insert', 'parameterOrder': ['fileId'], 'httpMethod': 'POST'}, 'delete': {'path': 'files/{fileId}/parents/{parentId}', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.file'], 'httpMethod': 'DELETE', 'description': 'Removes a parent from a file.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'parentId': {'type': 'string', 'required': True, 'description': 'The ID of the parent.', 'location': 'path'}}, 'id': 'drive.parents.delete', 'parameterOrder': ['fileId', 'parentId']}, 'get': {'path': 'files/{fileId}/parents/{parentId}', 'response': {'$ref': 'ParentReference'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a specific parent reference.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'parentId': {'type': 'string', 'required': True, 'description': 'The ID of the parent.', 'location': 'path'}}, 'id': 'drive.parents.get', 'parameterOrder': ['fileId', 'parentId']}, 'list': {'path': 'files/{fileId}/parents', 'response': {'$ref': 'ParentList'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': "Lists a file's parents.", 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}}, 'id': 'drive.parents.list', 'parameterOrder': ['fileId']}}}, 'properties': {'methods': {'insert': {'path': 'files/{fileId}/properties', 'response': {'$ref': 'Property'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata'], 'request': {'$ref': 'Property'}, 'description': 'Adds a property to a file, or updates it if it already exists.', 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}}, 'id': 'drive.properties.insert', 'parameterOrder': ['fileId'], 'httpMethod': 'POST'}, 'delete': {'path': 'files/{fileId}/properties/{propertyKey}', 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata'], 'httpMethod': 'DELETE', 'description': 'Deletes a property.', 'parameters': {'propertyKey': {'type': 'string', 'required': True, 'description': 'The key of the property.', 'location': 'path'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'visibility': {'type': 'string', 'default': 'private', 'description': 'The visibility of the property.', 'location': 'query'}}, 'id': 'drive.properties.delete', 'parameterOrder': ['fileId', 'propertyKey']}, 'list': {'path': 'files/{fileId}/properties', 'response': {'$ref': 'PropertyList'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': "Lists a file's properties.", 'parameters': {'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}}, 'id': 'drive.properties.list', 'parameterOrder': ['fileId']}, 'update': {'path': 'files/{fileId}/properties/{propertyKey}', 'response': {'$ref': 'Property'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata'], 'request': {'$ref': 'Property'}, 'description': "Updates a property, or adds it if it doesn't exist.", 'parameters': {'propertyKey': {'type': 'string', 'required': True, 'description': 'The key of the property.', 'location': 'path'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'visibility': {'type': 'string', 'default': 'private', 'description': 'The visibility of the property.', 'location': 'query'}}, 'id': 'drive.properties.update', 'parameterOrder': ['fileId', 'propertyKey'], 'httpMethod': 'PUT'}, 'patch': {'path': 'files/{fileId}/properties/{propertyKey}', 'response': {'$ref': 'Property'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata'], 'request': {'$ref': 'Property'}, 'description': "Updates a property, or adds it if it doesn't exist. This method supports patch semantics.", 'parameters': {'propertyKey': {'type': 'string', 'required': True, 'description': 'The key of the property.', 'location': 'path'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'visibility': {'type': 'string', 'default': 'private', 'description': 'The visibility of the property.', 'location': 'query'}}, 'id': 'drive.properties.patch', 'parameterOrder': ['fileId', 'propertyKey'], 'httpMethod': 'PATCH'}, 'get': {'path': 'files/{fileId}/properties/{propertyKey}', 'response': {'$ref': 'Property'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.photos.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a property by its key.', 'parameters': {'propertyKey': {'type': 'string', 'required': True, 'description': 'The key of the property.', 'location': 'path'}, 'fileId': {'type': 'string', 'required': True, 'description': 'The ID of the file.', 'location': 'path'}, 'visibility': {'type': 'string', 'default': 'private', 'description': 'The visibility of the property.', 'location': 'query'}}, 'id': 'drive.properties.get', 'parameterOrder': ['fileId', 'propertyKey']}}}, 'apps': {'methods': {'list': {'response': {'$ref': 'AppList'}, 'path': 'apps', 'scopes': ['https://www.googleapis.com/auth/drive.apps.readonly'], 'httpMethod': 'GET', 'description': "Lists a user's installed apps.", 'parameters': {'appFilterMimeTypes': {'type': 'string', 'default': '', 'description': 'A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.', 'location': 'query'}, 'languageCode': {'type': 'string', 'description': "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).", 'location': 'query'}, 'appFilterExtensions': {'type': 'string', 'default': '', 'description': 'A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.', 'location': 'query'}}, 'id': 'drive.apps.list'}, 'get': {'path': 'apps/{appId}', 'response': {'$ref': 'App'}, 'scopes': ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/drive.appdata', 'https://www.googleapis.com/auth/drive.apps.readonly', 'https://www.googleapis.com/auth/drive.file', 'https://www.googleapis.com/auth/drive.metadata', 'https://www.googleapis.com/auth/drive.metadata.readonly', 'https://www.googleapis.com/auth/drive.readonly'], 'httpMethod': 'GET', 'description': 'Gets a specific app.', 'parameters': {'appId': {'type': 'string', 'required': True, 'description': 'The ID of the app.', 'location': 'path'}}, 'id': 'drive.apps.get', 'parameterOrder': ['appId']}}}}, 'protocol': 'rest', 'ownerDomain': 'google.com', 'name': 'drive', 'kind': 'discovery#restDescription', 'servicePath': 'drive/v2/', 'icons': {'x16': 'https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png', 'x32': 'https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png'}, 'description': 'Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.', 'rootUrl': 'https://www.googleapis.com/', 'title': 'Drive API'}
