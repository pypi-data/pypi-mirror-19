
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3F6AEAEE41825650B34CA9D5A9A9AE52'
    
_lr_action_items = {'EXTENDS':([33,],[54,]),'REL':([49,87,122,150,151,179,],[88,118,-45,-48,-46,-47,]),'TRUE':([35,37,67,80,87,91,106,122,139,140,150,151,157,165,166,179,183,184,189,207,214,],[74,74,74,74,74,74,74,-45,168,168,-48,-46,74,168,168,-47,168,168,74,74,74,]),'USING':([3,46,56,],[-98,85,-99,]),'IS':([167,197,],[188,208,]),'IMPLEMENTATION':([0,1,3,4,6,7,8,11,12,14,15,17,19,22,23,24,25,27,44,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,95,97,102,104,111,113,114,115,117,122,127,130,134,136,138,143,147,148,150,151,155,156,159,161,162,163,164,167,168,169,171,172,174,178,179,186,191,195,196,197,198,199,200,201,202,203,204,205,212,],[2,-15,-98,-16,-7,-6,-11,-8,-10,-3,-4,-9,2,-5,-14,-103,-17,-106,-12,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,-26,-22,-77,-75,-51,-13,-34,-95,-36,-45,-27,-25,-76,-52,-21,-39,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,-103,-64,-65,-35,-94,-38,-40,-47,-61,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'CID':([0,1,3,4,6,7,8,9,11,12,14,15,17,18,19,21,22,23,24,25,27,28,34,35,37,44,45,47,51,54,56,57,58,59,60,61,62,63,64,66,67,68,70,71,72,73,74,75,76,77,78,80,81,87,91,92,95,97,102,104,105,106,111,113,114,115,116,117,118,119,120,122,125,127,130,134,135,136,138,139,140,142,143,146,147,148,150,151,155,156,159,161,162,163,164,165,166,167,168,169,171,172,174,178,179,183,184,186,189,191,195,196,197,198,199,200,201,202,203,204,205,212,],[3,-15,-98,-16,-7,-6,-11,33,-8,-10,-3,-4,-9,3,3,42,-5,-14,-103,-17,-106,3,56,3,3,-12,-107,3,-73,3,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,3,-69,-85,-66,-97,-74,-83,-84,-93,-96,-20,3,3,3,3,-72,-26,-22,-77,-75,56,3,-51,-13,-34,-95,3,-36,3,3,3,-45,3,-27,-25,-76,-92,-52,-21,3,3,3,-39,3,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,3,3,-103,-64,-65,-35,-94,-38,-40,-47,3,3,-61,3,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'END':([1,4,23,24,25,27,45,51,55,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,96,98,99,102,104,116,126,128,129,131,134,138,143,144,146,159,173,174,175,181,182,191,206,211,213,],[-15,-16,-14,-103,-17,-106,-107,-73,95,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,127,130,-29,-77,-75,143,95,156,-28,-30,-76,-21,-39,174,-19,-78,191,-38,-18,-31,-32,-37,-33,-86,-87,]),'INT':([35,37,50,67,80,87,89,91,106,122,123,139,140,150,151,157,165,166,179,183,184,189,207,214,],[62,62,90,62,62,62,121,62,62,-45,152,62,62,-48,-46,62,62,62,-47,62,62,62,62,62,]),'REGEX':([35,37,67,80,87,91,106,122,139,140,150,151,157,165,166,179,183,184,189,207,214,],[60,60,60,60,60,60,60,-45,162,60,-48,-46,60,60,60,-47,60,60,60,60,60,]),'INDEX':([0,1,3,4,6,7,8,11,12,14,15,17,19,22,23,24,25,27,44,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,95,97,102,104,111,113,114,115,117,122,127,130,134,136,138,143,147,148,150,151,155,156,159,161,162,163,164,167,168,169,171,172,174,178,179,186,191,195,196,197,198,199,200,201,202,203,204,205,212,],[18,-15,-98,-16,-7,-6,-11,-8,-10,-3,-4,-9,18,-5,-14,-103,-17,-106,-12,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,-26,-22,-77,-75,-51,-13,-34,-95,-36,-45,-27,-25,-76,-52,-21,-39,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,-103,-64,-65,-35,-94,-38,-40,-47,-61,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'=':([10,16,24,52,57,77,131,145,182,],[-97,37,-103,91,-102,-96,157,-97,194,]),'MATCHING':([24,57,112,],[-103,-102,139,]),'FLOAT':([35,37,67,80,87,91,106,122,139,140,150,151,157,165,166,179,183,184,189,207,214,],[64,64,64,64,64,64,64,-45,64,64,-48,-46,64,64,64,-47,64,64,64,64,64,]),',':([3,24,27,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,76,77,92,93,102,104,108,115,124,134,159,210,],[-98,-103,-106,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,106,-96,-72,125,-77,-75,137,141,153,-76,-78,214,]),'AND':([24,27,45,51,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,92,102,104,134,159,161,163,164,167,168,169,171,186,187,195,196,197,198,199,200,201,202,203,212,],[-103,-106,-107,-73,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-72,-77,-75,-76,-78,184,-60,-59,-103,-64,-65,184,-61,184,184,-57,-96,-53,-63,-54,-55,-97,-56,-62,]),']':([24,27,45,51,57,58,59,60,61,62,63,64,66,67,68,70,71,72,73,74,75,76,77,90,92,102,103,104,121,123,124,132,133,134,135,152,159,180,207,209,210,215,],[-103,-106,-107,-73,-102,-81,-68,-82,-70,-79,-67,-80,-71,102,-69,-85,-66,-97,-74,-83,-84,-93,-96,122,-72,-77,134,-75,150,151,-91,158,159,-76,-92,179,-78,-90,211,213,-88,-89,]),'FOR':([0,1,3,4,6,7,8,11,12,14,15,17,19,22,23,24,25,27,29,44,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,95,97,102,104,111,113,114,115,116,117,122,127,130,134,136,138,142,143,146,147,148,150,151,155,156,159,161,162,163,164,167,168,169,171,172,174,178,179,186,191,195,196,197,198,199,200,201,202,203,204,205,212,],[20,-15,-98,-16,-7,-6,-11,-8,-10,-3,-4,-9,20,-5,-14,-103,-17,-106,47,-12,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,-26,-22,-77,-75,-51,-13,-34,-95,20,-36,-45,-27,-25,-76,-52,-21,20,-39,20,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,-103,-64,-65,-35,-94,-38,-40,-47,-61,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'[':([3,24,31,35,37,48,56,57,65,67,80,87,88,91,100,106,122,139,140,150,151,165,166,179,183,184,189,190,192,193,194,],[-98,-103,50,67,67,50,-99,-102,101,67,67,67,50,67,132,67,-45,67,67,-48,-46,67,67,-47,67,67,67,67,50,50,207,]),'AS':([24,42,43,44,57,],[-103,81,82,83,-102,]),'TYPEDEF':([0,1,3,4,6,7,8,11,12,14,15,17,19,22,23,24,25,27,44,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,95,97,102,104,111,113,114,115,117,122,127,130,134,136,138,143,147,148,150,151,155,156,159,161,162,163,164,167,168,169,171,172,174,178,179,186,191,195,196,197,198,199,200,201,202,203,204,205,212,],[21,-15,-98,-16,-7,-6,-11,-8,-10,-3,-4,-9,21,-5,-14,-103,-17,-106,-12,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,-26,-22,-77,-75,-51,-13,-34,-95,-36,-45,-27,-25,-76,-52,-21,-39,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,-103,-64,-65,-35,-94,-38,-40,-47,-61,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'CMP_OP':([27,45,51,57,58,59,60,62,64,66,68,70,71,72,73,92,102,104,134,159,162,163,164,167,168,169,170,197,],[-106,-107,-73,-102,-81,-68,-82,-79,-80,-71,-69,-85,-66,-97,-74,-72,-77,-75,-76,-78,-82,-70,-67,-103,-83,-84,189,-96,]),':':([3,24,27,33,45,50,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,86,90,92,93,94,102,104,109,134,154,159,],[-98,-103,-106,55,-107,89,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,116,123,-72,-101,126,-77,-75,116,-76,-100,-78,]),'STRING':([35,37,67,80,87,91,106,122,139,140,150,151,157,165,166,179,183,184,189,207,214,],[70,70,70,70,70,70,70,-45,70,70,-48,-46,70,70,70,-47,70,70,70,70,70,]),'WHEN':([24,57,114,115,172,],[-103,-102,140,-95,-94,]),'IMPLEMENT':([0,1,3,4,6,7,8,11,12,14,15,17,19,22,23,24,25,27,44,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,95,97,102,104,111,113,114,115,117,122,127,130,134,136,138,143,147,148,150,151,155,156,159,161,162,163,164,167,168,169,171,172,174,178,179,186,191,195,196,197,198,199,200,201,202,203,204,205,212,],[28,-15,-98,-16,-7,-6,-11,-8,-10,-3,-4,-9,28,-5,-14,-103,-17,-106,-12,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,-26,-22,-77,-75,-51,-13,-34,-95,-36,-45,-27,-25,-76,-52,-21,-39,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,-103,-64,-65,-35,-94,-38,-40,-47,-61,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'ID':([0,1,2,3,4,5,6,7,8,11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,30,32,34,35,36,37,44,45,47,51,54,55,56,57,58,59,60,61,62,63,64,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,95,96,97,98,99,100,101,102,104,105,106,111,113,114,115,116,117,118,119,120,122,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,151,153,155,156,158,159,161,162,163,164,165,166,167,168,169,171,172,174,176,177,178,179,181,182,183,184,185,186,189,190,191,195,196,197,198,199,200,201,202,203,204,205,206,211,212,213,],[24,-15,29,-98,-16,31,-7,-6,-11,-8,-10,-3,-4,-9,24,24,41,43,-5,-14,-103,-17,24,-106,24,48,52,57,24,77,24,-12,-107,24,-73,24,24,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,24,-69,-85,-66,-97,-74,-83,-84,-93,-96,-20,108,24,24,24,113,57,24,24,24,-72,-26,24,-22,24,-29,131,52,-77,-75,57,24,-51,-13,-34,-95,24,-36,24,24,24,-45,24,24,-27,24,-28,-25,-30,-76,-92,-52,108,-21,167,167,24,24,-39,24,-42,-44,178,-48,-46,52,-23,-24,182,-78,-50,-49,-60,-59,167,167,-103,-64,-65,-35,-94,-38,192,193,-40,-47,-31,-32,167,167,197,-61,24,24,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-33,-86,-62,-87,]),'MLS':([0,1,3,4,6,7,8,11,12,14,15,17,19,22,23,24,25,27,35,37,44,45,51,55,56,57,58,59,60,61,62,63,64,66,67,68,70,71,72,73,74,75,77,78,80,87,91,92,95,97,102,104,106,111,113,114,115,116,117,122,126,127,130,134,136,138,139,140,143,147,148,150,151,155,156,157,159,161,162,163,164,165,166,167,168,169,171,172,174,178,179,183,184,186,189,191,195,196,197,198,199,200,201,202,203,204,205,207,212,214,],[27,-15,-98,-16,-7,-6,-11,-8,-10,-3,-4,-9,27,-5,-14,-103,-17,27,27,27,-12,-107,-73,27,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,27,-69,-85,-66,-97,-74,-83,-84,-96,-20,27,27,27,-72,-26,-22,-77,-75,27,-51,-13,-34,-95,27,-36,-45,27,-27,-25,-76,-52,-21,27,27,-39,-42,-44,-48,-46,-23,-24,27,-78,-50,-49,-60,-59,27,27,-103,-64,-65,-35,-94,-38,-40,-47,27,27,-61,27,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,27,-62,27,]),'ENTITY':([0,1,3,4,6,7,8,11,12,14,15,17,19,22,23,24,25,27,44,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,95,97,102,104,111,113,114,115,117,122,127,130,134,136,138,143,147,148,150,151,155,156,159,161,162,163,164,167,168,169,171,172,174,178,179,186,191,195,196,197,198,199,200,201,202,203,204,205,212,],[9,-15,-98,-16,-7,-6,-11,-8,-10,-3,-4,-9,9,-5,-14,-103,-17,-106,-12,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,-26,-22,-77,-75,-51,-13,-34,-95,-36,-45,-27,-25,-76,-52,-21,-39,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,-103,-64,-65,-35,-94,-38,-40,-47,-61,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'.':([3,5,10,16,24,56,57,61,72,77,145,147,148,163,167,197,202,203,],[-98,30,-97,36,-103,-99,-102,36,-97,-96,-97,176,177,185,-103,-96,-97,36,]),'FALSE':([35,37,67,80,87,91,106,122,139,140,150,151,157,165,166,179,183,184,189,207,214,],[75,75,75,75,75,75,75,-45,169,169,-48,-46,75,169,169,-47,169,169,75,75,75,]),')':([24,27,32,35,45,51,53,57,58,59,60,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,92,102,104,107,108,124,134,135,159,160,163,164,167,168,169,180,186,187,195,196,197,198,199,200,201,202,203,212,],[-103,-106,51,73,-107,-73,92,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,104,-85,-66,-97,-74,-83,-84,-93,-96,-72,-77,-75,136,-105,-91,-76,-92,-78,-104,-60,-59,-103,-64,-65,-90,-61,198,-58,-57,-96,-53,-63,-54,-55,-97,-56,-62,]),'NOT':([139,140,165,166,183,184,],[165,165,165,165,165,165,]),'IMPORT':([0,1,3,4,6,7,8,11,12,14,15,17,19,22,23,24,25,27,44,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,95,97,102,104,111,113,114,115,117,122,127,130,134,136,138,143,147,148,150,151,155,156,159,161,162,163,164,167,168,169,171,172,174,178,179,186,191,195,196,197,198,199,200,201,202,203,204,205,212,],[26,-15,-98,-16,-7,-6,-11,-8,-10,-3,-4,-9,26,-5,-14,-103,-17,-106,-12,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,-26,-22,-77,-75,-51,-13,-34,-95,-36,-45,-27,-25,-76,-52,-21,-39,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,-103,-64,-65,-35,-94,-38,-40,-47,-61,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'OR':([24,27,45,51,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,92,102,104,134,159,161,163,164,167,168,169,171,186,187,195,196,197,198,199,200,201,202,203,212,],[-103,-106,-107,-73,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-72,-77,-75,-76,-78,183,-60,-59,-103,-64,-65,183,-61,183,-58,-57,-96,-53,-63,-54,-55,-97,-56,-62,]),'SEP':([10,24,39,44,57,72,100,112,115,145,167,202,],[34,-103,34,84,-102,105,84,84,84,34,-103,84,]),'$end':([1,3,4,6,7,8,11,12,13,14,15,17,19,22,23,24,25,27,40,44,45,51,56,57,58,59,60,61,62,63,64,66,68,70,71,72,73,74,75,77,78,92,95,97,102,104,111,113,114,115,117,122,127,130,134,136,138,143,147,148,150,151,155,156,159,161,162,163,164,167,168,169,171,172,174,178,179,186,191,195,196,197,198,199,200,201,202,203,204,205,212,],[-15,-98,-16,-7,-6,-11,-8,-10,0,-3,-4,-9,-2,-5,-14,-103,-17,-106,-1,-12,-107,-73,-99,-102,-81,-68,-82,-70,-79,-67,-80,-71,-69,-85,-66,-97,-74,-83,-84,-96,-20,-72,-26,-22,-77,-75,-51,-13,-34,-95,-36,-45,-27,-25,-76,-52,-21,-39,-42,-44,-48,-46,-23,-24,-78,-50,-49,-60,-59,-103,-64,-65,-35,-94,-38,-40,-47,-61,-37,-58,-57,-96,-53,-63,-54,-55,-97,-56,-41,-43,-62,]),'(':([3,5,10,24,38,56,57,65,72,110,139,140,145,165,166,167,183,184,],[-98,32,35,-103,79,-99,-102,32,35,32,166,166,35,166,166,-103,166,166,]),'IN':([27,41,45,51,57,58,59,60,62,64,66,68,70,71,72,73,92,102,104,134,159,162,163,164,167,168,169,170,197,],[-106,80,-107,-73,-102,-81,-68,-82,-79,-80,-71,-69,-85,-66,-97,-74,-72,-77,-75,-76,-78,-82,-70,-67,-103,-83,-84,190,-96,]),'DEFINED':([188,208,],[199,212,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'condition':([139,140,165,166,183,184,],[161,171,186,187,195,196,]),'constants':([207,214,],[209,215,]),'mls':([0,19,27,35,37,55,67,80,87,91,106,116,126,139,140,157,165,166,183,184,189,207,214,],[14,14,45,58,58,96,58,58,58,58,58,142,96,58,58,58,58,58,58,58,58,58,58,]),'constructor':([0,19,35,37,67,80,81,87,91,106,116,139,140,142,146,165,166,183,184,189,],[1,1,59,59,59,59,111,59,59,59,1,59,59,1,1,59,59,59,59,59,]),'for':([0,19,116,142,146,],[25,25,25,25,25,]),'entity_def':([0,19,],[15,15,]),'entity_body':([55,96,126,],[98,128,98,]),'var_ref':([0,19,35,37,67,80,87,91,106,116,139,140,142,146,165,166,183,184,189,190,],[16,16,61,61,61,61,61,61,61,16,163,163,16,16,163,163,163,163,61,203,]),'param_list':([32,101,153,],[53,133,180,]),'typedef':([0,19,],[17,17,]),'function_call':([0,19,35,37,67,80,87,91,106,116,139,140,142,146,165,166,183,184,189,],[4,4,63,63,63,63,63,63,63,4,164,164,4,4,164,164,164,164,63,]),'class_ref':([0,18,19,28,35,37,47,54,67,80,81,87,91,106,116,118,119,120,125,139,140,142,146,165,166,183,184,189,],[5,38,5,46,65,65,86,93,65,65,110,65,65,65,110,147,148,149,93,65,65,110,110,65,65,65,65,65,]),'index_lookup':([35,37,67,80,87,91,106,139,140,165,166,183,184,189,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'constant_list':([194,],[206,]),'stmt_list':([116,142,146,],[144,173,175,]),'top_stmt':([0,19,],[19,19,]),'attr':([55,96,98,126,128,],[99,99,129,99,129,]),'implement_def':([0,19,],[22,22,]),'list_def':([35,37,67,80,87,91,106,139,140,165,166,183,184,189,190,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,201,]),'operand_list':([35,67,87,106,],[69,103,119,135,]),'implementation_def':([0,19,],[7,7,]),'id_list':([79,137,],[107,160,]),'constant':([35,37,67,80,87,91,106,139,140,157,165,166,183,184,189,207,214,],[71,71,71,71,71,71,71,71,71,181,71,71,71,71,71,210,210,]),'import':([0,19,],[8,8,]),'implementation':([86,109,],[117,138,]),'relation':([0,19,],[6,6,]),'ns_ref':([0,18,19,26,28,35,37,47,54,55,67,80,81,82,85,87,91,96,98,106,116,118,119,120,125,126,128,139,140,141,142,146,165,166,183,184,189,190,],[10,39,10,44,39,72,72,39,39,100,72,72,39,112,115,72,72,100,100,72,145,39,39,39,39,100,100,72,72,115,145,145,72,72,72,72,72,202,]),'ns_list':([85,141,],[114,172,]),'statement':([0,19,116,142,146,],[11,11,146,146,146,]),'multi':([31,48,88,192,193,],[49,87,120,204,205,]),'index':([0,19,],[12,12,]),'entity_body_outer':([55,126,],[97,155,]),'class_ref_list':([54,125,],[94,154,]),'main':([0,19,],[13,40,]),'assign':([0,19,116,142,146,],[23,23,23,23,23,]),'operand':([35,37,67,80,87,91,106,139,140,165,166,183,184,189,],[76,78,76,109,76,124,76,170,170,170,170,170,170,200,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',66),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',73),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',78),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',79),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',80),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',81),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',82),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',83),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',84),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',85),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',86),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',95),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',101),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',110),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',111),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',112),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',113),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',118),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',125),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',130),
  ('for -> FOR ID IN operand implementation','for',5,'p_for','plyInmantaParser.py',136),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',145),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',151),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',157),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',162),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',167),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',172),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',177),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',183),
  ('attr -> ns_ref ID','attr',2,'p_attr','plyInmantaParser.py',188),
  ('attr -> ns_ref ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',194),
  ('attr -> ns_ref [ ] ID','attr',4,'p_attr_list','plyInmantaParser.py',200),
  ('attr -> ns_ref [ ] ID = constant_list','attr',6,'p_attr_list_cte','plyInmantaParser.py',206),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',214),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',220),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',228),
  ('implementation -> : mls stmt_list END','implementation',4,'p_implementation','plyInmantaParser.py',240),
  ('implementation -> : stmt_list END','implementation',3,'p_implementation_1','plyInmantaParser.py',245),
  ('implementation -> : END','implementation',2,'p_implementation_2','plyInmantaParser.py',250),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',257),
  ('relation -> class_ref . ID multi REL class_ref . ID multi','relation',9,'p_relation_new','plyInmantaParser.py',266),
  ('relation -> class_ref . ID multi REL class_ref','relation',6,'p_relation_new_unidir','plyInmantaParser.py',272),
  ('relation -> class_ref . ID multi operand_list class_ref . ID multi','relation',9,'p_relation_new_annotated','plyInmantaParser.py',278),
  ('relation -> class_ref . ID multi operand_list class_ref','relation',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',284),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',290),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',295),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',300),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',305),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef',6,'p_typedef_1','plyInmantaParser.py',312),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING condition','typedef',6,'p_typedef_1','plyInmantaParser.py',313),
  ('typedef -> TYPEDEF CID AS constructor','typedef',4,'p_typedef_cls','plyInmantaParser.py',319),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',326),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',335),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',340),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',341),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',342),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',343),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',344),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',351),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',352),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',357),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',363),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',369),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',375),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',376),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',386),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',387),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',388),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',389),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',390),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',391),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',396),
  ('constructor -> class_ref ( )','constructor',3,'p_constructor_empty','plyInmantaParser.py',401),
  ('function_call -> ns_ref ( )','function_call',3,'p_function_call_empty','plyInmantaParser.py',406),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',412),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',418),
  ('list_def -> [ ]','list_def',2,'p_list_def_empty','plyInmantaParser.py',424),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',430),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',438),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',439),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',440),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',447),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',454),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',461),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',471),
  ('constant_list -> [ ]','constant_list',2,'p_constant_list_empty','plyInmantaParser.py',506),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',512),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',518),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',523),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',529),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',535),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',540),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',546),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',551),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',557),
  ('var_ref -> var_ref . ID','var_ref',3,'p_var_ref','plyInmantaParser.py',562),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',568),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',574),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',579),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',584),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',590),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',595),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',601),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',607),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',613),
  ('mls -> MLS','mls',1,'p_mls_term','plyInmantaParser.py',618),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',624),
]
