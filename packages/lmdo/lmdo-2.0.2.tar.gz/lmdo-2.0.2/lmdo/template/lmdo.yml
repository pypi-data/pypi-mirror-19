#********************************
# @mandatory
# @description: microservice name
#********************************
Service: superman

#***********************************
# @mandatory
# @description: microservice creator
#***********************************
User: default

#****************************************************************
# @mandatory
# @description: AWS credential profile name, default to 'default'
#****************************************************************
Profile: default
# Or
# AWSKey: aws_access_key_id
# AWSSecret: aws_secret_access_key

#************************************
# @mandatory
# @description: stage of your service
#************************************
Stage: dev

#****************************************************************
# @optional
# @description: cloudformation files to upload to. If not set
# will load from local but won't work for nested stack templates
#****************************************************************
#CloudformationBucket: cloudformation.bucket.name

#*****************************************************
# @optional
# @description: static asset to deploy to given bucket
#*****************************************************
# AssetS3Bucket: static.bucket.name
# AssetDirectory: build

#***********************************************************************
# @mandatory if having APIGateway
# @description: let lmdo know what the api name will be if using swagger
#***********************************************************************
# ApiGatewayName: api-title

#*****************************************
# @optional
# @description: lambda functions to deploy
#*****************************************
#Lambda:
    #*** Standard lambda function
#    - S3Bucket: lambda.bucket.name        # mandatory, the bucket to load your package to
#      Type: default                       # Optional, other types is django
#      FunctionName: superman              # mandatory, the actual function name in AWS will have the format of <user>-<stage>-<service-name>-<FunctionName>
#      Handler: handler.fly                # mandatory, define the handler function
#      MemorySize: 128                     # optional, default to 128
#      RoleArn: rolearn                    # Either provide a role arn or assume role policy doc, the RolePolicyDocument takes preccedent
#      RolePolicyDocument: path/to/policy  # Assume role Policy
#      Runtime: python2.7                  # optional default to 'python2.7'
#      Timeout: 180                        # optional default to 180
#      VpcConfig:                          # optional, Lambda VPC configuration
#          SecurityGroupIds:
#              - string
#              - string
#          SubnetIds:
#              - string
#              - string
#      EnvironmentVariables:              # optional, runtime environment variable
#          MYSQL_HOST: localhost
#          MYSQL_PASSWORD: secret
#          MYSQL_USERNAME: admin
#          MYSQL_DATABASE: lmdo

    #*** Django bridged lambda function
#    - S3Bucket: lambda.bucket.name        # mandatory
#      Type: django                        # Other types
#      DisableApiGateway: False            # Optional, if set to True, the apigateway for Django app won't be created
#      ApiBasePath: /path                  # Mandatory if apigateway to be created. Base resource path for django app
#      FunctionName: superman              # mandatory
#      MemorySize: 128                     # optional, default to 128
#      RoleArn: rolearn                    # Either provide a role arn or assume role policy doc, the RolePolicyDocument takes preccedent
#      RolePolicyDocument: path/to/policy  # Assume role Policy
#      Runtime: python2.7                  # optional default to 'python2.7'
#      Timeout: 180                        # optional default to 180
#      VpcConfig:                          # optional
#          SecurityGroupIds:
#              - string
#              - string
#          SubnetIds:
#              - string
#      EnvironmentVariables:                       # mandatory
#          DJANGO_SETTINGS_MODULE: mysite.settings # mandatory     

 
