#+TITLE: TODOs for matlab_wrapper
#+AUTHOR: Marek Rudnicki
#+CATEGORY: matlab_wrap

* MAYBE IPython notebook support
  CLOSED: [2016-08-21 Sun 16:39]
* DONE Documentation

** DONE Apply guidelines from writethedocs.org

   http://docs.writethedocs.org/

** DONE Sphinx

** DONE Python hosted

** DONE CONTRIBUTING

   - small code snippet illustrating an issue
   - python setup.py develop --user
   - py.test


** DONE FAQ

   - matlab_root (modify PATH, ln -s)
   - /bin/csh

* CANCELED Spread the word

** Show HN

** reddit

   - python
   - matlab

** comp.soft-sys.matlab

https://groups.google.com/forum/#!forum/comp.soft-sys.matlab

* TODO Python 3 support

** Review PR #7 from David

https://github.com/mrkrd/matlab_wrapper/pull/7


* TODO Auto-detect the number of output arguments (nout)

  - check get_nout() from oct2py:

    https://github.com/blink1073/oct2py/blob/master/oct2py/utils.py

  - check mlabwrap


* CANCELED Auto-convert int to float in matlab.put()
  CLOSED: [2016-07-26 Tue 12:46]

Canceled: “Explicit is better than implicit”

The problem is that in MATLAB this conversion is implicit and writing
e.g.

matlab.put('a', 1)  # <- here 'a' will be int

may lead to unexpected behaviors.


Could be activated via by a parameters:

matlab = matlab_wrapper.MatlabSession(auto_int_conversion=True)

* DONE Make sure that the MATLAB process is gone in __del__()      :canceled:

  - add `matlab._pid' (use features('getpid') in MATLAB, might not
    exist in older versions)
  - check the standard library for the best kill/terminate functions



MATLAB is unresponsive during execution of svd().  I did not find a
way to reasonably kill the process (in destructor), because it hangs
in the engClose().



#+BEGIN_SRC matlab
m.workspace.svd(np.zeros((10000,10000)))
#+END_SRC


#+BEGIN_SRC python
### Get MATLAB PID
try:
    pid = self.workspace.feature('getpid')
    self._pid = int(pid)
except RuntimeError:
    self._pid = None
#+END_SRC

* DONE Check for /bin/csh on Linux

/bin/csh is required by libeng and the lack of it could be detected by
matlab_wrapper.

<2014-09-29 Mon>

* DONE Enable 32-bit versions

ralili mentioned that it seem to be working on Windows 7, where:

lib_dir = join(matlab_root, "bin", "win32")

* TODO Proper handling of char arrays (strings)

Branch: char_arrays

The equivalent type of MATLAB's strings (char arrays) should be
ndarray with dtype=S.

At the moment MATLAB's multidimensional char array conversion to
Python is not correct.


* DONE Error when getting empty Matlab object                        :urgent:

Issue #6 by Jeremy Moreau

* TODO Explicit warning when using Python 3

* DONE Setup a mailing list

matlab_wrapper@googlegroups.com

* CANCELED Investigate `undefined symbol' error
  CLOSED: [2016-07-26 Tue 12:47]

Canceled: not able to reproduce.

Might have something to do with matplotlib.

Eventually put in FAQ.


    790     """
    791     def __init__(self, name, **kwargs):
--> 792         self._lib = ctypes.CDLL(name, **kwargs)
    793
    794         if 'libeng' in name:

/usr/lib/python2.7/ctypes/__init__.pyc in __init__(self, name, mode, handle, use_errno, use_last_error)
    363
    364         if handle is None:
--> 365             self._handle = _dlopen(self._name, mode)
    366         else:
    367             self._handle = handle

OSError: /nfs/system/opt/MATLAB/R2014b/bin/glnxa64/libicuio.so.52: undefined symbol: _ZN6icu_5213UnicodeString9doReplaceEiiPKDsii

* TODO Investigate indexing in Numpy and MATLAB

https://groups.google.com/forum/#!topic/matlab_wrapper/wAp6veM6xgY


Numpy indexing comes form C.

In carr[i][j][k], k iterates the most inner row arrays.


arr.ravel('K') flattens array in the order the elements occur in the
memory.


matlab_wrapper has to take into account inverse indexing:

 [i][j][k][l] <=> [l][k][j][i]

as well as row vs column of the inner most arrays:

 [i][j][k][l] <=> [k][l][j][i]

* TODO Test string parameters (path) to a function (#15)

ftp://ftp.scp.byu.edu/pub/software/matlab/loadsir.m
ftp://ftp.scp.byu.edu/data/qscat/1999/sir/queh/SAm/201/a/queh-a-SAm99-201-204.sir.gz
* TODO Create DOI for referencing
* TODO Conversion of a struct (#18)

https://github.com/mrkrd/matlab_wrapper/issues/18
* DONE Dimension of cellarrays (#19)
  CLOSED: [2017-01-24 Tue 14:03]

https://github.com/mrkrd/matlab_wrapper/issues/19

fixed by PR #20
