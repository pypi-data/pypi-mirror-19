{
  "AWS Billing": {
    "Actions": [
      "ModifyAccount",
      "ModifyBilling",
      "ModifyPaymentMethods",
      "ViewAccount",
      "ViewBilling",
      "ViewBudget",
      "ViewPaymentMethods",
      "ViewUsage"
    ],
    "StringPrefix": "aws-portal"
  },
  "AWS Certificate Manager": {
    "ARNFormat": "arn:aws:acm:<region>:<account_ID>:<arn_type>/<resource_id>",
    "ARNRegex": "arn:[w+=/,.@-]+:[w+=/,.@-]+:[w+=/,.@-]*:[0-9]+:[w+=,.@-]+(/[w+=/,.@-]+)*",
    "Actions": [
      "DeleteCertificate",
      "DescribeCertificate",
      "GetCertificate",
      "ListCertificates",
      "RequestCertificate",
      "ResendValidationEmail"
    ],
    "HasResource": true,
    "StringPrefix": "acm"
  },
  "AWS CloudFormation": {
    "ARNFormat": "arn:aws:cloudformation:<region>:<account>:stack/<stackName>/<stackId>",
    "ARNRegex": "^arn:aws:cloudformation:.+:[0-9]+:stack/.+/.+",
    "Actions": [
      "CancelUpdateStack",
      "CreateStack",
      "CreateUploadBucket",
      "DeleteStack",
      "DescribeAccountLimits",
      "DescribeStackEvents",
      "DescribeStackResource",
      "DescribeStackResources",
      "DescribeStacks",
      "EstimateTemplateCost",
      "GetStackPolicy",
      "GetTemplate",
      "GetTemplateSummary",
      "ListStackResources",
      "ListStacks",
      "PreviewStackUpdate",
      "SetStackPolicy",
      "SignalResource",
      "UpdateStack",
      "ValidateTemplate"
    ],
    "HasResource": true,
    "StringPrefix": "cloudformation",
    "conditionKeys": [
      "cloudformation:TemplateUrl",
      "cloudformation:StackPolicyUrl",
      "cloudformation:ResourceTypes"
    ]
  },
  "AWS CloudHSM": {
    "ARNFormat": "arn:aws:cloudhsm:<region>:<account>:resourceName",
    "ARNRegex": "^arn:aws:cloudhsm:.+:.+:.+",
    "Actions": [
      "CreateLunaClient",
      "CreateHapg",
      "CreateHsm",
      "DeleteLunaClient",
      "DeleteHapg",
      "DeleteHsm",
      "DescribeLunaClient",
      "DescribeHapg",
      "DescribeHsm",
      "GetConfig",
      "ListAvailableZones",
      "ListLunaClients",
      "ListHapgs",
      "ListHsms",
      "ModifyLunaClient",
      "ModifyHapg",
      "ModifyHsm"
    ],
    "StringPrefix": "cloudhsm"
  },
  "AWS CloudTrail": {
    "ARNFormat": "arn:aws:cloudtrail:<region>:<account>:<resource>",
    "ARNRegex": "^arn:aws:cloudtrail:::.+",
    "Actions": [
      "CreateTrail",
      "DeleteTrail",
      "DescribeTrails",
      "GetTrailStatus",
      "LookupEvents",
      "StartLogging",
      "StopLogging",
      "UpdateTrail"
    ],
    "StringPrefix": "cloudtrail"
  },
  "AWS CodeCommit": {
    "ARNFormat": "arn:aws:codecommit:<region>:<account_ID>:<repository_name>",
    "ARNRegex": "^arn:aws:codecommit:.+",
    "Actions": [
      "BatchGetRepositories",
      "CreateBranch",
      "CreateRepository",
      "DeleteRepository",
      "GetBlob",
      "GetBranch",
      "GetObjectIdentifier",
      "GetRepository",
      "GetTree",
      "GitPull",
      "GitPush",
      "ListBranches",
      "ListRepositories",
      "UpdateDefaultBranch",
      "UpdateRepositoryDescription",
      "UpdateRepositoryName"
    ],
    "StringPrefix": "codecommit"
  },
  "AWS CodeDeploy": {
    "ARNFormat": "arn:aws:codedeploy:region:account:resource-type:resource-specifier",
    "ARNRegex": "^arn:aws:codedeploy:.+",
    "Actions": [
      "AddTagsToOnPremisesInstances",
      "BatchGetApplications",
      "BatchGetDeployments",
      "BatchGetOnPremisesInstances",
      "CreateApplication",
      "CreateDeployment",
      "CreateDeploymentConfig",
      "CreateDeploymentGroup",
      "DeleteApplication",
      "DeleteDeploymentConfig",
      "DeleteDeploymentGroup",
      "DeregisterOnPremisesInstance",
      "GetApplication",
      "GetApplicationRevision",
      "GetDeployment",
      "GetDeploymentConfig",
      "GetDeploymentGroup",
      "GetDeploymentInstance",
      "GetOnPremisesInstance",
      "ListApplicationRevisions",
      "ListApplications",
      "ListDeploymentConfigs",
      "ListDeploymentGroups",
      "ListDeploymentInstances",
      "ListDeployments",
      "ListOnPremisesInstances",
      "RegisterApplicationRevision",
      "RegisterOnPremisesInstance",
      "RemoveTagsFromOnPremisesInstances",
      "StopDeployment",
      "UpdateApplication",
      "UpdateDeploymentGroup"
    ],
    "StringPrefix": "codedeploy"
  },
  "AWS CodePipeline": {
    "ARNFormat": "arn:aws:codepipeline:<region>:<account_ID>:<path_to_pipeline_resource>",
    "ARNRegex": "arn:aws:codepipeline:.+",
    "Actions": [
      "AcknowledgeJob",
      "AcknowledgeThirdPartyJob",
      "CreateCustomActionType",
      "CreatePipeline",
      "DeleteCustomActionType",
      "DeletePipeline",
      "DisableStageTransition",
      "EnableStageTransition",
      "GetPipeline",
      "GetPipelineState",
      "GetThirdPartyJobDetails",
      "ListActionTypes",
      "ListPipelines",
      "PollForJobs",
      "PollForThirdPartyJobs",
      "PutActionRevision",
      "PutJobFailureResult",
      "PutJobSuccessResult",
      "PutThirdPartyJobFailureResult",
      "PutThirdPartyJobSuccessResult",
      "StartPipelineExecution",
      "UpdatePipeline"
    ],
    "HasResource": true,
    "StringPrefix": "codepipeline"
  },
  "AWS Config": {
    "Actions": [
      "DeleteConfigRule",
      "DeleteDeliveryChannel",
      "DeliverConfigSnapshot",
      "DescribeComplianceByConfigRule",
      "DescribeComplianceByResource",
      "DescribeConfigRuleEvaluationStatus",
      "DescribeConfigRules",
      "DescribeConfigurationRecorderStatus",
      "DescribeConfigurationRecorders",
      "DescribeDeliveryChannelStatus",
      "DescribeDeliveryChannels",
      "GetComplianceDetailsByConfigRule",
      "GetComplianceDetailsByResource",
      "GetComplianceSummaryByConfigRule",
      "GetComplianceSummaryByResourceType",
      "GetResourceConfigHistory",
      "GetResources",
      "GetTagKeys",
      "ListDiscoveredResources",
      "PutConfigRule",
      "PutConfigurationRecorder",
      "PutDeliveryChannel",
      "PutEvaluations",
      "StartConfigurationRecorder",
      "StopConfigurationRecorder"
    ],
    "StringPrefix": "config"
  },
  "AWS Database Migration Service": {
    "ARNFormat": "arn:aws:dms:<region>:<account>:<resource>",
    "ARNRegex": "arn:aws:dms:.+",
    "Actions": [
      "CreateEndpoint",
      "CreateReplicationInstance",
      "CreateReplicationSubnetGroup",
      "CreateReplicationTask",
      "DeleteEndpoint",
      "DeleteReplicationInstance",
      "DeleteReplicationSubnetGroup",
      "DeleteReplicationTask",
      "DescribeAccountAttributes",
      "DescribeConnections",
      "DescribeEndpointTypes",
      "DescribeEndpoints",
      "DescribeOrderableReplicationInstances",
      "DescribeRefreshSchemasStatus",
      "DescribeReplicationInstances",
      "DescribeReplicationSubnetGroups",
      "DescribeReplicationTasks",
      "DescribeSchemas",
      "DescribeTableStatistics",
      "ModifyEndpoint",
      "ModifyReplicationInstance",
      "ModifyReplicationSubnetGroup",
      "RefreshSchemas",
      "StartReplicationTask",
      "StopReplicationTask",
      "TestConnection"
    ],
    "HasResource": false,
    "StringPrefix": "dms"
  },
  "AWS Device Farm": {
    "Actions": [
      "CreateDevicePool",
      "CreateProject",
      "CreateUpload",
      "GetDevice",
      "GetDevicePool",
      "GetDevicePoolCompatibility",
      "GetJob",
      "GetProject",
      "GetRun",
      "GetSuite",
      "GetTest",
      "GetUpload",
      "ListArtifacts",
      "ListDevicePools",
      "ListDevices",
      "ListJobs",
      "ListProjects",
      "ListRuns",
      "ListSamples",
      "ListSuites",
      "ListTests",
      "ListUniqueProblems",
      "ListUploads",
      "ScheduleRun"
    ],
    "HasResource": true,
    "StringPrefix": "devicefarm"
  },
  "AWS Direct Connect": {
    "Actions": [
      "AllocateConnectionOnInterconnect",
      "AllocatePrivateVirtualInterface",
      "AllocatePublicVirtualInterface",
      "ConfirmConnection",
      "ConfirmPrivateVirtualInterface",
      "ConfirmPublicVirtualInterface",
      "CreateConnection",
      "CreateInterconnect",
      "CreatePrivateVirtualInterface",
      "CreatePublicVirtualInterface",
      "DeleteConnection",
      "DeleteInterconnect",
      "DeleteVirtualInterface",
      "DescribeConnections",
      "DescribeConnectionsOnInterconnect",
      "DescribeInterconnects",
      "DescribeLocations",
      "DescribeVirtualGateways",
      "DescribeVirtualInterfaces"
    ],
    "StringPrefix": "directconnect"
  },
  "AWS Directory Service": {
    "ARNFormat": "arn:aws:ds:<region>:<account_ID>:<directory-id>",
    "ARNRegex": "^arn:aws:ds:.+:.+:.+",
    "Actions": [
      "CreateComputer",
      "CreateDirectory",
      "CreateSnapshot",
      "CheckAlias",
      "ConnectDirectory",
      "DeleteDirectory",
      "DeleteSnapshot",
      "DescribeDirectories",
      "DescribeSnapshots",
      "GetDirectoryLimits",
      "GetSnapshotLimits",
      "ListAuthorizedApplications",
      "RepairDirectory",
      "RestoreFromSnapshot",
      "UpdateDirectory"
    ],
    "HasResource": true,
    "StringPrefix": "ds"
  },
  "AWS Elastic Beanstalk": {
    "ARNFormat": "arn:aws:elasticbeanstalk:<region>:<account_ID>:<resource_type>/<path_to_resource>",
    "ARNRegex": "^arn:aws:elasticbeanstalk:.+:.*:.+/.+",
    "Actions": [
      "CheckDNSAvailability",
      "CreateApplication",
      "CreateApplicationVersion",
      "CreateConfigurationTemplate",
      "CreateEnvironment",
      "CreateStorageLocation",
      "DeleteApplication",
      "DeleteApplicationVersion",
      "DeleteConfigurationTemplate",
      "DeleteEnvironmentConfiguration",
      "DescribeApplicationVersions",
      "DescribeApplications",
      "DescribeConfigurationOptions",
      "DescribeConfigurationSettings",
      "DescribeEnvironmentHealth",
      "DescribeEnvironmentResources",
      "DescribeEnvironments",
      "DescribeEvents",
      "DescribeInstancesHealth",
      "ListAvailableSolutionStacks",
      "RebuildEnvironment",
      "RequestEnvironmentInfo",
      "RestartAppServer",
      "RetrieveEnvironmentInfo",
      "SwapEnvironmentCNAMEs",
      "TerminateEnvironment",
      "UpdateApplication",
      "UpdateApplicationVersion",
      "UpdateConfigurationTemplate",
      "UpdateEnvironment",
      "ValidateConfigurationSettings"
    ],
    "HasResource": true,
    "StringPrefix": "elasticbeanstalk",
    "conditionKeys": [
      "elasticbeanstalk:InApplication",
      "elasticbeanstalk:FromApplication",
      "elasticbeanstalk:FromSolutionStack",
      "elasticbeanstalk:FromApplicationVersion",
      "elasticbeanstalk:FromConfigurationTemplate",
      "elasticbeanstalk:FromEnvironment"
    ]
  },
  "AWS Identity and Access Management": {
    "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>",
    "ARNRegex": "^arn:aws:iam::.+",
    "Actions": [
      "AddRoleToInstanceProfile",
      "AddUserToGroup",
      "AddClientIDToOpenIDConnectProvider",
      "AttachGroupPolicy",
      "AttachRolePolicy",
      "AttachUserPolicy",
      "ChangePassword",
      "CreateAccessKey",
      "CreateAccountAlias",
      "CreateGroup",
      "CreateInstanceProfile",
      "CreateLoginProfile",
      "CreateOpenIDConnectProvider",
      "CreatePolicy",
      "CreatePolicyVersion",
      "CreateRole",
      "CreateSAMLProvider",
      "CreateUser",
      "CreateVirtualMFADevice",
      "DeactivateMFADevice",
      "DeleteAccessKey",
      "DeleteAccountAlias",
      "DeleteAccountPasswordPolicy",
      "DeleteGroup",
      "DeleteGroupPolicy",
      "DeleteInstanceProfile",
      "DeleteLoginProfile",
      "DeleteOpenIDConnectProvider",
      "DeletePolicy",
      "DeletePolicyVersion",
      "DeleteRole",
      "DeleteRolePolicy",
      "DeleteSAMLProvider",
      "DeleteSSHPublicKey",
      "DeleteServerCertificate",
      "DeleteSigningCertificate",
      "DeleteUser",
      "DeleteUserPolicy",
      "DeleteVirtualMFADevice",
      "DetachGroupPolicy",
      "DetachRolePolicy",
      "DetachUserPolicy",
      "EnableMFADevice",
      "GenerateCredentialReport",
      "GenerateServiceLastAccessedDetails",
      "GetAccessKeyLastUsed",
      "GetAccountAuthorizationDetails",
      "GetAccountPasswordPolicy",
      "GetAccountSummary",
      "GetContextKeysForCustomPolicy",
      "GetContextKeysForPrincipalPolicy",
      "GetCredentialReport",
      "GetGroup",
      "GetGroupPolicy",
      "GetInstanceProfile",
      "GetLoginProfile",
      "GetOpenIDConnectProvider",
      "GetPolicy",
      "GetPolicyVersion",
      "GetRole",
      "GetRolePolicy",
      "GetSAMLProvider",
      "GetSSHPublicKey",
      "GetServerCertificate",
      "GetServiceLastAccessedDetails",
      "GetUser",
      "GetUserPolicy",
      "ListAccessKeys",
      "ListAccountAliases",
      "ListAttachedGroupPolicies",
      "ListAttachedRolePolicies",
      "ListAttachedUserPolicies",
      "ListEntitiesForPolicy",
      "ListGroupPolicies",
      "ListGroups",
      "ListGroupsForUser",
      "ListInstanceProfiles",
      "ListInstanceProfilesForRole",
      "ListMFADevices",
      "ListOpenIDConnectProviders",
      "ListPolicies",
      "ListPolicyVersions",
      "ListRolePolicies",
      "ListRoles",
      "ListSAMLProviders",
      "ListSSHPublicKeys",
      "ListServerCertificates",
      "ListSigningCertificates",
      "ListUserPolicies",
      "ListUsers",
      "ListVirtualMFADevices",
      "PassRole",
      "PutGroupPolicy",
      "PutRolePolicy",
      "PutUserPolicy",
      "RemoveClientIDFromOpenIDConnectProvider",
      "RemoveRoleFromInstanceProfile",
      "RemoveUserFromGroup",
      "ResyncMFADevice",
      "SetDefaultPolicyVersion",
      "SimulateCustomPolicy",
      "SimulatePrincipalPolicy",
      "UpdateAccessKey",
      "UpdateAccountPasswordPolicy",
      "UpdateAssumeRolePolicy",
      "UpdateGroup",
      "UpdateLoginProfile",
      "UpdateOpenIDConnectProviderThumbprint",
      "UpdateSAMLProvider",
      "UpdateSSHPublicKey",
      "UpdateServerCertificate",
      "UpdateSigningCertificate",
      "UpdateUser",
      "UploadSSHPublicKey",
      "UploadServerCertificate",
      "UploadSigningCertificate"
    ],
    "HasResource": true,
    "StringPrefix": "iam",
    "conditionKeys": [
      "iam:PolicyArn"
    ]
  },
  "AWS Import Export": {
    "Actions": [
      "CreateJob",
      "UpdateJob",
      "CancelJob",
      "ListJobs",
      "GetStatus",
      "GetShippingLabel"
    ],
    "StringPrefix": "importexport"
  },
  "AWS IoT": {
    "ARNFormat": "arn:aws:iot:<region>:<account_ID>:<type>/<name>",
    "ARNRegex": "^arn:aws:iot:.+:[0-9]+:.+",
    "Actions": [
      "AcceptCertificateTransfer",
      "AttachPrincipalPolicy",
      "AttachThingPrincipal",
      "CancelCertificateTransfer",
      "Connect",
      "CreateCertificateFromCsr",
      "CreateKeysAndCertificate",
      "CreatePolicy",
      "CreatePolicyVersion",
      "CreateThing",
      "CreateTopicRule",
      "DeleteCertificate",
      "DeletePolicy",
      "DeletePolicyVersion",
      "DeleteThing",
      "DeleteThingShadow",
      "DeleteTopicRule",
      "DescribeCertificate",
      "DescribeEndpoint",
      "DescribeThing",
      "DetachPrincipalPolicy",
      "DetachThingPrincipal",
      "GetLoggingOptions",
      "GetPolicy",
      "GetPolicyVersion",
      "GetThingShadow",
      "GetTopicRule",
      "ListCertificates",
      "ListPolicies",
      "ListPolicyVersions",
      "ListPrincipalPolicies",
      "ListPrincipalThings",
      "ListThingPrincipals",
      "ListThings",
      "ListTopicRules",
      "Publish",
      "Receive",
      "RejectCertificateTransfer",
      "ReplaceTopicRule",
      "SetDefaultPolicyVersion",
      "SetLoggingOptions",
      "Subscribe",
      "TransferCertificate",
      "UpdateCertificate",
      "UpdateThing",
      "UpdateThingShadow"
    ],
    "HasResource": true,
    "StringPrefix": "iot",
    "conditionKeys": [
      "iot:ClientId"
    ]
  },
  "AWS Key Management Service": {
    "ARNFormat": "arn:aws:kms:<region>:<account_id>:<resource_type>/<id>",
    "ARNRegex": "^arn:aws:kms:.+",
    "Actions": [
      "CreateAlias",
      "CreateGrant",
      "CreateKey",
      "Decrypt",
      "DeleteAlias",
      "DescribeKey",
      "DisableKey",
      "DisableKeyRotation",
      "EnableKey",
      "EnableKeyRotation",
      "Encrypt",
      "GenerateRandom",
      "GenerateDataKey",
      "GenerateDataKeyWithoutPlaintext",
      "GetKeyPolicy",
      "GetKeyRotationStatus",
      "ListAliases",
      "ListGrants",
      "ListKeyPolicies",
      "ListKeys",
      "PutKeyPolicy",
      "ReEncrypt*",
      "RetireGrant",
      "RevokeGrant",
      "UpdateAlias",
      "UpdateKeyDescription"
    ],
    "HasResource": true,
    "StringPrefix": "kms",
    "conditionKeys": [
      "kms:EncryptionContextKeys",
      "kms:EncryptionContext",
      "kms:CallerAccount",
      "kms:GrantOperations",
      "kms:GrantConstraintType",
      "kms:GrantId",
      "kms:GrantIsForAWSResource",
      "kms:ViaService"
    ]
  },
  "AWS Lambda": {
    "ARNFormat": "arn:aws:lambda:<region>:<account>:function:<functionName>",
    "ARNRegex": "^arn:aws:lambda:.+",
    "Actions": [
      "AddPermission",
      "CreateAlias",
      "CreateEventSourceMapping",
      "CreateFunction",
      "DeleteAlias",
      "DeleteEventSourceMapping",
      "DeleteFunction",
      "GetAlias",
      "GetEventSourceMapping",
      "GetFunction",
      "GetFunctionConfiguration",
      "GetPolicy",
      "InvokeAsync",
      "InvokeFunction",
      "ListAliases",
      "ListEventSourceMappings",
      "ListFunctions",
      "ListVersionsByFunction",
      "PublishVersion",
      "RemovePermission",
      "UpdateAlias",
      "UpdateEventSourceMapping",
      "UpdateFunctionCode",
      "UpdateFunctionConfiguration"
    ],
    "HasResource": true,
    "StringPrefix": "lambda"
  },
  "AWS Marketplace": {
    "Actions": [
      "Subscribe",
      "Unsubscribe",
      "ViewSubscriptions"
    ],
    "StringPrefix": "aws-marketplace"
  },
  "AWS Marketplace Management Portal": {
    "Actions": [
      "uploadFiles",
      "viewMarketing",
      "viewReports",
      "viewSupport"
    ],
    "StringPrefix": "aws-marketplace-management"
  },
  "AWS Mobile Hub": {
    "ARNFormat": "arn:aws:mobilehub:<region>:<aws_account_ID>:project/<project_ID>",
    "ARNRegex": "^arn:aws:mobilehub:.+:[0-9]+:.+",
    "Actions": [
      "CreateProject",
      "CreateServiceRole",
      "DeleteProject",
      "GenerateProjectParameters",
      "GetProject",
      "ListAvailableFeatures",
      "ListAvailableRegions",
      "ListProjects",
      "UpdateProject",
      "ValidateProject",
      "VerifyServiceRole"
    ],
    "HasResource": true,
    "StringPrefix": "mobilehub"
  },
  "AWS OpsWorks": {
    "ARNFormat": "arn:aws:opsworks:<region>:<accountId>:<stack>/<stackId>/",
    "ARNRegex": "^arn:aws:opsworks:.+",
    "Actions": [
      "AssignVolume",
      "AssociateElasticIp",
      "AttachElasticLoadBalancer",
      "CloneStack",
      "CreateApp",
      "CreateDeployment",
      "CreateInstance",
      "CreateLayer",
      "CreateStack",
      "CreateUserProfile",
      "DeleteApp",
      "DeleteInstance",
      "DeleteLayer",
      "DeleteStack",
      "DeleteUserProfile",
      "DeregisterElasticIp",
      "DeregisterVolume",
      "DescribeApps",
      "DescribeCommands",
      "DescribeDeployments",
      "DescribeElasticIps",
      "DescribeElasticLoadBalancers",
      "DescribeInstances",
      "DescribeLayers",
      "DescribeLoadBasedAutoScaling",
      "DescribePermissions",
      "DescribeRaidArrays",
      "DescribeRdsDbInstances",
      "DescribeServiceErrors",
      "DescribeStacks",
      "DescribeTimeBasedAutoScaling",
      "DescribeUserProfiles",
      "DescribeVolumes",
      "DetachElasticLoadBalancer",
      "DisassociateElasticIp",
      "GetHostnameSuggestion",
      "RebootInstance",
      "RegisterElasticIp",
      "RegisterVolume",
      "SetLoadBasedAutoScaling",
      "SetPermission",
      "SetTimeBasedAutoScaling",
      "StartInstance",
      "StartStack",
      "StopInstance",
      "StopStack",
      "UnassignVolume",
      "UpdateApp",
      "UpdateElasticIp",
      "UpdateInstance",
      "UpdateLayer",
      "UpdateStack",
      "UpdateUserProfile",
      "UpdateVolume"
    ],
    "StringPrefix": "opsworks"
  },
  "AWS Security Token Service": {
    "ARNFormat": "arn:aws:<sts/iam>::<namespace>:<relative-id>",
    "ARNRegex": "^arn:aws:(sts|iam)::.+",
    "Actions": [
      "AssumeRole",
      "AssumeRoleWithSAML",
      "AssumeRoleWithWebIdentity",
      "DecodeAuthorizationMessage",
      "GetFederationToken",
      "GetSessionToken"
    ],
    "HasResource": true,
    "StringPrefix": "sts"
  },
  "AWS Trusted Advisor": {
    "ARNFormat": "arn:aws:trustedadvisor:*:<account_ID>:checks/{category}/{checkId}",
    "ARNRegex": "arn:aws:trustedadvisor:*",
    "Actions": [
      "DescribeCheckItems",
      "DescribeCheckRefreshStatuses",
      "DescribeCheckStatusHistoryChanges",
      "DescribeCheckSummaries",
      "DescribeNotificationPreferences",
      "ExcludeCheckItems",
      "IncludeCheckItems",
      "RefreshCheck",
      "UpdateNotificationPreferences"
    ],
    "StringPrefix": "trustedadvisor"
  },
  "AWS WAF": {
    "ARNFormat": "arn:aws:waf::<account_ID>:<resource>/<resource_id>",
    "ARNRegex": "^arn:aws:waf::[0-9]+:.+/.+",
    "Actions": [
      "CreateByteMatchSet",
      "CreateIPSet",
      "CreateRule",
      "CreateSqlInjectionMatchSet",
      "CreateWebACL",
      "DeleteByteMatchSet",
      "DeleteIPSet",
      "DeleteRule",
      "DeleteSqlInjectionMatchSet",
      "DeleteWebACL",
      "GetByteMatchSet",
      "GetChangeToken",
      "GetChangeTokenStatus",
      "GetIPSet",
      "GetRule",
      "GetSampledRequests",
      "GetSqlInjectionMatchSet",
      "GetWebACL",
      "ListByteMatchSets",
      "ListIPSets",
      "ListRules",
      "ListSqlInjectionMatchSets",
      "ListWebACLs",
      "UpdateByteMatchSet",
      "UpdateIPSet",
      "UpdateRule",
      "UpdateSqlInjectionMatchSet",
      "UpdateWebACL"
    ],
    "HasResource": true,
    "StringPrefix": "waf"
  },
  "Amazon API Gateway": {
    "ARNFormat": "arn:aws:execute-api:<region>:<account_id>:<api_id>/<stage>/<method>/<api_specific_resource_path>",
    "ARNRegex": "^arn:aws:execute-api:.+",
    "Actions": [
      "Invoke",
      "InvalidateCache"
    ],
    "HasResource": true,
    "StringPrefix": "execute-api"
  },
  "Amazon AppStream": {
    "Actions": [
      "CreateApplication",
      "CreateSession",
      "DeleteApplication",
      "GetApiRoot",
      "GetApplication",
      "GetApplications",
      "GetApplicationError",
      "GetApplicationErrors",
      "GetApplicationStatus",
      "GetSession",
      "GetSessions",
      "GetSessionStatus",
      "UpdateApplication",
      "UpdateApplicationState",
      "UpdateSessionState"
    ],
    "StringPrefix": "appstream"
  },
  "Amazon CloudFront": {
    "Actions": [
      "CreateCloudFrontOriginAccessIdentity",
      "CreateDistribution",
      "CreateInvalidation",
      "CreateStreamingDistribution",
      "DeleteCloudFrontOriginAccessIdentity",
      "DeleteDistribution",
      "DeleteStreamingDistribution",
      "GetCloudFrontOriginAccessIdentity",
      "GetCloudFrontOriginAccessIdentityConfig",
      "GetDistribution",
      "GetDistributionConfig",
      "GetInvalidation",
      "GetStreamingDistribution",
      "GetStreamingDistributionConfig",
      "ListCloudFrontOriginAccessIdentities",
      "ListDistributions",
      "ListDistributionsByWebACLId",
      "ListInvalidations",
      "ListStreamingDistributions",
      "UpdateCloudFrontOriginAccessIdentity",
      "UpdateDistribution",
      "UpdateStreamingDistribution"
    ],
    "StringPrefix": "cloudfront"
  },
  "Amazon CloudSearch": {
    "ARNFormat": "arn:aws:cloudsearch:<region>:<account>:<resourceType>/<resourceName>",
    "ARNRegex": "^arn:aws:cloudsearch:.+:.+:.+",
    "Actions": [
      "BuildSuggesters",
      "CreateDomain",
      "DefineAnalysisScheme",
      "DefineExpression",
      "DefineIndexField",
      "DefineIndexFields",
      "DefineSuggester",
      "DeleteAnalysisScheme",
      "DeleteDomain",
      "DeleteExpression",
      "DeleteIndexField",
      "DeleteSuggester",
      "DescribeAnalysisSchemes",
      "DescribeAvailabilityOptions",
      "DescribeDomains",
      "DescribeExpressions",
      "DescribeIndexFields",
      "DescribeScalingParameters",
      "DescribeServiceAccessPolicies",
      "DescribeSuggesters",
      "document",
      "IndexDocuments",
      "ListDomainNames",
      "search",
      "suggest",
      "UpdateAvailabilityOptions",
      "UpdateScalingParameters",
      "UpdateServiceAccessPolicies"
    ],
    "StringPrefix": "cloudsearch"
  },
  "Amazon CloudWatch": {
    "Actions": [
      "DeleteAlarms",
      "DescribeAlarmHistory",
      "DescribeAlarms",
      "DescribeAlarmsForMetric",
      "DisableAlarmActions",
      "EnableAlarmActions",
      "GetMetricData",
      "GetMetricStatistics",
      "ListMetrics",
      "PutMetricAlarm",
      "PutMetricData",
      "SetAlarmState"
    ],
    "StringPrefix": "cloudwatch"
  },
  "Amazon CloudWatch Events": {
    "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>",
    "ARNRegex": "^arn:aws:.+",
    "Actions": [
      "DeleteRule",
      "DescribeRule",
      "DisableRule",
      "EnableRule",
      "ListRuleNamesByTarget",
      "ListRules",
      "ListTargetsByRule",
      "PutEvents",
      "PutRule",
      "PutTargets",
      "RemoveTargets",
      "TestEventPattern"
    ],
    "HasResource": true,
    "StringPrefix": "events",
    "conditionKeys": [
      "events:source",
      "events:detail-type",
      "events:detail.userIdentity.principalId",
      "events:TargetArn"
    ]
  },
  "Amazon CloudWatch Logs": {
    "ARNFormat": "arn:aws:logs:.+:.+:.+",
    "ARNRegex": "^arn:aws:logs:.+",
    "Actions": [
      "CancelExportTask",
      "CreateExportTask",
      "CreateLogGroup",
      "CreateLogStream",
      "DeleteDestination",
      "DeleteLogGroup",
      "DeleteLogStream",
      "DeleteMetricFilter",
      "DeleteRetentionPolicy",
      "DeleteSubscriptionFilter",
      "DescribeDestinations",
      "DescribeExportTasks",
      "DescribeLogGroups",
      "DescribeLogStreams",
      "DescribeMetricFilters",
      "DescribeSubscriptionFilters",
      "FilterLogEvents",
      "GetLogEvents",
      "PutDestination",
      "PutDestinationPolicy",
      "PutLogEvents",
      "PutMetricFilter",
      "PutRetentionPolicy",
      "PutSubscriptionFilter",
      "TestMetricFilter"
    ],
    "HasResource": true,
    "StringPrefix": "logs"
  },
  "Amazon Cognito Identity": {
    "ARNFormat": "arn:aws:cognito-identy:<region>:<account>:<resourceType>/<resourcePath>",
    "ARNRegex": "^arn:aws:cognito-identity:.+",
    "Actions": [
      "CreateIdentityPool",
      "DeleteIdentityPool",
      "DeleteIdentities",
      "DescribeIdentity",
      "DescribeIdentityPool",
      "GetIdentityPoolRoles",
      "GetOpenIdTokenForDeveloperIdentity",
      "ListIdentities",
      "ListIdentityPools",
      "LookupDeveloperIdentity",
      "MergeDeveloperIdentities",
      "SetIdentityPoolRoles",
      "UnlinkDeveloperIdentity",
      "UpdateIdentityPool"
    ],
    "StringPrefix": "cognito-identity"
  },
  "Amazon Cognito Sync": {
    "ARNFormat": "arn:aws:ec2:cognito-sync:<region>:<account>:<resourceType>/<resourcePath>:",
    "ARNRegex": "^arn:aws:cognito-sync:.+",
    "Actions": [
      "BulkPublish",
      "DeleteDataset",
      "DescribeDataset",
      "DescribeIdentityUsage",
      "DescribeIdentityPoolUsage",
      "GetBulkPublishDetails",
      "GetCognitoEvents",
      "GetIdentityPoolConfiguration",
      "ListDatasets",
      "ListIdentityPoolUsage",
      "ListRecords",
      "RegisterDevice",
      "SetCognitoEvents",
      "SetIdentityPoolConfiguration",
      "SubscribeToDataset",
      "UpdateRecords",
      "UnsubscribeFromDataset"
    ],
    "StringPrefix": "cognito-sync"
  },
  "Amazon DynamoDB": {
    "ARNFormat": "arn:aws:dynamodb:<region>:<accountID>:table/<tablename>",
    "ARNRegex": "^arn:aws:dynamodb:.+:.+:.+",
    "Actions": [
      "BatchGetItem",
      "BatchWriteItem",
      "CreateTable",
      "DeleteItem",
      "DeleteTable",
      "DescribeReservedCapacity",
      "DescribeReservedCapacityOfferings",
      "DescribeStream",
      "DescribeTable",
      "GetItem",
      "GetRecords",
      "GetShardIterator",
      "ListStreams",
      "ListTables",
      "PurchaseReservedCapacityOfferings",
      "PutItem",
      "Query",
      "Scan",
      "UpdateItem",
      "UpdateTable"
    ],
    "HasResource": true,
    "StringPrefix": "dynamodb",
    "conditionKeys": [
      "dynamodb:Attributes",
      "dynamodb:ReturnValues",
      "dynamodb:ReturnConsumedCapacity",
      "dynamodb:Select",
      "dynamodb:LeadingKeys"
    ]
  },
  "Amazon EC2": {
    "ARNFormat": "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>",
    "ARNRegex": "^arn:aws:ec2:.+",
    "Actions": [
      "AcceptVpcPeeringConnection",
      "ActivateLicense",
      "AllocateAddress",
      "AssignPrivateIpAddresses",
      "AssociateAddress",
      "AssociateDhcpOptions",
      "AssociateRouteTable",
      "AttachClassicLinkVpc",
      "AttachInternetGateway",
      "AttachNetworkInterface",
      "AttachVolume",
      "AttachVpnGateway",
      "AuthorizeSecurityGroupEgress",
      "AuthorizeSecurityGroupIngress",
      "BundleInstance",
      "CancelBundleTask",
      "CancelConversionTask",
      "CancelExportTask",
      "CancelImportTask",
      "CancelReservedInstancesListing",
      "CancelSpotFleetRequests",
      "CancelSpotInstanceRequests",
      "ConfirmProductInstance",
      "CopyImage",
      "CopySnapshot",
      "CreateCustomerGateway",
      "CreateDhcpOptions",
      "CreateFlowLogs",
      "CreateImage",
      "CreateInstanceExportTask",
      "CreateInternetGateway",
      "CreateKeyPair",
      "CreateNatGateway",
      "CreateNetworkAcl",
      "CreateNetworkAclEntry",
      "CreateNetworkInterface",
      "CreatePlacementGroup",
      "CreateReservedInstancesListing",
      "CreateRoute",
      "CreateRouteTable",
      "CreateSecurityGroup",
      "CreateSnapshot",
      "CreateSpotDatafeedSubscription",
      "CreateSubnet",
      "CreateTags",
      "CreateVolume",
      "CreateVpc",
      "CreateVpcEndpoint",
      "CreateVpcPeeringConnection",
      "CreateVpnConnection",
      "CreateVpnConnectionRoute",
      "CreateVpnGateway",
      "DeactivateLicense",
      "DeleteCustomerGateway",
      "DeleteDhcpOptions",
      "DeleteFlowLogs",
      "DeleteInternetGateway",
      "DeleteKeyPair",
      "DeleteNatGateway",
      "DeleteNetworkAcl",
      "DeleteNetworkAclEntry",
      "DeleteNetworkInterface",
      "DeletePlacementGroup",
      "DeleteRoute",
      "DeleteRouteTable",
      "DeleteSecurityGroup",
      "DeleteSnapshot",
      "DeleteSpotDatafeedSubscription",
      "DeleteSubnet",
      "DeleteTags",
      "DeleteVolume",
      "DeleteVpc",
      "DeleteVpcEndpoints",
      "DeleteVpcPeeringConnection",
      "DeleteVpnConnection",
      "DeleteVpnConnectionRoute",
      "DeleteVpnGateway",
      "DeregisterImage",
      "DescribeAccountAttributes",
      "DescribeAddresses",
      "DescribeAvailabilityZones",
      "DescribeBundleTasks",
      "DescribeClassicLinkInstances",
      "DescribeConversionTasks",
      "DescribeCustomerGateways",
      "DescribeDhcpOptions",
      "DescribeExportTasks",
      "DescribeFlowLogs",
      "DescribeHosts",
      "DescribeImageAttribute",
      "DescribeImages",
      "DescribeImportImageTasks",
      "DescribeImportSnapshotTasks",
      "DescribeInstanceAttribute",
      "DescribeInstanceStatus",
      "DescribeInstances",
      "DescribeInternetGateways",
      "DescribeKeyPairs",
      "DescribeLicenses",
      "DescribeMovingAddresses",
      "DescribeNatGateways",
      "DescribeNetworkAcls",
      "DescribeNetworkInterfaceAttribute",
      "DescribeNetworkInterfaces",
      "DescribePlacementGroups",
      "DescribePrefixLists",
      "DescribeRegions",
      "DescribeReservedInstances",
      "DescribeReservedInstancesListings",
      "DescribeReservedInstancesModifications",
      "DescribeReservedInstancesOfferings",
      "DescribeRouteTables",
      "DescribeSecurityGroups",
      "DescribeSnapshotAttribute",
      "DescribeSnapshots",
      "DescribeSpotDatafeedSubscription",
      "DescribeSpotFleetInstances",
      "DescribeSpotFleetRequestHistory",
      "DescribeSpotFleetRequests",
      "DescribeSpotInstanceRequests",
      "DescribeSpotPriceHistory",
      "DescribeStaleSecurityGroups",
      "DescribeSubnets",
      "DescribeTags",
      "DescribeVolumeAttribute",
      "DescribeVolumeStatus",
      "DescribeVolumes",
      "DescribeVpcAttribute",
      "DescribeVpcClassicLink",
      "DescribeVpcEndpointServices",
      "DescribeVpcEndpoints",
      "DescribeVpcPeeringConnections",
      "DescribeVpcs",
      "DescribeVpnConnections",
      "DescribeVpnGateways",
      "DetachClassicLinkVpc",
      "DetachInternetGateway",
      "DetachNetworkInterface",
      "DetachVolume",
      "DetachVpnGateway",
      "DisableVgwRoutePropagation",
      "DisableVpcClassicLink",
      "DisassociateAddress",
      "DisassociateRouteTable",
      "EnableVgwRoutePropagation",
      "EnableVolumeIO",
      "EnableVpcClassicLink",
      "GetConsoleOutput",
      "GetPasswordData",
      "ImportImage",
      "ImportInstance",
      "ImportKeyPair",
      "ImportSnapshot",
      "ImportVolume",
      "ModifyHosts",
      "ModifyIdFormat",
      "ModifyImageAttribute",
      "ModifyInstanceAttribute",
      "ModifyInstancePlacement",
      "ModifyNetworkInterfaceAttribute",
      "ModifyReservedInstances",
      "ModifySnapshotAttribute",
      "ModifySpotFleetRequest",
      "ModifySubnetAttribute",
      "ModifyVolumeAttribute",
      "ModifyVpcAttribute",
      "ModifyVpcEndpoint",
      "ModifyVpcPeeringConnectionOptions",
      "MonitorInstances",
      "MoveAddressToVpc",
      "PurchaseReservedInstancesOffering",
      "RebootInstances",
      "RegisterImage",
      "RejectVpcPeeringConnection",
      "ReleaseAddress",
      "ReleaseHosts",
      "ReplaceNetworkAclAssociation",
      "ReplaceNetworkAclEntry",
      "ReplaceRoute",
      "ReplaceRouteTableAssociation",
      "ReportInstanceStatus",
      "RequestSpotFleet",
      "RequestSpotInstances",
      "ResetImageAttribute",
      "ResetInstanceAttribute",
      "ResetNetworkInterfaceAttribute",
      "ResetSnapshotAttribute",
      "RestoreAddressToClassic",
      "RevokeSecurityGroupEgress",
      "RevokeSecurityGroupIngress",
      "RunInstances",
      "StartInstances",
      "StopInstances",
      "TerminateInstances",
      "UnassignPrivateIpAddresses",
      "UnmonitorInstances"
    ],
    "HasResource": true,
    "StringPrefix": "ec2",
    "conditionKeys": [
      "ec2:AccepterVpc",
      "ec2:AvailabilityZone",
      "ec2:EbsOptimized",
      "ec2:ImageType",
      "ec2:InstanceProfile",
      "ec2:InstanceType",
      "ec2:Owner",
      "ec2:ParentSnapshot",
      "ec2:PlacementGroup",
      "ec2:PlacementGroupStrategy",
      "ec2:Public",
      "ec2:Region",
      "ec2:RequesterVpc",
      "ec2:ResourceTag",
      "ec2:RootDeviceType",
      "ec2:Subnet",
      "ec2:Tenancy",
      "ec2:VolumeIops",
      "ec2:VolumeSize",
      "ec2:VolumeType",
      "ec2:Vpc"
    ]
  },
  "Amazon EC2 Container Registry": {
    "ARNFormat": "arn:aws:ecr:<region>:<account_ID>:repository/<repository_name>",
    "ARNRegex": "arn:aws:ecr+:[^:]+:[0-9]{12}:repository/.*",
    "Actions": [
      "BatchCheckLayerAvailability",
      "BatchDeleteImage",
      "BatchGetImage",
      "CompleteLayerUpload",
      "CreateRepository",
      "DeleteRepository",
      "DeleteRepositoryPolicy",
      "DescribeRepositories",
      "GetAuthorizationToken",
      "GetDownloadUrlForLayer",
      "GetManifest",
      "GetRepositoryPolicy",
      "InitiateLayerUpload",
      "ListImages",
      "PutImage",
      "SetRepositoryPolicy",
      "UploadLayerPart"
    ],
    "HasResource": true,
    "StringPrefix": "ecr"
  },
  "Amazon EC2 Container Service": {
    "ARNFormat": "arn:aws:ecs:<region>:<account_ID>:<resource_type>/<relative_ID>",
    "ARNRegex": "^arn:aws:ecs:.+",
    "Actions": [
      "CreateCluster",
      "CreateService",
      "DeleteCluster",
      "DeleteService",
      "DeregisterContainerInstance",
      "DeregisterTaskDefinition",
      "DescribeClusters",
      "DescribeContainerInstances",
      "DescribeServices",
      "DescribeTaskDefinition",
      "DescribeTasks",
      "DiscoverPollEndpoint",
      "ListClusters",
      "ListContainerInstances",
      "ListServices",
      "ListTaskDefinitionFamilies",
      "ListTaskDefinitions",
      "ListTasks",
      "Poll",
      "RegisterContainerInstance",
      "RegisterTaskDefinition",
      "RunTask",
      "StartTask",
      "StopTask",
      "StartTelemetrySession",
      "SubmitContainerStateChange",
      "SubmitTaskStateChange",
      "UpdateContainerAgent",
      "UpdateService"
    ],
    "HasResource": true,
    "StringPrefix": "ecs",
    "conditionKeys": [
      "ecs:cluster",
      "ecs:container-instances"
    ]
  },
  "Amazon EC2 Spot Fleet": {
    "Actions": [
      "CancelSpotFleetRequests",
      "DescribeSpotFleetInstances",
      "DescribeSpotFleetRequests",
      "DescribeSpotFleetRequestHistory",
      "RequestSpotFleet"
    ],
    "StringPrefix": "ec2"
  },
  "Amazon ElastiCache": {
    "Actions": [
      "AuthorizeCacheSecurityGroupIngress",
      "CopySnapshot",
      "CreateCacheCluster",
      "CreateCacheParameterGroup",
      "CreateCacheSecurityGroup",
      "CreateCacheSubnetGroup",
      "CreateReplicationGroup",
      "CreateSnapshot",
      "DeleteCacheCluster",
      "DeleteCacheParameterGroup",
      "DeleteCacheSecurityGroup",
      "DeleteCacheSubnetGroup",
      "DeleteReplicationGroup",
      "DeleteSnapshot",
      "DescribeCacheClusters",
      "DescribeCacheEngineVersions",
      "DescribeCacheParameterGroups",
      "DescribeCacheParameters",
      "DescribeCacheSecurityGroups",
      "DescribeCacheSubnetGroups",
      "DescribeEngineDefaultParameters",
      "DescribeEvents",
      "DescribeReplicationGroups",
      "DescribeReservedCacheNodes",
      "DescribeReservedCacheNodesOfferings",
      "DescribeSnapshots",
      "ListTagsForResource",
      "ModifyCacheCluster",
      "ModifyCacheParameterGroup",
      "ModifyCacheSubnetGroup",
      "ModifyReplicationGroup",
      "PurchaseReservedCacheNodesOffering",
      "RebootCacheCluster",
      "ResetCacheParameterGroup",
      "RevokeCacheSecurityGroupIngress"
    ],
    "StringPrefix": "elasticache"
  },
  "Amazon Elastic File System": {
    "ARNFormat": "arn:aws:elasticfilesystem:<region>:<account-id>:file-system/<file-system-id>",
    "ARNRegex": "^arn:aws:elasticfilesystem:.+",
    "Actions": [
      "CreateFileSystem",
      "CreateTags",
      "DescribeTags",
      "DeleteTags",
      "CreateMountTarget",
      "ModifyMountTargetSecurityGroups",
      "DescribeMountTargetSecurityGroups",
      "DescribeFileSystems",
      "DescribeMountTargets",
      "DeleteMountTarget",
      "DeleteFileSystem"
    ],
    "HasResource": true,
    "StringPrefix": "elasticfilesystem"
  },
  "Amazon Elastic MapReduce": {
    "Actions": [
      "AddInstanceGroups",
      "AddTags",
      "AddJobFlowSteps",
      "DescribeCluster",
      "DescribeJobFlows",
      "DescribeStep",
      "ListBootstrapActions",
      "ListClusters",
      "ListInstanceGroups",
      "ListInstances",
      "ListSteps",
      "ModifyInstanceGroups",
      "RemoveTags",
      "RunJobFlow",
      "SetTerminationProtection",
      "SetVisibleToAllUsers",
      "TerminateJobFlows"
    ],
    "StringPrefix": "elasticmapreduce"
  },
  "Amazon Elastic Transcoder": {
    "ARNFormat": "arn:aws:elastictranscoder:<region>:<account>:<resourceType>/<resourceId>",
    "ARNRegex": "^arn:aws:elastictranscoder:.+",
    "Actions": [
      "CancelJob",
      "CreateJob",
      "CreatePipeline",
      "CreatePreset",
      "DeletePipeline",
      "DeletePreset",
      "ListJobsByPipeline",
      "ListJobsByStatus",
      "ListPipelines",
      "ListPresets",
      "ReadJob",
      "ReadPipeline",
      "ReadPreset",
      "TestRole",
      "UpdatePipeline",
      "UpdatePipelineNotifications",
      "UpdatePipelineStatus"
    ],
    "StringPrefix": "elastictranscoder"
  },
  "Amazon Elasticsearch Service": {
    "ARNFormat": "arn:aws:es:<region>:<account_ID>:<resource>",
    "ARNRegex": "^arn:aws:es:.+",
    "Actions": [
      "AddTags",
      "CreateElasticsearchDomain",
      "DeleteElasticsearchDomain",
      "DescribeElasticsearchDomain",
      "DescribeElasticsearchDomains",
      "DescribeElasticsearchDomainConfig",
      "ListDomainNames",
      "ListTags",
      "RemoveTags",
      "UpdateElasticsearchDomainConfig"
    ],
    "HasResource": true,
    "StringPrefix": "es"
  },
  "Amazon GameLift": {
    "Actions": [
      "CreateAlias",
      "CreateBuild",
      "CreateFleet",
      "CreateGameSession",
      "CreatePlayerSession",
      "CreatePlayerSessions",
      "DeleteAlias",
      "DeleteBuild",
      "DeleteFleet",
      "DescribeAlias",
      "DescribeBuild",
      "DescribeEC2InstanceLimits",
      "DescribeFleetAttributes",
      "DescribeFleetCapacity",
      "DescribeFleetEvents",
      "DescribeFleetPortSettings",
      "DescribeFleetUtilization",
      "DescribeGameSessions",
      "DescribePlayerSessions",
      "GetGameSessionLogUrl",
      "ListAliases",
      "ListBuilds",
      "ListFleets",
      "RequestUploadCredentials",
      "ResolveAlias",
      "UpdateAlias",
      "UpdateBuild",
      "UpdateFleetAttributes",
      "UpdateFleetCapacity",
      "UpdateFleetPortSettings",
      "UpdateGameSession"
    ],
    "HasResource": false,
    "StringPrefix": "gamelift"
  },
  "Amazon Glacier": {
    "ARNFormat": "arn:aws:glacier:<region>:<accountID>:<relative-id>",
    "ARNRegex": "^arn:aws:glacier:.+:.+:.+",
    "Actions": [
      "AbortVaultLock",
      "AddTagsToVault",
      "AbortMultipartUpload",
      "CompleteMultipartUpload",
      "CompleteVaultLock",
      "CreateVault",
      "DeleteArchive",
      "DeleteVault",
      "DeleteVaultAccessPolicy",
      "DeleteVaultNotifications",
      "DescribeJob",
      "DescribeVault",
      "GetDataRetrievalPolicy",
      "GetJobOutput",
      "GetVaultAccessPolicy",
      "GetVaultLock",
      "GetVaultNotifications",
      "InitiateJob",
      "InitiateMultipartUpload",
      "InitiateVaultLock",
      "ListJobs",
      "ListMultipartUploads",
      "ListParts",
      "ListTagsForVault",
      "ListVaults",
      "RemoveTagsFromVault",
      "SetDataRetrievalPolicy",
      "SetVaultAccessPolicy",
      "SetVaultNotifications",
      "UploadArchive",
      "UploadMultipartPart"
    ],
    "HasResource": true,
    "StringPrefix": "glacier",
    "conditionKeys": [
      "glacier:ArchiveAgeInDays"
    ]
  },
  "Amazon Inspector": {
    "ARNFormat": "arn:aws:inspector:<region>:<account_ID>:<resource_id>",
    "ARNRegex": "^arn:aws:inspector:.+",
    "Actions": [
      "AddAttributesToFindings",
      "AttachAssessmentAndRulesPackage",
      "CreateApplication",
      "CreateAssessment",
      "CreateResourceGroup",
      "DeleteApplication",
      "DeleteAssessment",
      "DeleteRun",
      "DescribeApplication",
      "DescribeAssessment",
      "DescribeCrossAccountAccessRole",
      "DescribeFinding",
      "DescribeResourceGroup",
      "DescribeRulesPackage",
      "DescribeRun",
      "DetachAssessmentAndRulesPackage",
      "GetAssessmentTelemetry",
      "ListApplications",
      "ListAssessmentAgents",
      "ListAssessments",
      "ListAttachedAssessments",
      "ListAttachedRulesPackages",
      "ListFindings",
      "ListRulesPackages",
      "ListRuns",
      "ListTagsForResource",
      "LocalizeText",
      "PreviewAgentsForResourceGroup",
      "RegisterCrossAccountAccessRole",
      "RemoveAttributesFromFindings",
      "RetireRulesPackage",
      "RunAssessment",
      "SetTagsForResource",
      "StartDataCollection",
      "StopDataCollection",
      "UpdateApplication",
      "UpdateAssessment"
    ],
    "HasResource": true,
    "StringPrefix": "inspector"
  },
  "Amazon Kinesis": {
    "ARNFormat": "arn:aws:kinesis:<region>:<account>:<resourceType>/<resourceName>",
    "ARNRegex": "^arn:aws:kinesis:.+",
    "Actions": [
      "AddTagsToStream",
      "CreateStream",
      "DecreaseStreamRetentionPeriod",
      "DeleteStream",
      "DescribeStream",
      "GetShardIterator",
      "GetRecords",
      "IncreaseStreamRetentionPeriod",
      "ListStreams",
      "ListTagsForStream",
      "MergeShards",
      "PutRecord",
      "PutRecords",
      "RemoveTagsFromStream",
      "SplitShard"
    ],
    "HasResource": true,
    "StringPrefix": "kinesis"
  },
  "Amazon Kinesis Firehose": {
    "ARNFormat": "arn:aws:firehose:<region>:<account_ID>:deliverystream/<deliverystreamname>",
    "ARNRegex": "^arn:aws:firehose:.+:[0-9]+:deliverystream/.+",
    "Actions": [
      "CreateDeliveryStream",
      "DeleteDeliveryStream",
      "DescribeDeliveryStream",
      "ListDeliveryStreams",
      "PutRecord",
      "PutRecordBatch",
      "UpdateDestination"
    ],
    "HasResource": true,
    "StringPrefix": "firehose"
  },
  "Amazon Machine Learning": {
    "ARNFormat": "arn:aws:machinelearning:<region>:<account_ID>:<resource_type>/<relative_ID>",
    "ARNRegex": "^arn:aws:machinelearning:.+",
    "Actions": [
      "CreateBatchPrediction",
      "CreateDataSourceFromRDS",
      "CreateDataSourceFromRedshift",
      "CreateDataSourceFromS3",
      "CreateEvaluation",
      "CreateMLModel",
      "CreateRealtimeEndpoint",
      "DeleteBatchPrediction",
      "DeleteDataSource",
      "DeleteEvaluation",
      "DeleteMLModel",
      "DeleteRealtimeEndpoint",
      "DescribeBatchPredictions",
      "DescribeDataSources",
      "DescribeEvaluations",
      "DescribeMLModels",
      "GetBatchPrediction",
      "GetDataSource",
      "GetEvaluation",
      "GetMLModel",
      "Predict",
      "UpdateBatchPrediction",
      "UpdateDataSource",
      "UpdateEvaluation",
      "UpdateMLModel"
    ],
    "HasResource": true,
    "StringPrefix": "machinelearning"
  },
  "Amazon Mechanical Turk": {
    "Actions": [
      "ApproveAssignment",
      "ApproveRejectedAssignment",
      "AssignQualification",
      "BlockWorker",
      "ChangeHITTypeOfHIT",
      "CreateHIT",
      "CreateQualificationType",
      "DisableHIT",
      "DisposeHIT",
      "DisposeQualificationType",
      "ExtendHIT",
      "ForceExpireHIT",
      "GetAccountBalance",
      "GetAssignment",
      "GetAssignmentsForHIT",
      "GetBlockedWorkers",
      "GetBonusPayments",
      "GetFileUploadURL",
      "GetHIT",
      "GetHITsForQualificationType",
      "GetQualificationRequests",
      "GetQualificationScore",
      "GetQualificationType",
      "GetQualificationsForQualificationType",
      "GetRequesterStatistic",
      "GetRequesterWorkerStatistic",
      "GetReviewResultsForHIT",
      "GetReviewableHITs",
      "GrantBonus",
      "GrantQualification",
      "NotifyWorkers",
      "RegisterHITType",
      "RejectAssignment",
      "RejectQualificationRequest",
      "RevokeQualification",
      "SearchHITs",
      "SearchQualificationTypes",
      "SendTestEventNotification",
      "SetHITAsReviewing",
      "SetHITTypeNotification",
      "UnblockWorker",
      "UpdateQualificationScore",
      "UpdateQualificationType"
    ],
    "HasResource": false,
    "StringPrefix": "mechanicalturk"
  },
  "Amazon Mobile Analytics": {
    "ARNFormat": "arn:aws:mobileanalytics:<region>:<account_id>:<app_title>",
    "ARNRegex": "^arn:aws:mobileanalytics:.+",
    "Actions": [
      "PutEvents",
      "GetReports",
      "GetFinancialReports"
    ],
    "StringPrefix": "mobileanalytics"
  },
  "Amazon RDS": {
    "ARNRegex": "^arn:aws:rds:.+",
    "Actions": [
      "AddTagsToResource",
      "AddSourceIdentifierToSubscription",
      "ApplyPendingMaintenanceAction",
      "AuthorizeDBSecurityGroupIngress",
      "CopyDBClusterSnapshot",
      "CopyDBParameterGroup",
      "CopyDBSnapshot",
      "CopyOptionGroup",
      "CreateDBClusterParameterGroup",
      "CreateDBClusterSnapshot",
      "CreateDBCluster",
      "CreateDBInstance",
      "CreateDBInstanceReadReplica",
      "CreateDBParameterGroup",
      "CreateDBSecurityGroup",
      "CreateDBSnapshot",
      "CreateDBSubnetGroup",
      "CreateEventSubscription",
      "CreateOptionGroup",
      "DeleteDBClusterParameterGroup",
      "DeleteDBClusterSnapshot",
      "DeleteDBCluster",
      "DeleteDBInstance",
      "DeleteDBParameterGroup",
      "DeleteDBSecurityGroup",
      "DeleteDBSnapshot",
      "DeleteDBSubnetGroup",
      "DeleteEventSubscription",
      "DeleteOptionGroup",
      "DescribeAccountAttributes",
      "DescribeCertificates",
      "DescribeEngineDefaultClusterParameters",
      "DescribeEngineDefaultParameters",
      "DescribeDBClusterParameterGroups",
      "DescribeDBClusterParameters",
      "DescribeDBClusterSnapshots",
      "DescribeDBClusters",
      "DescribeDBInstances",
      "DescribeDBLogFiles",
      "DescribeDBParameterGroups",
      "DescribeDBParameters",
      "DescribeDBSecurityGroups",
      "DescribeDBSnapshotAttributes",
      "DescribeDBSnapshots",
      "DescribeDBEngineVersions",
      "DescribeDBSubnetGroups",
      "DescribeEventCategories",
      "DescribeEvents",
      "DescribeEventSubscriptions",
      "DescribeOptionGroups",
      "DescribeOptionGroupOptions",
      "DescribeOrderableDBInstanceOptions",
      "DescribePendingMaintenanceActions",
      "DescribeReservedDBInstances",
      "DescribeReservedDBInstancesOfferings",
      "DownloadDBLogFilePortion",
      "FailoverDBCluster",
      "ListTagsForResource",
      "ModifyDBClusterParameterGroup",
      "ModifyDBCluster",
      "ModifyDBInstance",
      "ModifyDBParameterGroup",
      "ModifyDBSnapshotAttribute",
      "ModifyDBSubnetGroup",
      "ModifyEventSubscription",
      "ModifyOptionGroup",
      "PromoteReadReplica",
      "PurchaseReservedDBInstancesOffering",
      "RebootDBInstance",
      "RemoveSourceIdentifierFromSubscription",
      "RemoveTagsFromResource",
      "RestoreDBClusterFromSnapshot",
      "RestoreDBClusterToPointInTime",
      "RestoreDBInstanceFromDBSnapshot",
      "RestoreDBInstanceToPointInTime",
      "ResetDBClusterParameterGroup",
      "ResetDBParameterGroup",
      "RevokeDBSecurityGroupIngress"
    ],
    "StringPrefix": "rds",
    "conditionKeys": [
      "rds:DatabaseClass",
      "rds:DatabaseEngine",
      "rds:DatabaseName",
      "rds:MultiAz",
      "rds:Piops",
      "rds:StorageSize",
      "rds:Vpc",
      "rds:db-tag",
      "rds:es-tag",
      "rds:og-tag",
      "rds:pg-tag",
      "rds:req-tag",
      "rds:secgrp-tag",
      "rds:snapshot-tag",
      "rds:subgrp-tag"
    ]
  },
  "Amazon Redshift": {
    "Actions": [
      "AuthorizeClusterSecurityGroupIngress",
      "AuthorizeSnapshotAccess",
      "CancelQuerySession",
      "CopyClusterSnapshot",
      "CreateCluster",
      "CreateClusterParameterGroup",
      "CreateClusterSecurityGroup",
      "CreateClusterSnapshot",
      "CreateClusterSubnetGroup",
      "CreateEventSubscription",
      "CreateHsmClientCertificate",
      "CreateHsmConfiguration",
      "CreateTags",
      "DeleteCluster",
      "DeleteClusterParameterGroup",
      "DeleteClusterSecurityGroup",
      "DeleteClusterSnapshot",
      "DeleteClusterSubnetGroup",
      "DeleteEventSubscription",
      "DeleteHsmClientCertificate",
      "DeleteHsmConfiguration",
      "DeleteTags",
      "DescribeClusterParameterGroups",
      "DescribeClusterParameters",
      "DescribeClusterSecurityGroups",
      "DescribeClusterSnapshots",
      "DescribeClusterSubnetGroups",
      "DescribeClusterVersions",
      "DescribeClusters",
      "DescribeDefaultClusterParameters",
      "DescribeEventCategories",
      "DescribeEventSubscriptions",
      "DescribeEvents",
      "DescribeHsmClientCertificates",
      "DescribeHsmConfigurations",
      "DescribeLoggingStatus",
      "DescribeOrderableClusterOptions",
      "DescribeReservedNodeOfferings",
      "DescribeReservedNodes",
      "DescribeResize",
      "DescribeTags",
      "DisableLogging",
      "DisableSnapshotCopy",
      "EnableLogging",
      "EnableSnapshotCopy",
      "ModifyCluster",
      "ModifyClusterParameterGroup",
      "ModifyClusterSubnetGroup",
      "ModifyEventSubscription",
      "ModifySnapshotCopyRetentionPeriod",
      "PurchaseReservedNodeOffering",
      "RebootCluster",
      "ResetClusterParameterGroup",
      "RestoreFromClusterSnapshot",
      "RevokeClusterSecurityGroupIngress",
      "RevokeSnapshotAccess",
      "RotateEncryptionKey",
      "ViewQueriesInConsole"
    ],
    "StringPrefix": "redshift"
  },
  "Amazon Route 53": {
    "ARNFormat": "arn:aws:route53:::<resource>/<id>",
    "ARNRegex": "^arn:aws:route53:::.+",
    "Actions": [
      "AssociateVPCWithHostedZone",
      "ChangeResourceRecordSets",
      "ChangeTagsForResource",
      "CreateHealthCheck",
      "CreateHostedZone",
      "CreateReusableDelegationSet",
      "CreateTrafficPolicy",
      "CreateTrafficPolicyInstance",
      "CreateTrafficPolicyVersion",
      "DeleteHealthCheck",
      "DeleteHostedZone",
      "DeleteReusableDelegationSet",
      "DeleteTrafficPolicy",
      "DeleteTrafficPolicyInstance",
      "DisableDomainAutoRenew",
      "DisassociateVPCFromHostedZone",
      "EnableDomainAutoRenew",
      "GetChange",
      "GetCheckerIpRanges",
      "GetGeoLocation",
      "GetHealthCheck",
      "GetHealthCheckCount",
      "GetHealthCheckLastFailureReason",
      "GetHealthCheckStatus",
      "GetHostedZone",
      "GetHostedZoneCount",
      "GetReusableDelegationSet",
      "GetTrafficPolicy",
      "GetTrafficPolicyInstance",
      "GetTrafficPolicyInstanceCount",
      "ListGeoLocations",
      "ListHealthChecks",
      "ListHostedZones",
      "ListHostedZonesByName",
      "ListResourceRecordSets",
      "ListReusableDelegationSets",
      "ListTagsForResource",
      "ListTagsForResources",
      "ListTrafficPolicies",
      "ListTrafficPolicyInstances",
      "ListTrafficPolicyInstancesByHostedZone",
      "ListTrafficPolicyInstancesByPolicy",
      "ListTrafficPolicyVersions",
      "UpdateHealthCheck",
      "UpdateHostedZoneComment",
      "UpdateTrafficPolicyComment",
      "UpdateTrafficPolicyInstance"
    ],
    "HasResource": true,
    "StringPrefix": "route53"
  },
  "Amazon Route53 Domains": {
    "Actions": [
      "CheckDomainAvailability",
      "DeleteDomain",
      "DeleteTagsForDomain",
      "DisableDomainTransferLock",
      "EnableDomainTransferLock",
      "GetDomainDetail",
      "GetOperationDetail",
      "ListDomains",
      "ListOperations",
      "ListTagsForDomain",
      "RegisterDomain",
      "RetrieveDomainAuthCode",
      "TransferDomain",
      "UpdateDomainContact",
      "UpdateDomainContactPrivacy",
      "UpdateDomainNameservers",
      "UpdateTagsForDomain"
    ],
    "StringPrefix": "route53domains"
  },
  "Amazon S3": {
    "ARNFormat": "arn:aws:s3:::<bucket_name>/<key_name>",
    "ARNRegex": "^arn:aws:s3:::.+",
    "Actions": [
      "AbortMultipartUpload",
      "CreateBucket",
      "DeleteBucket",
      "DeleteBucketPolicy",
      "DeleteBucketWebsite",
      "DeleteObject",
      "DeleteObjectVersion",
      "GetBucketAcl",
      "GetBucketCORS",
      "GetBucketLocation",
      "GetBucketLogging",
      "GetBucketNotification",
      "GetBucketPolicy",
      "GetBucketRequestPayment",
      "GetBucketTagging",
      "GetBucketVersioning",
      "GetBucketWebsite",
      "GetLifecycleConfiguration",
      "GetObject",
      "GetObjectAcl",
      "GetObjectTorrent",
      "GetObjectVersion",
      "GetObjectVersionAcl",
      "GetObjectVersionTorrent",
      "ListAllMyBuckets",
      "ListBucket",
      "ListBucketMultipartUploads",
      "ListBucketVersions",
      "ListMultipartUploadParts",
      "PutBucketAcl",
      "PutBucketCORS",
      "PutBucketLogging",
      "PutBucketNotification",
      "PutBucketPolicy",
      "PutBucketRequestPayment",
      "PutBucketTagging",
      "PutBucketVersioning",
      "PutBucketWebsite",
      "PutLifecycleConfiguration",
      "PutObject",
      "PutObjectAcl",
      "PutObjectVersionAcl",
      "RestoreObject"
    ],
    "HasResource": true,
    "StringPrefix": "s3",
    "conditionKeys": [
      "s3:x-amz-acl",
      "s3:x-amz-copy-source",
      "s3:x-amz-metadata-directive",
      "s3:x-amz-server-side-encryption",
      "s3:VersionId",
      "s3:LocationConstraint",
      "s3:delimiter",
      "s3:max-keys",
      "s3:prefix"
    ]
  },
  "Amazon SES": {
    "Actions": [
      "CloneReceiptRuleSet",
      "CreateReceiptFilter",
      "CreateReceiptRule",
      "CreateReceiptRuleSet",
      "DeleteIdentity",
      "DeleteIdentityPolicy",
      "DeleteReceiptFilter",
      "DeleteReceiptRule",
      "DeleteReceiptRuleSet",
      "DeleteVerifiedEmailAddress",
      "DescribeActiveReceiptRuleSet",
      "DescribeReceiptRule",
      "DescribeReceiptRuleSet",
      "GetIdentityDkimAttributes",
      "GetIdentityNotificationAttributes",
      "GetIdentityPolicies",
      "GetIdentityVerificationAttributes",
      "GetSendQuota",
      "GetSendStatistics",
      "ListIdentities",
      "ListIdentityPolicies",
      "ListReceiptFilters",
      "ListReceiptRuleSets",
      "ListVerifiedEmailAddresses",
      "PutIdentityPolicy",
      "ReorderReceiptRuleSet",
      "SendBounce",
      "SendEmail",
      "SendRawEmail",
      "SetActiveReceiptRuleSet",
      "SetIdentityDkimEnabled",
      "SetIdentityNotificationTopic",
      "SetIdentityFeedbackForwardingEnabled",
      "SetReceiptRulePosition",
      "UpdateReceiptRule",
      "VerifyDomainDkim",
      "VerifyDomainIdentity",
      "VerifyEmailAddress",
      "VerifyEmailIdentity"
    ],
    "StringPrefix": "ses",
    "conditionKeys": [
      "ses:Recipients",
      "ses:FromAddress",
      "ses:FromDisplayName",
      "ses:FeedbackAddress"
    ]
  },
  "Amazon SNS": {
    "ARNFormat": "arn:aws:sns:<region>:<account_ID>:<topic_name>",
    "ARNRegex": "^arn:aws:sns:.+",
    "Actions": [
      "AddPermission",
      "ConfirmSubscription",
      "CreatePlatformApplication",
      "CreatePlatformEndpoint",
      "CreateTopic",
      "DeleteEndpoint",
      "DeletePlatformApplication",
      "DeleteTopic",
      "GetEndpointAttributes",
      "GetPlatformApplicationAttributes",
      "GetSubscriptionAttributes",
      "GetTopicAttributes",
      "ListEndpointsByPlatformApplication",
      "ListPlatformApplications",
      "ListSubscriptions",
      "ListSubscriptionsByTopic",
      "ListTopics",
      "Publish",
      "RemovePermission",
      "SetEndpointAttributes",
      "SetPlatformApplicationAttributes",
      "SetSubscriptionAttributes",
      "SetTopicAttributes",
      "Subscribe",
      "Unsubscribe"
    ],
    "HasResource": true,
    "StringPrefix": "sns",
    "conditionKeys": [
      "aws:SourceArn",
      "sns:Endpoint",
      "sns:Protocol"
    ]
  },
  "Amazon SQS": {
    "ARNFormat": "arn:aws:sqs:<region>:<account_ID>:<queue_name>",
    "ARNRegex": "^arn:aws:sqs:.+",
    "Actions": [
      "AddPermission",
      "ChangeMessageVisibility",
      "ChangeMessageVisibilityBatch",
      "CreateQueue",
      "DeleteMessage",
      "DeleteMessageBatch",
      "DeleteQueue",
      "GetQueueAttributes",
      "GetQueueUrl",
      "ListDeadLetterSourceQueues",
      "ListQueues",
      "PurgeQueue",
      "ReceiveMessage",
      "RemovePermission",
      "SendMessage",
      "SendMessageBatch",
      "SetQueueAttributes"
    ],
    "HasResource": true,
    "StringPrefix": "sqs"
  },
  "Amazon Simple Systems Manager": {
    "ARNFormat": "arn:aws:ssm:<region>:<account_ID>:<document_name>",
    "ARNRegex": "^arn:aws:(ssm|ec2):.+",
    "Actions": [
      "CreateAssociation",
      "CreateAssociationBatch",
      "CreateDocument",
      "DeleteAssociation",
      "DeleteDocument",
      "DescribeAssociation",
      "DescribeDocument",
      "GetDocument",
      "ListAssociations",
      "ListDocuments",
      "UpdateAssociationStatus"
    ],
    "HasResource": true,
    "StringPrefix": "ssm"
  },
  "Amazon Simple Workflow Service": {
    "ARNFormat": "arn:aws:swf:<region>:<account>:/<domain>/<domainName>",
    "ARNRegex": "^arn:aws:swf:.+",
    "Actions": [
      "CancelTimer",
      "CancelWorkflowExecution",
      "CompleteWorkflowExecution",
      "ContinueAsNewWorkflowExecution",
      "CountClosedWorkflowExecutions",
      "CountOpenWorkflowExecutions",
      "CountPendingActivityTasks",
      "CountPendingDecisionTasks",
      "DeprecateActivityType",
      "DeprecateDomain",
      "DeprecateWorkflowType",
      "DescribeActivityType",
      "DescribeDomain",
      "DescribeWorkflowExecution",
      "DescribeWorkflowType",
      "FailWorkflowExecution",
      "GetWorkflowExecutionHistory",
      "ListActivityTypes",
      "ListClosedWorkflowExecutions",
      "ListDomains",
      "ListOpenWorkflowExecutions",
      "ListWorkflowTypes",
      "PollForActivityTask",
      "PollForDecisionTask",
      "RecordActivityTaskHeartbeat",
      "RecordMarker",
      "RegisterActivityType",
      "RegisterDomain",
      "RegisterWorkflowType",
      "RequestCancelActivityTask",
      "RequestCancelExternalWorkflowExecution",
      "RequestCancelWorkflowExecution",
      "RespondActivityTaskCanceled",
      "RespondActivityTaskCompleted",
      "RespondActivityTaskFailed",
      "RespondDecisionTaskCompleted",
      "ScheduleActivityTask",
      "SignalExternalWorkflowExecution",
      "SignalWorkflowExecution",
      "StartChildWorkflowExecution",
      "StartTimer",
      "StartWorkflowExecution",
      "TerminateWorkflowExecution"
    ],
    "StringPrefix": "swf",
    "conditionKeys": [
      "swf:activityType.name",
      "swf:activityType.version",
      "swf:defaultTaskList.name",
      "swf:name",
      "swf:tagFilter.tag",
      "swf:taskList.name",
      "swf:typeFilter.name",
      "swf:typeFilter.version",
      "swf:version",
      "swf:workflowType.name",
      "swf:workflowType.version",
      "swf:workflowTypeVersion"
    ]
  },
  "Amazon SimpleDB": {
    "ARNFormat": "arn:aws:sdb:<region>:<account_ID>:domain/<domain_name>",
    "ARNRegex": "^arn:aws:sdb:.+",
    "Actions": [
      "BatchDeleteAttributes",
      "BatchPutAttributes",
      "CreateDomain",
      "DeleteAttributes",
      "DeleteDomain",
      "DomainMetadata",
      "GetAttributes",
      "ListDomains",
      "PutAttributes",
      "Select"
    ],
    "HasResource": true,
    "StringPrefix": "sdb"
  },
  "Amazon Storage Gateway": {
    "ARNFormat": "arn:aws:storagegateway:us-east-1:<account>:<resourceType>/<resourceName>",
    "ARNRegex": "^arn:aws:storagegateway:.+",
    "Actions": [
      "ActivateGateway",
      "AddCache",
      "AddUploadBuffer",
      "AddWorkingStorage",
      "CancelArchival",
      "CancelRetrieval",
      "CreateCachediSCSIVolume",
      "CreateSnapshot",
      "CreateSnapshotFromVolumeRecoveryPoint",
      "CreateStorediSCSIVolume",
      "CreateTapes",
      "DeleteBandwidthRateLimit",
      "DeleteChapCredentials",
      "DeleteGateway",
      "DeleteSnapshotSchedule",
      "DeleteTape",
      "DeleteTapeArchive",
      "DeleteVolume",
      "DescribeBandwidthRateLimit",
      "DescribeCache",
      "DescribeCachediSCSIVolumes",
      "DescribeChapCredentials",
      "DescribeGatewayInformation",
      "DescribeMaintenanceStartTime",
      "DescribeSnapshotSchedule",
      "DescribeStorediSCSIVolumes",
      "DescribeTapeArchives",
      "DescribeTapeRecoveryPoints",
      "DescribeTapes",
      "DescribeUploadBuffer",
      "DescribeVTLDevices",
      "DescribeWorkingStorage",
      "DisableGateway",
      "ListGateways",
      "ListLocalDisks",
      "ListTagsForResource",
      "ListVolumeRecoveryPoints",
      "ListVolumes",
      "RetrieveTapeArchive",
      "RetrieveTapeRecoveryPoint",
      "ShutdownGateway",
      "StartGateway",
      "UpdateBandwidthRateLimit",
      "UpdateChapCredentials",
      "UpdateGatewayInformation",
      "UpdateGatewaySoftwareNow",
      "UpdateMaintenanceStartTime",
      "UpdateSnapshotSchedule"
    ],
    "StringPrefix": "storagegateway"
  },
  "Amazon WorkDocs": {
    "Actions": [
      "ActivateUser",
      "AddUserToGroup",
      "CheckAlias",
      "CreateInstance",
      "DeactivateUser",
      "DeleteInstance",
      "DeregisterDirectory",
      "DescribeAvailableDirectories",
      "DescribeInstances",
      "RegisterDirectory",
      "RemoveUserFromGroup",
      "UpdateInstanceAlias"
    ],
    "StringPrefix": "workdocs"
  },
  "Amazon WorkMail": {
    "Actions": [
      "AddMembersToGroup",
      "CreateGroup",
      "CreateMailDomain",
      "CreateMailUser",
      "CreateOrganization",
      "DeleteOrganization",
      "DeleteMailDomain",
      "DeleteMobileDevice",
      "DescribeDirectories",
      "DescribeKmsKeys",
      "DescribeOrganizations",
      "DescribeMailDomains",
      "DescribeMailGroups",
      "DescribeMailUsers",
      "DisableMailGroups",
      "DisableMailUsers",
      "EnableMailDomain",
      "EnableMailUsers",
      "EnableMailGroups",
      "GetMailDomainDetails",
      "GetMailGroupDetails",
      "GetMailUserDetails",
      "GetMobileDeviceDetails",
      "GetMobileDevicesForUser",
      "GetMobilePolicyDetails",
      "ListMembersInMailGroup",
      "RemoveMembersFromGroup",
      "ResetUserPassword",
      "SearchMembers",
      "SetAdmin",
      "SetDefaultMailDomain",
      "SetMailGroupDetails",
      "SetMailUserDetails",
      "SetMobilePolicyDetails",
      "WipeMobileDevice"
    ],
    "StringPrefix": "workmail"
  },
  "Amazon WorkSpaces": {
    "Actions": [
      "CreateWorkspaces",
      "DescribeWorkspaceBundles",
      "DescribeWorkspaceDirectories",
      "DescribeWorkspaces",
      "RebootWorkspaces",
      "RebuildWorkspaces",
      "TerminateWorkspaces"
    ],
    "StringPrefix": "workspaces"
  },
  "Amazon WorkSpaces Application Manager": {
    "Actions": [
      "AuthenticatePackager"
    ],
    "StringPrefix": "wam"
  },
  "Auto Scaling": {
    "Actions": [
      "AttachInstances",
      "CompleteLifecycleAction",
      "CreateAutoScalingGroup",
      "CreateLaunchConfiguration",
      "CreateOrUpdateTags",
      "DeleteAutoScalingGroup",
      "DeleteLaunchConfiguration",
      "DeleteLifecycleHook",
      "DeleteNotificationConfiguration",
      "DeletePolicy",
      "DeleteScheduledAction",
      "DeleteTags",
      "DescribeAccountLimits",
      "DescribeAdjustmentTypes",
      "DescribeAutoScalingGroups",
      "DescribeAutoScalingInstances",
      "DescribeAutoScalingNotificationTypes",
      "DescribeLaunchConfigurations",
      "DescribeLifecycleHookTypes",
      "DescribeLifecycleHooks",
      "DescribeMetricCollectionTypes",
      "DescribeNotificationConfigurations",
      "DescribePolicies",
      "DescribeScalingActivities",
      "DescribeScalingProcessTypes",
      "DescribeScheduledActions",
      "DescribeTags",
      "DescribeTerminationPolicyTypes",
      "DetachInstances",
      "DisableMetricsCollection",
      "EnableMetricsCollection",
      "EnterStandby",
      "ExecutePolicy",
      "ExitStandby",
      "PutLifecycleHook",
      "PutNotificationConfiguration",
      "PutScalingPolicy",
      "PutScheduledUpdateGroupAction",
      "RecordLifecycleActionHeartbeat",
      "ResumeProcesses",
      "SetDesiredCapacity",
      "SetInstanceHealth",
      "SetInstanceProtection",
      "SuspendProcesses",
      "TerminateInstanceInAutoScalingGroup",
      "UpdateAutoScalingGroup"
    ],
    "StringPrefix": "autoscaling"
  },
  "Data Pipeline": {
    "Actions": [
      "ActivatePipeline",
      "AddTags",
      "CreatePipeline",
      "DeactivatePipeline",
      "DeletePipeline",
      "DescribeObjects",
      "DescribePipelines",
      "EvaluateExpression",
      "GetAccountLimits",
      "GetPipelineDefinition",
      "ListPipelines",
      "PollForTask",
      "PutAccountLimits",
      "PutPipelineDefinition",
      "QueryObjects",
      "RemoteTags",
      "ReportTaskProgress",
      "ReportTaskRunnerHeartbeat",
      "SetStatus",
      "SetTaskStatus",
      "ValidatePipelineDefinition"
    ],
    "StringPrefix": "datapipeline"
  },
  "Elastic Load Balancing": {
    "ARNFormat": "arn:aws::elasticloadbalancing:<region>:<account>:loadbalancer/<resource>",
    "ARNRegex": "^arn:aws:elasticloadbalancing:.+",
    "Actions": [
      "AddTags",
      "ApplySecurityGroupsToLoadBalancer",
      "AttachLoadBalancerToSubnets",
      "ConfigureHealthCheck",
      "CreateAppCookieStickinessPolicy",
      "CreateLBCookieStickinessPolicy",
      "CreateLoadBalancer",
      "CreateLoadBalancerListeners",
      "CreateLoadBalancerPolicy",
      "DeleteLoadBalancer",
      "DeleteLoadBalancerListeners",
      "DeleteLoadBalancerPolicy",
      "DeregisterInstancesFromLoadBalancer",
      "DescribeInstanceHealth",
      "DescribeLoadBalancerAttributes",
      "DescribeLoadBalancerPolicyTypes",
      "DescribeLoadBalancerPolicies",
      "DescribeLoadBalancers",
      "DescribeTags",
      "DetachLoadBalancerFromSubnets",
      "DisableAvailabilityZonesForLoadBalancer",
      "EnableAvailabilityZonesForLoadBalancer",
      "ModifyLoadBalancerAttributes",
      "RemoveTags",
      "RegisterInstancesWithLoadBalancer",
      "SetLoadBalancerListenerSSLCertificate",
      "SetLoadBalancerPoliciesForBackendServer",
      "SetLoadBalancerPoliciesOfListener"
    ],
    "HasResource": true,
    "StringPrefix": "elasticloadbalancing"
  },
  "Manage - Amazon API Gateway": {
    "ARNFormat": "arn:aws:apigateway:<region>::<api_gateway_resource_path>",
    "ARNRegex": "^arn:aws:apigateway:.+",
    "Actions": [
      "DELETE",
      "GET",
      "HEAD",
      "OPTIONS",
      "PATCH",
      "POST",
      "PUT"
    ],
    "HasResource": true,
    "StringPrefix": "apigateway"
  }
}