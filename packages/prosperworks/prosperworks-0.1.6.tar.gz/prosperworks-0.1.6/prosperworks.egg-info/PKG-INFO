Metadata-Version: 1.1
Name: prosperworks
Version: 0.1.6
Summary: A simple python wrapper for the ProsperWorks API
Home-page: https://github.com/tizz98/prosperworks-api
Author: Elijah Wilson
Author-email: elijah@elijahwilson.me
License: MIT
Download-URL: https://github.com/tizz98/prosperworks-api/tarball/0.1.6
Description: Prosperworks Api
        ================
        
        A python based api wrapper for
        `Prosperworks <https://www.prosperworks.com/developer_api>`__. |Build
        Status|
        
        Installation
        ------------
        
        From pip (recommended): ``pip install prosperworks``
        
        From source:
        ``pip install git+git://github.com:tizz98/prosperworks-api.git@master``
        
        Models
        ======
        
        ``prosperworks.models.Company``
        -------------------------------
        
        Fields
        ^^^^^^
        
        -  id
        -  name
        -  address (``prosperworks.models.Address``)
        -  assignee\_id
        -  contact\_type\_id
        -  details
        -  email\_domain
        -  phone\_numbers (list of ``prosperworks.models.PhoneNumber``)
        -  socials (list of ``prosperworks.models.Social``)
        -  tags (list of strings)
        -  websites (list of ``prosperworks.models.Website``)
        -  date\_created
        -  date\_modified
        -  custom\_fields (list of ``prosperworks.models.CustomField``)
        
        Methods
        ^^^^^^^
        
        -  ``search`` (search for companies), available kwargs are:
        -  page\_number
        -  page\_size
        -  sort\_by
        -  sort\_direction
        -  tags
        -  age
        -  assignee\_ids
        -  city
        -  state
        -  postal\_code
        -  country
        -  minimum\_interaction\_count
        -  maximum\_interaction\_count
        -  minimum\_interaction\_date
        -  maximum\_interaction\_date
        -  minimum\_created\_date
        -  maximum\_created\_date
        -  minimum\_modified\_date
        -  maximum\_modified\_date
        -  ``create`` (create new company), available kwargs are:
        -  name
        -  address
        -  assignee\_id
        -  contact\_type\_id
        -  details
        -  email\_domain
        -  phone\_numbers[]
        -  socials[]
        -  tags
        -  websites[]
        -  date\_created
        -  date\_modified
        -  custom\_fields[]
        -  ``update`` (update current company), *will use currently set values
           to update*
        -  ``delete`` (delete current company)
        
        Examples:
        ^^^^^^^^^
        
        .. code:: python
        
            from prosperworks import api
            from prosperworks.models import Company
        
            api.configure('key', 'your.name@example.com')
            for company in Company.search():
                print company.name
        
            new_co = Company.create(name='New Co.')
            print new_co.id
        
            new_co.name = 'New Co. (updated)'
            new_co.update()
        
            new_co.delete()
        
        ``prosperworks.models.Lead``
        ----------------------------
        
        Fields
        ^^^^^^
        
        -  id
        -  name
        -  address (``prosperworks.models.Address``)
        -  assignee\_id
        -  company\_name
        -  customer\_source\_id
        -  details
        -  email
        -  monetary\_value
        -  phone\_numbers (list of ``prosperworks.models.PhoneNumber``)
        -  socials (list of ``prosperworks.models.Social``)
        -  status
        -  tags (list of strings)
        -  websites (list of ``prosperworks.models.Website``)
        -  date\_created
        -  date\_modified
        -  custom\_fields (list of ``prosperworks.models.CustomField``)
        
        Methods
        ^^^^^^^
        
        -  ``search`` (search for companies), available kwargs are:
        -  page\_number
        -  page\_size
        -  sort\_by
        -  sort\_direction
        -  tags
        -  age
        -  assignee\_ids
        -  city
        -  state
        -  postal\_code
        -  country
        -  minimum\_interaction\_count
        -  maximum\_interaction\_count
        -  minimum\_interaction\_date
        -  maximum\_interaction\_date
        -  minimum\_created\_date
        -  maximum\_created\_date
        -  minimum\_modified\_date
        -  maximum\_modified\_date
        -  ``create`` (create new company), available kwargs are:
        -  name
        -  address
        -  assignee\_id
        -  company\_name
        -  customer\_source\_id
        -  details
        -  email
        -  monetary\_value
        -  phone\_numbers[]
        -  socials[]
        -  status
        -  tags
        -  title
        -  websites[]
        -  date\_created
        -  date\_modified
        -  custom\_fields[]
        -  ``update`` (update current company), *will use currently set values
           to update*
        -  ``delete`` (delete current company)
        -  ``convert`` (convert a lead), available kwargs are (all optional):
        -  person
        -  company (``prosperworks.models.Company``)
        -  opportunity
        
        Examples:
        ^^^^^^^^^
        
        .. code:: python
        
            from prosperworks import api
            from prosperworks.models import Company, Lead
        
            api.configure('key', 'your.name@example.com')
        
            new_co = Company.create(name='New Co.')
            print new_co.id
        
            lead = Lead.create(name='John Doe')
            lead.name = 'Jane Doe'
            lead.update()
            print lead.id
        
            lead.convert(company=new_co)
        
        .. |Build Status| image:: https://travis-ci.org/tizz98/prosperworks-api.svg
           :target: https://travis-ci.org/tizz98/prosperworks-api
        
Keywords: prosperworks api
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
