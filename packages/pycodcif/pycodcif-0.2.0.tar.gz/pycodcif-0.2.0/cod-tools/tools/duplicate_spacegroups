#!/bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author: antanas $
#$Date: 2016-01-18 22:30:36 +0000 (Mon, 18 Jan 2016) $
#$Revision: 4539 $
#$URL: svn://www.crystallography.net/cod-tools/trunk/tools/duplicate_spacegroups $
#------------------------------------------------------------------------------
#*
# Find and print out duplicated space group definitions in COD::Spacegroups::Lookup::COD.
#**

use strict;
use warnings;
use COD::Spacegroups::Lookup::COD;
use COD::Spacegroups::Lookup qw( make_symop_hash make_symop_key );
use COD::Spacegroups::Symop::Parse qw( );

# Identify the spacegroup from the symmetry operators:

my %symop_lookup_table = make_symop_hash( [
    \@COD::Spacegroups::Lookup::COD::table,
    \@COD::Spacegroups::Lookup::COD::extra_settings
] );

for my $sg ( @COD::Spacegroups::Lookup::COD::table,
             @COD::Spacegroups::Lookup::COD::extra_settings ) {
    my @symops = @{$sg->{symops}};
    my $key = make_symop_key( \@symops );

    if( exists $symop_lookup_table{$key} ) {
        my $estimated_sg = $symop_lookup_table{$key};
        if( $sg->{universal_h_m} ne $estimated_sg->{universal_h_m} ) {
            printf "%-20s\t%s\n",
                $sg->{universal_h_m},
                $estimated_sg->{universal_h_m};
        }
    } else {
        print STDERR "$0:: WARNING, spacegroup could not be identified\n"
    }
}
