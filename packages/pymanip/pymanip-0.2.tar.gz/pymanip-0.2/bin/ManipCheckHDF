#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""

This program checks that the .dat file and the .hdf5 of a
pymanip session holds the same data.

"""

import time
import numpy as np
import matplotlib.pyplot as plt

import pandas as pd
from clint.textui import colored

from pymanip.Session import SavedSession

def main(acqName, variable_to_plot):
    # Lecture HDF5
    MI = SavedSession(acqName)

    # Lecture DAT
    datfile = acqName + '.dat'
    print 'Loading saved session from file', datfile
    data = pd.read_csv(datfile, sep=' ')
    start_t = data['Time'].values[0]
    end_t = data['Time'].values[-1]
    start_string = time.strftime(MI.dateformat, time.localtime(start_t))
    end_string = time.strftime(MI.dateformat, time.localtime(end_t))
    print colored.blue('*** Start date: ' + start_string)
    print colored.blue('***  End date: ' + end_string)

    varlist = ['Time']
    varlist += MI.log_variable_list()
    
    # First line
    print 'Printing first line.'
    format_str = '{:>15} | {:>20} | {:>20}'
    print format_str.format('', 'HDF', 'DAT')
    print '-'*80
    for varname in varlist:
        data_hdf = MI.log(varname)[0]
        data_dat = data[varname].values[0]
        print format_str.format(varname, data_hdf, data_dat)
        
    # Comparaison
    length_warning_done = False
    for varname in varlist:
        var_hdf = MI.log(varname)
        var_dat = data[varname].values
        if len(var_hdf) != len(var_dat):
            common_length = np.min([len(var_hdf), len(var_dat)])
            if not length_warning_done:
                print 'Number of data points differs.'
                print 'HDF:', len(var_hdf)
                print 'DAT:', len(var_dat)
                length_warning_done = True
                print 'Comparing the first', common_length, ' values'
            var_hdf = var_hdf[0:common_length]
            var_dat = var_dat[0:common_length]
        reldiff = np.abs(var_hdf - var_dat)/(var_hdf+var_dat)
        bb = (reldiff > 0.01)
        if bb.any():
            print 'Data differs for variable ' + varname
            index = np.min(bb.argmax())
            print 'On line', index, ': HDF=', var_hdf[index], 'DAT=', var_dat[index]
        else:
            print 'Identical data for variable ' + varname

    # Plot
    if variable_to_plot is not None:
        plt.figure(1)
        t = MI.log('t')
        var = MI.log(variable_to_plot)
        plt.plot(t-t[0], var)
        plt.title('HDF')
        plt.xlabel('t')
        plt.ylabel(variable_to_plot)

        plt.figure(2)
        t = data['Time'].values
        var = data[variable_to_plot].values
        plt.plot(t-t[0], var)
        plt.title('DAT')
        plt.xlabel('t')
        plt.ylabel(variable_to_plot)

        plt.show()

if __name__ == '__main__':
    from argparse import ArgumentParser
    parser = ArgumentParser(description=__doc__)
    parser.add_argument('acquisition_name', help='Name of the pymanip acquisition to inspect')
    parser.add_argument('-p', '--plot', help='Plot the specified variable')
    args = parser.parse_args()
    main(args.acquisition_name, args.plot)
