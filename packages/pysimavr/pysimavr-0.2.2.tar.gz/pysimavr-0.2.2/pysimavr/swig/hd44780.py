# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_hd44780', [dirname(__file__)])
        except ImportError:
            import _hd44780
            return _hd44780
        if fp is not None:
            try:
                _mod = imp.load_module('_hd44780', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _hd44780 = swig_import_helper()
    del swig_import_helper
else:
    import _hd44780
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_hd44780.IRQ_HD44780_ALL_swigconstant(_hd44780)
IRQ_HD44780_ALL = _hd44780.IRQ_HD44780_ALL

_hd44780.IRQ_HD44780_RS_swigconstant(_hd44780)
IRQ_HD44780_RS = _hd44780.IRQ_HD44780_RS

_hd44780.IRQ_HD44780_RW_swigconstant(_hd44780)
IRQ_HD44780_RW = _hd44780.IRQ_HD44780_RW

_hd44780.IRQ_HD44780_E_swigconstant(_hd44780)
IRQ_HD44780_E = _hd44780.IRQ_HD44780_E

_hd44780.IRQ_HD44780_D0_swigconstant(_hd44780)
IRQ_HD44780_D0 = _hd44780.IRQ_HD44780_D0

_hd44780.IRQ_HD44780_D1_swigconstant(_hd44780)
IRQ_HD44780_D1 = _hd44780.IRQ_HD44780_D1

_hd44780.IRQ_HD44780_D2_swigconstant(_hd44780)
IRQ_HD44780_D2 = _hd44780.IRQ_HD44780_D2

_hd44780.IRQ_HD44780_D3_swigconstant(_hd44780)
IRQ_HD44780_D3 = _hd44780.IRQ_HD44780_D3

_hd44780.IRQ_HD44780_D4_swigconstant(_hd44780)
IRQ_HD44780_D4 = _hd44780.IRQ_HD44780_D4

_hd44780.IRQ_HD44780_D5_swigconstant(_hd44780)
IRQ_HD44780_D5 = _hd44780.IRQ_HD44780_D5

_hd44780.IRQ_HD44780_D6_swigconstant(_hd44780)
IRQ_HD44780_D6 = _hd44780.IRQ_HD44780_D6

_hd44780.IRQ_HD44780_D7_swigconstant(_hd44780)
IRQ_HD44780_D7 = _hd44780.IRQ_HD44780_D7

_hd44780.IRQ_HD44780_INPUT_COUNT_swigconstant(_hd44780)
IRQ_HD44780_INPUT_COUNT = _hd44780.IRQ_HD44780_INPUT_COUNT

_hd44780.IRQ_HD44780_BUSY_swigconstant(_hd44780)
IRQ_HD44780_BUSY = _hd44780.IRQ_HD44780_BUSY

_hd44780.IRQ_HD44780_ADDR_swigconstant(_hd44780)
IRQ_HD44780_ADDR = _hd44780.IRQ_HD44780_ADDR

_hd44780.IRQ_HD44780_DATA_IN_swigconstant(_hd44780)
IRQ_HD44780_DATA_IN = _hd44780.IRQ_HD44780_DATA_IN

_hd44780.IRQ_HD44780_DATA_OUT_swigconstant(_hd44780)
IRQ_HD44780_DATA_OUT = _hd44780.IRQ_HD44780_DATA_OUT

_hd44780.IRQ_HD44780_COUNT_swigconstant(_hd44780)
IRQ_HD44780_COUNT = _hd44780.IRQ_HD44780_COUNT

_hd44780.HD44780_FLAG_F_swigconstant(_hd44780)
HD44780_FLAG_F = _hd44780.HD44780_FLAG_F

_hd44780.HD44780_FLAG_N_swigconstant(_hd44780)
HD44780_FLAG_N = _hd44780.HD44780_FLAG_N

_hd44780.HD44780_FLAG_D_L_swigconstant(_hd44780)
HD44780_FLAG_D_L = _hd44780.HD44780_FLAG_D_L

_hd44780.HD44780_FLAG_R_L_swigconstant(_hd44780)
HD44780_FLAG_R_L = _hd44780.HD44780_FLAG_R_L

_hd44780.HD44780_FLAG_S_C_swigconstant(_hd44780)
HD44780_FLAG_S_C = _hd44780.HD44780_FLAG_S_C

_hd44780.HD44780_FLAG_B_swigconstant(_hd44780)
HD44780_FLAG_B = _hd44780.HD44780_FLAG_B

_hd44780.HD44780_FLAG_C_swigconstant(_hd44780)
HD44780_FLAG_C = _hd44780.HD44780_FLAG_C

_hd44780.HD44780_FLAG_D_swigconstant(_hd44780)
HD44780_FLAG_D = _hd44780.HD44780_FLAG_D

_hd44780.HD44780_FLAG_S_swigconstant(_hd44780)
HD44780_FLAG_S = _hd44780.HD44780_FLAG_S

_hd44780.HD44780_FLAG_I_D_swigconstant(_hd44780)
HD44780_FLAG_I_D = _hd44780.HD44780_FLAG_I_D

_hd44780.HD44780_FLAG_LOWNIBBLE_swigconstant(_hd44780)
HD44780_FLAG_LOWNIBBLE = _hd44780.HD44780_FLAG_LOWNIBBLE

_hd44780.HD44780_FLAG_BUSY_swigconstant(_hd44780)
HD44780_FLAG_BUSY = _hd44780.HD44780_FLAG_BUSY

_hd44780.HD44780_FLAG_REENTRANT_swigconstant(_hd44780)
HD44780_FLAG_REENTRANT = _hd44780.HD44780_FLAG_REENTRANT

_hd44780.HD44780_FLAG_DIRTY_swigconstant(_hd44780)
HD44780_FLAG_DIRTY = _hd44780.HD44780_FLAG_DIRTY

_hd44780.HD44780_FLAG_CRAM_DIRTY_swigconstant(_hd44780)
HD44780_FLAG_CRAM_DIRTY = _hd44780.HD44780_FLAG_CRAM_DIRTY

_hd44780.VRAM_SIZE_swigconstant(_hd44780)
VRAM_SIZE = _hd44780.VRAM_SIZE
class hd44780_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, hd44780_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, hd44780_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["irq"] = _hd44780.hd44780_t_irq_set
    __swig_getmethods__["irq"] = _hd44780.hd44780_t_irq_get
    if _newclass:
        irq = _swig_property(_hd44780.hd44780_t_irq_get, _hd44780.hd44780_t_irq_set)
    __swig_setmethods__["avr"] = _hd44780.hd44780_t_avr_set
    __swig_getmethods__["avr"] = _hd44780.hd44780_t_avr_get
    if _newclass:
        avr = _swig_property(_hd44780.hd44780_t_avr_get, _hd44780.hd44780_t_avr_set)
    __swig_setmethods__["w"] = _hd44780.hd44780_t_w_set
    __swig_getmethods__["w"] = _hd44780.hd44780_t_w_get
    if _newclass:
        w = _swig_property(_hd44780.hd44780_t_w_get, _hd44780.hd44780_t_w_set)
    __swig_setmethods__["h"] = _hd44780.hd44780_t_h_set
    __swig_getmethods__["h"] = _hd44780.hd44780_t_h_get
    if _newclass:
        h = _swig_property(_hd44780.hd44780_t_h_get, _hd44780.hd44780_t_h_set)
    __swig_setmethods__["cursor"] = _hd44780.hd44780_t_cursor_set
    __swig_getmethods__["cursor"] = _hd44780.hd44780_t_cursor_get
    if _newclass:
        cursor = _swig_property(_hd44780.hd44780_t_cursor_get, _hd44780.hd44780_t_cursor_set)
    __swig_setmethods__["vram"] = _hd44780.hd44780_t_vram_set
    __swig_getmethods__["vram"] = _hd44780.hd44780_t_vram_get
    if _newclass:
        vram = _swig_property(_hd44780.hd44780_t_vram_get, _hd44780.hd44780_t_vram_set)
    __swig_setmethods__["pinstate"] = _hd44780.hd44780_t_pinstate_set
    __swig_getmethods__["pinstate"] = _hd44780.hd44780_t_pinstate_get
    if _newclass:
        pinstate = _swig_property(_hd44780.hd44780_t_pinstate_get, _hd44780.hd44780_t_pinstate_set)
    __swig_setmethods__["datapins"] = _hd44780.hd44780_t_datapins_set
    __swig_getmethods__["datapins"] = _hd44780.hd44780_t_datapins_get
    if _newclass:
        datapins = _swig_property(_hd44780.hd44780_t_datapins_get, _hd44780.hd44780_t_datapins_set)
    __swig_setmethods__["readpins"] = _hd44780.hd44780_t_readpins_set
    __swig_getmethods__["readpins"] = _hd44780.hd44780_t_readpins_get
    if _newclass:
        readpins = _swig_property(_hd44780.hd44780_t_readpins_get, _hd44780.hd44780_t_readpins_set)
    __swig_setmethods__["flags"] = _hd44780.hd44780_t_flags_set
    __swig_getmethods__["flags"] = _hd44780.hd44780_t_flags_get
    if _newclass:
        flags = _swig_property(_hd44780.hd44780_t_flags_get, _hd44780.hd44780_t_flags_set)

    def __init__(self):
        this = _hd44780.new_hd44780_t()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _hd44780.delete_hd44780_t
    __del__ = lambda self: None
hd44780_t_swigregister = _hd44780.hd44780_t_swigregister
hd44780_t_swigregister(hd44780_t)


def hd44780_init(avr, b, width, height):
    return _hd44780.hd44780_init(avr, b, width, height)
hd44780_init = _hd44780.hd44780_init

def hd44780_print(b):
    return _hd44780.hd44780_print(b)
hd44780_print = _hd44780.hd44780_print

def hd44780_set_flag(b, bit, val):
    return _hd44780.hd44780_set_flag(b, bit, val)
hd44780_set_flag = _hd44780.hd44780_set_flag

def hd44780_get_flag(b, bit):
    return _hd44780.hd44780_get_flag(b, bit)
hd44780_get_flag = _hd44780.hd44780_get_flag

def hd44780_get_char(b, x, y):
    return _hd44780.hd44780_get_char(b, x, y)
hd44780_get_char = _hd44780.hd44780_get_char

def hd44780_reset(b):
    return _hd44780.hd44780_reset(b)
hd44780_reset = _hd44780.hd44780_reset
# This file is compatible with both classic and new-style classes.


