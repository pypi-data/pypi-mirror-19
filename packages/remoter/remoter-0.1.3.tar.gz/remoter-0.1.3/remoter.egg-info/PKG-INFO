Metadata-Version: 1.1
Name: remoter
Version: 0.1.3
Summary: Python 3 compatible remote task runner
Home-page: https://github.com/levchik/remoter
Author: Lev Rubel
Author-email: rubel.lev@gmail.com
License: Apache Software License 2.0
Description: =======
        remoter
        =======
        
        
        .. image:: https://img.shields.io/pypi/v/remoter.svg
                :target: https://pypi.python.org/pypi/remoter
        
        .. image:: https://img.shields.io/travis/levchik/remoter.svg
                :target: https://travis-ci.org/levchik/remoter
        
        .. image:: https://readthedocs.org/projects/remoter/badge/?version=latest
                :target: https://remoter.readthedocs.io/en/latest/?badge=latest
                :alt: Documentation Status
        
        .. image:: https://pyup.io/repos/github/levchik/remoter/shield.svg
             :target: https://pyup.io/repos/github/levchik/remoter/
             :alt: Updates
        
        
        Python 3 compatible remote task runner
        
        
        * Free software: Apache Software License 2.0
        * Documentation: https://remoter.readthedocs.io.
        
        Usage
        -----
        
            $ pip instal remoter
            $ vi remoter.yml
            $ remoter tasks run
        
        
        Config
        ------
        
        It consists of two main parts: `servers` and `tasks`.
        In the `servers` section you define hosts with the auth credentials for SSH connection.
        In the `tasks` section you define sequence of tasks to be performed for each server.
        
        Example of what updating a docker-compose django service might look like:
        
            servers:
              test1:
                host: "127.0.0.1"
                port: 22
                username: "docker"
                password: "docker"
            tasks:
              test1:
                - "docker-compose stop"
                - "git pull origin master"
                - "docker-compose run --rm python manage.py migrate"
                - "docker-compose up -d"
        
        
        Roadmap
        -------
        
        Future plans and tasks are in kanban-like projects here:
        
        https://github.com/levchik/remoter/projects
        
        
        Development in docker
        ---------------------
        
        *Build*
        
            $ docker build -t remoter:latest .
        
        *Run tests*
        
            $ docker run --rm -it -v $(pwd):/code remoter:latest make test
        
        *Run cli*
        
            $ docker run --rm -it -v $(pwd):/code remoter:latest python -m remoter.cli
        
        
        Credits
        -------
        
        Implemenetation of test SSH server was taken from https://github.com/carletes/mock-ssh-server
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        
        =======
        History
        =======
        
        0.1.0 (2017-01-18)
        ------------------
        
        * First release on PyPI.
        
        0.1.1 (2017-01-18)
        ------------------
        
        * Messing around with the services CI/check deps/pypi, etc...
        
        0.1.2 (2017-01-18)
        ------------------
        
        * Added twine for easier uploading.
        * Updated all packages based on pyup
        
        0.1.3 (2017-01-24)
        ------------------
        
        * Added ability to invoke basic functionality of task runner (`tasks run`)
        * Added option to specify config file via `--file`
        * Test SSH server is now invoked in tests via py.test fixture
        * Updated README
        * Updated packages based on pyup
        
Keywords: remoter,remote,ssh,update,deploy
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
