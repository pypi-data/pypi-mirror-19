# =====================
# Expression - Cuffnorm
# =====================
---

- slug: cuffnorm
  name: Cuffnorm (2.2.1)
  requirements:
    expression-engine: jinja
  data_name: 'Cuffnorm ({{cuffquant|map("sample_name")|join(", ")|default("?")}})'
  version: 1.0.15
  type: data:expressionset:cuffnorm
  category: analyses
  persistence: CACHED
  description: >
    Generate tables of expression values that are properly normalized for library size.
  input:
    - name: cuffquant
      label: Cuffquant expression file
      type: list:data:cufflinks:cuffquant
    - name: annotation
      label: Annotation (GTF/GFF3)
      type: data:annotation
      description: >
        A transcript annotation file produced by cufflinks, cuffcompare, or other source.
    - name: replicates
      label: Define Groups/Replicates
      type: list:basic:string
      description: >
        Define sample groups and/or sample replicates. For example, a string 1 1 2 2 2 will split 5 samples into 2 groups with 2 and 3 replicate samples in each group, respectively.
    - name: labels
      label: Group labels
      type: list:basic:string
      description: >
        Define labels for each sample group. For example, for samples split into 2 groups (e.g. 1 1 2 2 2), enter two group labels (e.g. group1 group2).
    - name: useERCC
      label: ERCC spike-in normalization
      type: basic:boolean
      default: false
      description: >
        Use ERRCC spike-in controls for normalization.
    - name: threads
      label: Use this many processor threads
      type: basic:integer
      default: 1
      description: >
        Use this many threads to align reads. The default is 1.
  output:
    - name: genes_count
      label: Genes count
      type: basic:file
    - name: genes_fpkm
      label: Genes FPKM
      type: basic:file
    - name: genes_attr
      label: Genes attr table
      type: basic:file
    - name: isoform_count
      label: Isoform count
      type: basic:file
    - name: isoform_fpkm
      label: Isoform FPKM
      type: basic:file
    - name: isoform_attr
      label: Isoform attr table
      type: basic:file
    - name: cds_count
      label: CDS count
      type: basic:file
    - name: cds_fpkm
      label: CDS FPKM
      type: basic:file
    - name: cds_attr
      label: CDS attr table
      type: basic:file
    - name: tss_groups_count
      label: TSS groups count
      type: basic:file
    - name: tss_groups_fpkm
      label: TSS groups FPKM
      type: basic:file
    - name: tss_attr
      label: TSS attr table
      type: basic:file
    - name: run_info
      label: Run info
      type: basic:file
    - name: raw_scatter
      label: FPKM exp scatter plot
      type: basic:file
    - name: boxplot
      label: Boxplot
      type: basic:file
    - name: R_data
      label: All R normalization data
      type: basic:file
    - name: source
      label: Gene ID source
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      experiment='{% for experiment in cuffquant %}{{ experiment.cxb.file }},{% endfor %}'
      replicates='{% for r in replicates %}{{r}},{% endfor %}'
      labels='{% for l in labels %}{{l}},{% endfor %}'

      labels=${labels%?}
      experiment=${experiment%?}
      replicates=${replicates%?}

      experiments=`cufflinks_sample_groups.py ${experiment} ${replicates}`

      re-progress 0.1

      cuffnorm --output-dir ./ --num-threads '{{ threads }}' --labels ${labels} {% if annotation.gtf.file %} '{{ annotation.gtf.file }}' {% elif annotation.gff.file %} '{{ annotation.gff.file }}' {% elif annotation.merged_gtf.file %} '{{ annotation.merged_gtf.file }}' {% endif %} ${experiments}

      re-checkrc 'Cuffnorm analysis failed.'
      re-progress 0.8

      Rscript -e 'library(RNASeqT)' -e 'normalizeRNASeq(geneFPKMFile = "'genes.fpkm_table'", name = "'cuffnorm'", groupString = "'${labels}'", useERCC = "'{{useERCC|yesno("TRUE", "FALSE")}}'")'

      {% if useERCC %}
        {% for exp in cuffquant %}
          S_NAME="{{exp|sample_name}}"
          parse_cuffnorm.py cuffnorm_all_fpkm_exprs_norm.txt {{loop.index0}} -n
          mv expression.tab ${S_NAME}_expression.tab
          re-export "${S_NAME}_expression.tab"
          echo 'run {"process":"upload-expression-cuffnorm","input":{"exp_type":"FPKM","cxb":{{exp|id}},"exp":'\"${S_NAME}_expression.tab\"'}}'
        {% endfor %}
      {% else %}
        {% for exp in cuffquant %}
          S_NAME="{{exp|sample_name}}"
          parse_cuffnorm.py cuffnorm_all_fpkm_exprs_raw.txt {{loop.index0}} -n
          mv expression.tab ${S_NAME}_expression.tab
          re-export "${S_NAME}_expression.tab"
          echo 'run {"process":"upload-expression-cuffnorm","input":{"exp_type":"FPKM","cxb":{{exp|id}},"exp":'\"${S_NAME}_expression.tab\"'}}'
        {% endfor %}
      {% endif %}

      zip R_data.zip cuffnorm_*

      re-save-file genes_count genes.count_table
      re-save-file genes_fpkm genes.fpkm_table
      re-save-file genes_attr genes.attr_table
      re-save-file isoform_count isoforms.count_table
      re-save-file isoform_fpkm isoforms.fpkm_table
      re-save-file isoform_attr isoforms.attr_table
      re-save-file cds_count cds.count_table
      re-save-file cds_fpkm cds.fpkm_table
      re-save-file cds_attr cds.attr_table
      re-save-file tss_groups_count tss_groups.count_table
      re-save-file tss_groups_fpkm tss_groups.fpkm_table
      re-save-file tss_attr tss_groups.attr_table
      re-save-file run_info run.info
      re-save-file raw_scatter cuffnorm_all_fpkm_exprs_raw_scatter.png
      re-save-file boxplot cuffnorm_exprs_boxplot.pdf
      re-save-file R_data R_data.zip
      re-save source "{{annotation.source}}"
