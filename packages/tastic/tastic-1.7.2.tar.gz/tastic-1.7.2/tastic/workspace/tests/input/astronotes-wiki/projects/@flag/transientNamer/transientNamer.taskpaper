transientNamer:
./transientNamer.md
	
	- release and add to readthedocs
	- check install using pip install on root python (non venv)
	- add sublime snippet info
	- add sublime snippets to sublime package control @wait
	- workout how to monitor failed sql scripts in auto importer



Archive:
	- removed the build dir and other unwanted files from transientNamer — push to github @done(2016-10-20)
	- add a download counter for the search @done(2016-09-21)
	Mysql Render: @done(2016-09-21)
	Documentation: @done(2016-09-21)
	- add ‘check issues’ to open github issues URL when testing for new python package version release @done(2016-09-21)
	- update fundaments version on pip — small change @done(2016-09-21)
	- clean up sublime snippets @done(2016-09-21)
	- add a create statement to the file exports @done(2016-09-21) @project(Mysql Render)
	- have the mysql inserts append the result type to the table names @done(2016-09-19)
	- paginate if more than 1000 sources returned @done(2016-09-19)
	- have update statement have a dateLastModifed  and updated column @done(2016-09-19)
	- walk through the search module and add docstrings and sublime snippets @done(2016-09-20) @project(Documentation)
	- write up a tutorial for the tnr @done(2016-09-20) @project(Documentation)
	- build a named search @done(2016-09-19)
	- build a ‘inLastDays’ search @done(2016-09-19)
	- create a new related files table @done(2016-09-16)
		- tnsID, spectra/phot related, filetype, URL, filename  @done(2016-09-16)
	- return more than one result - increase the output to 5000 @done(2016-09-16)
	- try and find classification related files @done(2016-09-16)
	- try and find a classification with a fits file @done(2016-09-16)
	- make sure related file does not screw up photometry @done(2016-09-16)
	- order the results in the table columns … important first then alphabetical order @done(2016-09-16)
	- add separation from input coordinates @done(2016-09-16)
	- order rows in the source data by the separation @done(2016-09-16)
	- change the filepath to directory path and let the namer decide the file names @done(2016-09-16)
	- allow a decimal degree search @done(2016-09-16)
	- give table titles in terminal output @done(2016-09-16)
	- build a search function that returns  @done(2016-09-15) @project(Search)
		- source data @flag  @done(2016-09-15)
		- photometry data, and  @done(2016-09-15)
		- spectral data @done(2016-09-15)
	- give some extra info @done(2016-09-15) @project(Search)
	- have duplicate rows (different IDs) bundled into one row @done(2016-09-15) @project(Tweaks)
	- return the URL alongside result @done(2016-09-15) @project(Tweaks)
	- build to cl-tool for the coordinate search @done(2016-09-15) @project(CL-Tool)
	Save to file: @done(2016-09-15)
	- add ability in transientName to save results to file @done(2016-09-15) @project(Save to file)
	Json/yaml/mysql/markdown renderer: @done(2016-09-15)
		- add to transientNamer @flag @done(2016-09-15)
		- add to sloancone @done(2016-09-15)
		- add to neddy @done(2016-09-15)
		- add to sherlock @done(2016-09-15)
	- check todos in fundamentals docs, tidy and release new version @done(2016-09-14)
	- check todos in sloancone docs, tidy and release new version @done(2016-09-14)
	
	Renderer: @done(2016-09-14)
		- add a renderer to fundamentals that can take a list of dictionaries and @done(2016-09-14)
			- render as yaml @flag @done(2016-09-14)
	- replace “from fundamentals.files import list_of_dictionaries_to_csv” with new @done(2016-09-14)
		- commit sloancone changes @done(2016-09-14)
	
	- convert the fundamentals files module to renderer @done(2016-09-14) @project(Renderer)
	- render as json @done(2016-09-14) @project(Renderer)
	- allow to save to file @done(2016-09-14) @project(Renderer)
	- pickle the results from a TNS query and load into the test of the fundamentals renderer @done(2016-09-14) @project(Renderer)
	- render as SQL inserts given a table name @done(2016-09-14) @project(Renderer)
	- render as csv @done(2016-09-14) @project(Renderer)
	- render as human readable @done(2016-09-14) @project(Renderer)