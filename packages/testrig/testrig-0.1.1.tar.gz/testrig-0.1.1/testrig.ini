[DEFAULT]
# Default values for various options in the following sections.  The
# sections below can also define these keys to override the defaults.
env=virtualenv
old=numpy==1.9.2
new=Cython==0.24.1 git+https://github.com/numpy/numpy@master

[scipy]
base=nose tempita Cython==0.24.1 scipy
run=python -c 'import scipy; scipy.test(verbose=2, extra_argv=["--exe", "--with-xunit", "--xunit-file=junit.xml"])'
parser=junit

[pandas]
base=nose tempita Cython==0.24.1 scipy==0.17.0 numexpr pandas
run=nosetests -v pandas --with-xunit --xunit-file=junit.xml
parser=junit

[sklearn]
base=nose tempita Cython==0.24.1 scipy==0.17.0 scikit-learn
run=nosetests -v sklearn --with-xunit --xunit-file=junit.xml
parser=junit

[skimage]
base=nose tempita Cython==0.24.1 scipy==0.17.0 scikit-image
run=python -c 'import matplotlib, skimage; matplotlib.use("Agg"); skimage.test(verbose=1)'
parser=nose

[astropy]
base=pytest tempita Cython==0.24.1 scipy==0.17.0 astropy
run=python -c 'import astropy; astropy.test(args="--junit-xml=junit.xml -s -v --tb=native")'
parser=junit

[statsmodels]
base=nose tempita Cython==0.24.1 scipy==0.17.0 statsmodels
run=python -c 'import statsmodels; statsmodels.test(verbose=2, extra_argv=["--exe", "--with-xunit", "--xunit-file=junit.xml"])'
parser=junit

[matplotlib]
base=nose mock tempita Cython==0.24.1 matplotlib
run=python -c 'import matplotlib, nose; matplotlib.use("agg"); nose.main(defaultTest=matplotlib.default_test_modules, argv=["python", "--with-xunit", "--xunit-file=junit.xml", "-v"])'
parser=junit
envvars=
  MPLSETUPCFG=$DIR/matplotlib-setup.cfg

[sunpy]
base=pytest tempita Cython==0.24.1 scipy==0.17.0 astropy==1.1.1 sqlalchemy scikit-image suds requests bs4 attrs sunpy
run=py.test --junit-xml=junit.xml -v -s --tb=native --pyargs sunpy
parser=junit

[numba]
base=pytest enum34 llvmlite numba
run=py.test --junit-xml=junit.xml -v -s --tb=native --continue-on-collection-errors --pyargs numba
parser=junit

[asdf]
base=pytest astropy pandas asdf
# NB. specifying -s makes the test suite fail, so we can't get information about warnings emitted
run=python -c 'import asdf; asdf.test(args="--junit-xml=junit.xml -v --tb=native")'
parser=junit
